{"version":3,"file":"index.es.js","sources":["../node_modules/immer/dist/immer.esm.js","../node_modules/redux/es/redux.js","../node_modules/reselect/es/index.js","../node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js","../node_modules/nanoid/index.prod.js","../node_modules/@protobufjs/aspromise/index.js","../node_modules/@protobufjs/base64/index.js","../node_modules/@protobufjs/eventemitter/index.js","../node_modules/@protobufjs/float/index.js","../node_modules/@protobufjs/inquire/index.js","../node_modules/@protobufjs/utf8/index.js","../node_modules/@protobufjs/pool/index.js","../node_modules/protobufjs/src/util/longbits.js","../node_modules/protobufjs/src/util/minimal.js","../node_modules/protobufjs/src/writer.js","../node_modules/protobufjs/src/writer_buffer.js","../node_modules/protobufjs/src/reader.js","../node_modules/protobufjs/src/reader_buffer.js","../node_modules/protobufjs/src/rpc/service.js","../node_modules/protobufjs/src/rpc.js","../node_modules/protobufjs/src/roots.js","../node_modules/protobufjs/src/index-minimal.js","../node_modules/protobufjs/minimal.js","../src/protobuf/index.js","../src/models.ts","../src/types.ts","../src/client/roomSlice/index.ts","../src/client/index.ts","../src/protobuf/state.ts","../src/protobuf/actions.ts","../src/client/network.ts","../../../node_modules/eventemitter3/index.js","../src/server/roomSlice/util.ts","../src/server/roomSlice/diff.ts","../src/server/roomSlice/index.ts","../src/react/context.ts","../src/react/provider.tsx","../src/react/hooks/actions/useSendChatMessage.ts","../src/react/hooks/actions/useJoinClass.ts","../src/react/hooks/actions/useLeaveClass.ts","../src/react/hooks/actions/useSetContent.ts","../src/react/hooks/data/useConnectionState.ts","../src/react/hooks/useNetwork.ts","../src/react/hooks/data/useMessages.ts"],"sourcesContent":["function n(n){for(var t=arguments.length,r=Array(t>1?t-1:0),e=1;e<t;e++)r[e-1]=arguments[e];if(\"production\"!==process.env.NODE_ENV){var i=Y[n],o=i?\"function\"==typeof i?i.apply(null,r):i:\"unknown error nr: \"+n;throw Error(\"[Immer] \"+o)}throw Error(\"[Immer] minified error nr: \"+n+(r.length?\" \"+r.map((function(n){return\"'\"+n+\"'\"})).join(\",\"):\"\")+\". Find the full error at: https://bit.ly/3cXEKWf\")}function t(n){return!!n&&!!n[Q]}function r(n){return!!n&&(function(n){if(!n||\"object\"!=typeof n)return!1;var t=Object.getPrototypeOf(n);if(null===t)return!0;var r=Object.hasOwnProperty.call(t,\"constructor\")&&t.constructor;return r===Object||\"function\"==typeof r&&Function.toString.call(r)===Z}(n)||Array.isArray(n)||!!n[L]||!!n.constructor[L]||s(n)||v(n))}function e(r){return t(r)||n(23,r),r[Q].t}function i(n,t,r){void 0===r&&(r=!1),0===o(n)?(r?Object.keys:nn)(n).forEach((function(e){r&&\"symbol\"==typeof e||t(e,n[e],n)})):n.forEach((function(r,e){return t(e,r,n)}))}function o(n){var t=n[Q];return t?t.i>3?t.i-4:t.i:Array.isArray(n)?1:s(n)?2:v(n)?3:0}function u(n,t){return 2===o(n)?n.has(t):Object.prototype.hasOwnProperty.call(n,t)}function a(n,t){return 2===o(n)?n.get(t):n[t]}function f(n,t,r){var e=o(n);2===e?n.set(t,r):3===e?(n.delete(t),n.add(r)):n[t]=r}function c(n,t){return n===t?0!==n||1/n==1/t:n!=n&&t!=t}function s(n){return X&&n instanceof Map}function v(n){return q&&n instanceof Set}function p(n){return n.o||n.t}function l(n){if(Array.isArray(n))return Array.prototype.slice.call(n);var t=tn(n);delete t[Q];for(var r=nn(t),e=0;e<r.length;e++){var i=r[e],o=t[i];!1===o.writable&&(o.writable=!0,o.configurable=!0),(o.get||o.set)&&(t[i]={configurable:!0,writable:!0,enumerable:o.enumerable,value:n[i]})}return Object.create(Object.getPrototypeOf(n),t)}function d(n,e){return void 0===e&&(e=!1),y(n)||t(n)||!r(n)?n:(o(n)>1&&(n.set=n.add=n.clear=n.delete=h),Object.freeze(n),e&&i(n,(function(n,t){return d(t,!0)}),!0),n)}function h(){n(2)}function y(n){return null==n||\"object\"!=typeof n||Object.isFrozen(n)}function b(t){var r=rn[t];return r||n(18,t),r}function m(n,t){rn[n]||(rn[n]=t)}function _(){return\"production\"===process.env.NODE_ENV||U||n(0),U}function j(n,t){t&&(b(\"Patches\"),n.u=[],n.s=[],n.v=t)}function O(n){g(n),n.p.forEach(S),n.p=null}function g(n){n===U&&(U=n.l)}function w(n){return U={p:[],l:U,h:n,m:!0,_:0}}function S(n){var t=n[Q];0===t.i||1===t.i?t.j():t.O=!0}function P(t,e){e._=e.p.length;var i=e.p[0],o=void 0!==t&&t!==i;return e.h.g||b(\"ES5\").S(e,t,o),o?(i[Q].P&&(O(e),n(4)),r(t)&&(t=M(e,t),e.l||x(e,t)),e.u&&b(\"Patches\").M(i[Q],t,e.u,e.s)):t=M(e,i,[]),O(e),e.u&&e.v(e.u,e.s),t!==H?t:void 0}function M(n,t,r){if(y(t))return t;var e=t[Q];if(!e)return i(t,(function(i,o){return A(n,e,t,i,o,r)}),!0),t;if(e.A!==n)return t;if(!e.P)return x(n,e.t,!0),e.t;if(!e.I){e.I=!0,e.A._--;var o=4===e.i||5===e.i?e.o=l(e.k):e.o;i(3===e.i?new Set(o):o,(function(t,i){return A(n,e,o,t,i,r)})),x(n,o,!1),r&&n.u&&b(\"Patches\").R(e,r,n.u,n.s)}return e.o}function A(e,i,o,a,c,s){if(\"production\"!==process.env.NODE_ENV&&c===o&&n(5),t(c)){var v=M(e,c,s&&i&&3!==i.i&&!u(i.D,a)?s.concat(a):void 0);if(f(o,a,v),!t(v))return;e.m=!1}if(r(c)&&!y(c)){if(!e.h.F&&e._<1)return;M(e,c),i&&i.A.l||x(e,c)}}function x(n,t,r){void 0===r&&(r=!1),n.h.F&&n.m&&d(t,r)}function z(n,t){var r=n[Q];return(r?p(r):n)[t]}function I(n,t){if(t in n)for(var r=Object.getPrototypeOf(n);r;){var e=Object.getOwnPropertyDescriptor(r,t);if(e)return e;r=Object.getPrototypeOf(r)}}function k(n){n.P||(n.P=!0,n.l&&k(n.l))}function E(n){n.o||(n.o=l(n.t))}function R(n,t,r){var e=s(t)?b(\"MapSet\").N(t,r):v(t)?b(\"MapSet\").T(t,r):n.g?function(n,t){var r=Array.isArray(n),e={i:r?1:0,A:t?t.A:_(),P:!1,I:!1,D:{},l:t,t:n,k:null,o:null,j:null,C:!1},i=e,o=en;r&&(i=[e],o=on);var u=Proxy.revocable(i,o),a=u.revoke,f=u.proxy;return e.k=f,e.j=a,f}(t,r):b(\"ES5\").J(t,r);return(r?r.A:_()).p.push(e),e}function D(e){return t(e)||n(22,e),function n(t){if(!r(t))return t;var e,u=t[Q],c=o(t);if(u){if(!u.P&&(u.i<4||!b(\"ES5\").K(u)))return u.t;u.I=!0,e=F(t,c),u.I=!1}else e=F(t,c);return i(e,(function(t,r){u&&a(u.t,t)===r||f(e,t,n(r))})),3===c?new Set(e):e}(e)}function F(n,t){switch(t){case 2:return new Map(n);case 3:return Array.from(n)}return l(n)}function N(){function r(n,t){var r=s[n];return r?r.enumerable=t:s[n]=r={configurable:!0,enumerable:t,get:function(){var t=this[Q];return\"production\"!==process.env.NODE_ENV&&f(t),en.get(t,n)},set:function(t){var r=this[Q];\"production\"!==process.env.NODE_ENV&&f(r),en.set(r,n,t)}},r}function e(n){for(var t=n.length-1;t>=0;t--){var r=n[t][Q];if(!r.P)switch(r.i){case 5:a(r)&&k(r);break;case 4:o(r)&&k(r)}}}function o(n){for(var t=n.t,r=n.k,e=nn(r),i=e.length-1;i>=0;i--){var o=e[i];if(o!==Q){var a=t[o];if(void 0===a&&!u(t,o))return!0;var f=r[o],s=f&&f[Q];if(s?s.t!==a:!c(f,a))return!0}}var v=!!t[Q];return e.length!==nn(t).length+(v?0:1)}function a(n){var t=n.k;if(t.length!==n.t.length)return!0;var r=Object.getOwnPropertyDescriptor(t,t.length-1);return!(!r||r.get)}function f(t){t.O&&n(3,JSON.stringify(p(t)))}var s={};m(\"ES5\",{J:function(n,t){var e=Array.isArray(n),i=function(n,t){if(n){for(var e=Array(t.length),i=0;i<t.length;i++)Object.defineProperty(e,\"\"+i,r(i,!0));return e}var o=tn(t);delete o[Q];for(var u=nn(o),a=0;a<u.length;a++){var f=u[a];o[f]=r(f,n||!!o[f].enumerable)}return Object.create(Object.getPrototypeOf(t),o)}(e,n),o={i:e?5:4,A:t?t.A:_(),P:!1,I:!1,D:{},l:t,t:n,k:i,o:null,O:!1,C:!1};return Object.defineProperty(i,Q,{value:o,writable:!0}),i},S:function(n,r,o){o?t(r)&&r[Q].A===n&&e(n.p):(n.u&&function n(t){if(t&&\"object\"==typeof t){var r=t[Q];if(r){var e=r.t,o=r.k,f=r.D,c=r.i;if(4===c)i(o,(function(t){t!==Q&&(void 0!==e[t]||u(e,t)?f[t]||n(o[t]):(f[t]=!0,k(r)))})),i(e,(function(n){void 0!==o[n]||u(o,n)||(f[n]=!1,k(r))}));else if(5===c){if(a(r)&&(k(r),f.length=!0),o.length<e.length)for(var s=o.length;s<e.length;s++)f[s]=!1;else for(var v=e.length;v<o.length;v++)f[v]=!0;for(var p=Math.min(o.length,e.length),l=0;l<p;l++)void 0===f[l]&&n(o[l])}}}}(n.p[0]),e(n.p))},K:function(n){return 4===n.i?o(n):a(n)}})}function T(){function e(n){if(!r(n))return n;if(Array.isArray(n))return n.map(e);if(s(n))return new Map(Array.from(n.entries()).map((function(n){return[n[0],e(n[1])]})));if(v(n))return new Set(Array.from(n).map(e));var t=Object.create(Object.getPrototypeOf(n));for(var i in n)t[i]=e(n[i]);return u(n,L)&&(t[L]=n[L]),t}function f(n){return t(n)?e(n):n}var c=\"add\";m(\"Patches\",{$:function(t,r){return r.forEach((function(r){for(var i=r.path,u=r.op,f=t,s=0;s<i.length-1;s++){var v=o(f),p=i[s];0!==v&&1!==v||\"__proto__\"!==p&&\"constructor\"!==p||n(24),\"function\"==typeof f&&\"prototype\"===p&&n(24),\"object\"!=typeof(f=a(f,p))&&n(15,i.join(\"/\"))}var l=o(f),d=e(r.value),h=i[i.length-1];switch(u){case\"replace\":switch(l){case 2:return f.set(h,d);case 3:n(16);default:return f[h]=d}case c:switch(l){case 1:return f.splice(h,0,d);case 2:return f.set(h,d);case 3:return f.add(d);default:return f[h]=d}case\"remove\":switch(l){case 1:return f.splice(h,1);case 2:return f.delete(h);case 3:return f.delete(r.value);default:return delete f[h]}default:n(17,u)}})),t},R:function(n,t,r,e){switch(n.i){case 0:case 4:case 2:return function(n,t,r,e){var o=n.t,s=n.o;i(n.D,(function(n,i){var v=a(o,n),p=a(s,n),l=i?u(o,n)?\"replace\":c:\"remove\";if(v!==p||\"replace\"!==l){var d=t.concat(n);r.push(\"remove\"===l?{op:l,path:d}:{op:l,path:d,value:p}),e.push(l===c?{op:\"remove\",path:d}:\"remove\"===l?{op:c,path:d,value:f(v)}:{op:\"replace\",path:d,value:f(v)})}}))}(n,t,r,e);case 5:case 1:return function(n,t,r,e){var i=n.t,o=n.D,u=n.o;if(u.length<i.length){var a=[u,i];i=a[0],u=a[1];var s=[e,r];r=s[0],e=s[1]}for(var v=0;v<i.length;v++)if(o[v]&&u[v]!==i[v]){var p=t.concat([v]);r.push({op:\"replace\",path:p,value:f(u[v])}),e.push({op:\"replace\",path:p,value:f(i[v])})}for(var l=i.length;l<u.length;l++){var d=t.concat([l]);r.push({op:c,path:d,value:f(u[l])})}i.length<u.length&&e.push({op:\"replace\",path:t.concat([\"length\"]),value:i.length})}(n,t,r,e);case 3:return function(n,t,r,e){var i=n.t,o=n.o,u=0;i.forEach((function(n){if(!o.has(n)){var i=t.concat([u]);r.push({op:\"remove\",path:i,value:n}),e.unshift({op:c,path:i,value:n})}u++})),u=0,o.forEach((function(n){if(!i.has(n)){var o=t.concat([u]);r.push({op:c,path:o,value:n}),e.unshift({op:\"remove\",path:o,value:n})}u++}))}(n,t,r,e)}},M:function(n,t,r,e){r.push({op:\"replace\",path:[],value:t===H?void 0:t}),e.push({op:\"replace\",path:[],value:n.t})}})}function C(){function t(n,t){function r(){this.constructor=n}a(n,t),n.prototype=(r.prototype=t.prototype,new r)}function e(n){n.o||(n.D=new Map,n.o=new Map(n.t))}function o(n){n.o||(n.o=new Set,n.t.forEach((function(t){if(r(t)){var e=R(n.A.h,t,n);n.p.set(t,e),n.o.add(e)}else n.o.add(t)})))}function u(t){t.O&&n(3,JSON.stringify(p(t)))}var a=function(n,t){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)t.hasOwnProperty(r)&&(n[r]=t[r])})(n,t)},f=function(){function n(n,t){return this[Q]={i:2,l:t,A:t?t.A:_(),P:!1,I:!1,o:void 0,D:void 0,t:n,k:this,C:!1,O:!1},this}t(n,Map);var o=n.prototype;return Object.defineProperty(o,\"size\",{get:function(){return p(this[Q]).size}}),o.has=function(n){return p(this[Q]).has(n)},o.set=function(n,t){var r=this[Q];return u(r),p(r).has(n)&&p(r).get(n)===t||(e(r),k(r),r.D.set(n,!0),r.o.set(n,t),r.D.set(n,!0)),this},o.delete=function(n){if(!this.has(n))return!1;var t=this[Q];return u(t),e(t),k(t),t.D.set(n,!1),t.o.delete(n),!0},o.clear=function(){var n=this[Q];u(n),p(n).size&&(e(n),k(n),n.D=new Map,i(n.t,(function(t){n.D.set(t,!1)})),n.o.clear())},o.forEach=function(n,t){var r=this;p(this[Q]).forEach((function(e,i){n.call(t,r.get(i),i,r)}))},o.get=function(n){var t=this[Q];u(t);var i=p(t).get(n);if(t.I||!r(i))return i;if(i!==t.t.get(n))return i;var o=R(t.A.h,i,t);return e(t),t.o.set(n,o),o},o.keys=function(){return p(this[Q]).keys()},o.values=function(){var n,t=this,r=this.keys();return(n={})[V]=function(){return t.values()},n.next=function(){var n=r.next();return n.done?n:{done:!1,value:t.get(n.value)}},n},o.entries=function(){var n,t=this,r=this.keys();return(n={})[V]=function(){return t.entries()},n.next=function(){var n=r.next();if(n.done)return n;var e=t.get(n.value);return{done:!1,value:[n.value,e]}},n},o[V]=function(){return this.entries()},n}(),c=function(){function n(n,t){return this[Q]={i:3,l:t,A:t?t.A:_(),P:!1,I:!1,o:void 0,t:n,k:this,p:new Map,O:!1,C:!1},this}t(n,Set);var r=n.prototype;return Object.defineProperty(r,\"size\",{get:function(){return p(this[Q]).size}}),r.has=function(n){var t=this[Q];return u(t),t.o?!!t.o.has(n)||!(!t.p.has(n)||!t.o.has(t.p.get(n))):t.t.has(n)},r.add=function(n){var t=this[Q];return u(t),this.has(n)||(o(t),k(t),t.o.add(n)),this},r.delete=function(n){if(!this.has(n))return!1;var t=this[Q];return u(t),o(t),k(t),t.o.delete(n)||!!t.p.has(n)&&t.o.delete(t.p.get(n))},r.clear=function(){var n=this[Q];u(n),p(n).size&&(o(n),k(n),n.o.clear())},r.values=function(){var n=this[Q];return u(n),o(n),n.o.values()},r.entries=function(){var n=this[Q];return u(n),o(n),n.o.entries()},r.keys=function(){return this.values()},r[V]=function(){return this.values()},r.forEach=function(n,t){for(var r=this.values(),e=r.next();!e.done;)n.call(t,e.value,e.value,this),e=r.next()},n}();m(\"MapSet\",{N:function(n,t){return new f(n,t)},T:function(n,t){return new c(n,t)}})}function J(){N(),C(),T()}function K(n){return n}function $(n){return n}var G,U,W=\"undefined\"!=typeof Symbol&&\"symbol\"==typeof Symbol(\"x\"),X=\"undefined\"!=typeof Map,q=\"undefined\"!=typeof Set,B=\"undefined\"!=typeof Proxy&&void 0!==Proxy.revocable&&\"undefined\"!=typeof Reflect,H=W?Symbol.for(\"immer-nothing\"):((G={})[\"immer-nothing\"]=!0,G),L=W?Symbol.for(\"immer-draftable\"):\"__$immer_draftable\",Q=W?Symbol.for(\"immer-state\"):\"__$immer_state\",V=\"undefined\"!=typeof Symbol&&Symbol.iterator||\"@@iterator\",Y={0:\"Illegal state\",1:\"Immer drafts cannot have computed properties\",2:\"This object has been frozen and should not be mutated\",3:function(n){return\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \"+n},4:\"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",5:\"Immer forbids circular references\",6:\"The first or second argument to `produce` must be a function\",7:\"The third argument to `produce` must be a function or undefined\",8:\"First argument to `createDraft` must be a plain object, an array, or an immerable object\",9:\"First argument to `finishDraft` must be a draft returned by `createDraft`\",10:\"The given draft is already finalized\",11:\"Object.defineProperty() cannot be used on an Immer draft\",12:\"Object.setPrototypeOf() cannot be used on an Immer draft\",13:\"Immer only supports deleting array indices\",14:\"Immer only supports setting array indices and the 'length' property\",15:function(n){return\"Cannot apply patch, path doesn't resolve: \"+n},16:'Sets cannot have \"replace\" patches.',17:function(n){return\"Unsupported patch operation: \"+n},18:function(n){return\"The plugin for '\"+n+\"' has not been loaded into Immer. To enable the plugin, import and call `enable\"+n+\"()` when initializing your application.\"},20:\"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",21:function(n){return\"produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '\"+n+\"'\"},22:function(n){return\"'current' expects a draft, got: \"+n},23:function(n){return\"'original' expects a draft, got: \"+n},24:\"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"},Z=\"\"+Object.prototype.constructor,nn=\"undefined\"!=typeof Reflect&&Reflect.ownKeys?Reflect.ownKeys:void 0!==Object.getOwnPropertySymbols?function(n){return Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n))}:Object.getOwnPropertyNames,tn=Object.getOwnPropertyDescriptors||function(n){var t={};return nn(n).forEach((function(r){t[r]=Object.getOwnPropertyDescriptor(n,r)})),t},rn={},en={get:function(n,t){if(t===Q)return n;var e=p(n);if(!u(e,t))return function(n,t,r){var e,i=I(t,r);return i?\"value\"in i?i.value:null===(e=i.get)||void 0===e?void 0:e.call(n.k):void 0}(n,e,t);var i=e[t];return n.I||!r(i)?i:i===z(n.t,t)?(E(n),n.o[t]=R(n.A.h,i,n)):i},has:function(n,t){return t in p(n)},ownKeys:function(n){return Reflect.ownKeys(p(n))},set:function(n,t,r){var e=I(p(n),t);if(null==e?void 0:e.set)return e.set.call(n.k,r),!0;if(!n.P){var i=z(p(n),t),o=null==i?void 0:i[Q];if(o&&o.t===r)return n.o[t]=r,n.D[t]=!1,!0;if(c(r,i)&&(void 0!==r||u(n.t,t)))return!0;E(n),k(n)}return n.o[t]===r&&\"number\"!=typeof r&&(void 0!==r||t in n.o)||(n.o[t]=r,n.D[t]=!0,!0)},deleteProperty:function(n,t){return void 0!==z(n.t,t)||t in n.t?(n.D[t]=!1,E(n),k(n)):delete n.D[t],n.o&&delete n.o[t],!0},getOwnPropertyDescriptor:function(n,t){var r=p(n),e=Reflect.getOwnPropertyDescriptor(r,t);return e?{writable:!0,configurable:1!==n.i||\"length\"!==t,enumerable:e.enumerable,value:r[t]}:e},defineProperty:function(){n(11)},getPrototypeOf:function(n){return Object.getPrototypeOf(n.t)},setPrototypeOf:function(){n(12)}},on={};i(en,(function(n,t){on[n]=function(){return arguments[0]=arguments[0][0],t.apply(this,arguments)}})),on.deleteProperty=function(t,r){return\"production\"!==process.env.NODE_ENV&&isNaN(parseInt(r))&&n(13),en.deleteProperty.call(this,t[0],r)},on.set=function(t,r,e){return\"production\"!==process.env.NODE_ENV&&\"length\"!==r&&isNaN(parseInt(r))&&n(14),en.set.call(this,t[0],r,e,t[0])};var un=function(){function e(t){var e=this;this.g=B,this.F=!0,this.produce=function(t,i,o){if(\"function\"==typeof t&&\"function\"!=typeof i){var u=i;i=t;var a=e;return function(n){var t=this;void 0===n&&(n=u);for(var r=arguments.length,e=Array(r>1?r-1:0),o=1;o<r;o++)e[o-1]=arguments[o];return a.produce(n,(function(n){var r;return(r=i).call.apply(r,[t,n].concat(e))}))}}var f;if(\"function\"!=typeof i&&n(6),void 0!==o&&\"function\"!=typeof o&&n(7),r(t)){var c=w(e),s=R(e,t,void 0),v=!0;try{f=i(s),v=!1}finally{v?O(c):g(c)}return\"undefined\"!=typeof Promise&&f instanceof Promise?f.then((function(n){return j(c,o),P(n,c)}),(function(n){throw O(c),n})):(j(c,o),P(f,c))}if(!t||\"object\"!=typeof t){if((f=i(t))===H)return;return void 0===f&&(f=t),e.F&&d(f,!0),f}n(21,t)},this.produceWithPatches=function(n,t){return\"function\"==typeof n?function(t){for(var r=arguments.length,i=Array(r>1?r-1:0),o=1;o<r;o++)i[o-1]=arguments[o];return e.produceWithPatches(t,(function(t){return n.apply(void 0,[t].concat(i))}))}:[e.produce(n,t,(function(n,t){r=n,i=t})),r,i];var r,i},\"boolean\"==typeof(null==t?void 0:t.useProxies)&&this.setUseProxies(t.useProxies),\"boolean\"==typeof(null==t?void 0:t.autoFreeze)&&this.setAutoFreeze(t.autoFreeze)}var i=e.prototype;return i.createDraft=function(e){r(e)||n(8),t(e)&&(e=D(e));var i=w(this),o=R(this,e,void 0);return o[Q].C=!0,g(i),o},i.finishDraft=function(t,r){var e=t&&t[Q];\"production\"!==process.env.NODE_ENV&&(e&&e.C||n(9),e.I&&n(10));var i=e.A;return j(i,r),P(void 0,i)},i.setAutoFreeze=function(n){this.F=n},i.setUseProxies=function(t){t&&!B&&n(20),this.g=t},i.applyPatches=function(n,r){var e;for(e=r.length-1;e>=0;e--){var i=r[e];if(0===i.path.length&&\"replace\"===i.op){n=i.value;break}}var o=b(\"Patches\").$;return t(n)?o(n,r):this.produce(n,(function(n){return o(n,r.slice(e+1))}))},e}(),an=new un,fn=an.produce,cn=an.produceWithPatches.bind(an),sn=an.setAutoFreeze.bind(an),vn=an.setUseProxies.bind(an),pn=an.applyPatches.bind(an),ln=an.createDraft.bind(an),dn=an.finishDraft.bind(an);export default fn;export{un as Immer,pn as applyPatches,K as castDraft,$ as castImmutable,ln as createDraft,D as current,J as enableAllPlugins,N as enableES5,C as enableMapSet,T as enablePatches,dn as finishDraft,d as freeze,L as immerable,t as isDraft,r as isDraftable,H as nothing,e as original,fn as produce,cn as produceWithPatches,sn as setAutoFreeze,vn as setUseProxies};\n//# sourceMappingURL=immer.esm.js.map\n","import _objectSpread from '@babel/runtime/helpers/esm/objectSpread2';\n\n/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */\nfunction formatProdErrorMessage(code) {\n  return \"Minified Redux error #\" + code + \"; visit https://redux.js.org/Errors?code=\" + code + \" for the full message or \" + 'use the non-minified dev environment for full errors. ';\n}\n\n// Inlined version of the `symbol-observable` polyfill\nvar $$observable = (function () {\n  return typeof Symbol === 'function' && Symbol.observable || '@@observable';\n})();\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of\nfunction miniKindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n  var type = typeof val;\n\n  switch (type) {\n    case 'boolean':\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'function':\n      {\n        return type;\n      }\n  }\n\n  if (Array.isArray(val)) return 'array';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  var constructorName = ctorName(val);\n\n  switch (constructorName) {\n    case 'Symbol':\n    case 'Promise':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Map':\n    case 'Set':\n      return constructorName;\n  } // other\n\n\n  return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n}\n\nfunction ctorName(val) {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\n\nfunction isError(val) {\n  return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';\n}\n\nfunction kindOf(val) {\n  var typeOfVal = typeof val;\n\n  if (process.env.NODE_ENV !== 'production') {\n    typeOfVal = miniKindOf(val);\n  }\n\n  return typeOfVal;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(0) : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(1) : \"Expected the enhancer to be a function. Instead, received: '\" + kindOf(enhancer) + \"'\");\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(2) : \"Expected the root reducer to be a function. Instead, received: '\" + kindOf(reducer) + \"'\");\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(3) : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(4) : \"Expected the listener to be a function. Instead, received: '\" + kindOf(listener) + \"'\");\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(5) : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(6) : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(7) : \"Actions must be plain objects. Instead, the actual type was: '\" + kindOf(action) + \"'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.\");\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(8) : 'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.');\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(9) : 'Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(10) : \"Expected the nextReducer to be a function. Instead, received: '\" + kindOf(nextReducer));\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(11) : \"Expected the observer to be an object. Instead, received: '\" + kindOf(observer) + \"'\");\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + kindOf(inputState) + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(12) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(13) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle '\" + ActionTypes.INIT + \"' or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var actionType = action && action.type;\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(14) : \"When called with an action of type \" + (actionType ? \"\\\"\" + String(actionType) + \"\\\"\" : '(unknown type)') + \", the slice reducer for key \\\"\" + _key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\");\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(16) : \"bindActionCreators expected an object or a function, but instead received: '\" + kindOf(actionCreators) + \"'. \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(15) : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread(_objectSpread({}, store), {}, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore };\n","function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nexport var createSelector = createSelectorCreator(defaultMemoize);\n\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nvar __defProp = Object.defineProperty;\r\nvar __defProps = Object.defineProperties;\r\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\r\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\r\nvar __defNormalProp = function (obj, key, value) { return key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value: value }) : obj[key] = value; };\r\nvar __spreadValues = function (a, b) {\r\n    for (var prop in b || (b = {}))\r\n        if (__hasOwnProp.call(b, prop))\r\n            __defNormalProp(a, prop, b[prop]);\r\n    if (__getOwnPropSymbols)\r\n        for (var _i = 0, _b = __getOwnPropSymbols(b); _i < _b.length; _i++) {\r\n            var prop = _b[_i];\r\n            if (__propIsEnum.call(b, prop))\r\n                __defNormalProp(a, prop, b[prop]);\r\n        }\r\n    return a;\r\n};\r\nvar __spreadProps = function (a, b) { return __defProps(a, __getOwnPropDescs(b)); };\r\nvar __async = function (__this, __arguments, generator) {\r\n    return new Promise(function (resolve, reject) {\r\n        var fulfilled = function (value) {\r\n            try {\r\n                step(generator.next(value));\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        };\r\n        var rejected = function (value) {\r\n            try {\r\n                step(generator.throw(value));\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        };\r\n        var step = function (x) { return x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected); };\r\n        step((generator = generator.apply(__this, __arguments)).next());\r\n    });\r\n};\r\n// src/index.ts\r\nimport { enableES5 } from \"immer\";\r\nexport * from \"redux\";\r\nimport { default as default2, current as current2, freeze, original, isDraft as isDraft4 } from \"immer\";\r\nimport { createSelector as createSelector2 } from \"reselect\";\r\n// src/createDraftSafeSelector.ts\r\nimport { current, isDraft } from \"immer\";\r\nimport { createSelector } from \"reselect\";\r\nvar createDraftSafeSelector = function () {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    var selector = createSelector.apply(void 0, args);\r\n    var wrappedSelector = function (value) {\r\n        var rest = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            rest[_i - 1] = arguments[_i];\r\n        }\r\n        return selector.apply(void 0, __spreadArray([isDraft(value) ? current(value) : value], rest));\r\n    };\r\n    return wrappedSelector;\r\n};\r\n// src/configureStore.ts\r\nimport { createStore, compose as compose2, applyMiddleware, combineReducers } from \"redux\";\r\n// src/devtoolsExtension.ts\r\nimport { compose } from \"redux\";\r\nvar composeWithDevTools = typeof window !== \"undefined\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : function () {\r\n    if (arguments.length === 0)\r\n        return void 0;\r\n    if (typeof arguments[0] === \"object\")\r\n        return compose;\r\n    return compose.apply(null, arguments);\r\n};\r\nvar devToolsEnhancer = typeof window !== \"undefined\" && window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__ : function () {\r\n    return function (noop) {\r\n        return noop;\r\n    };\r\n};\r\n// src/isPlainObject.ts\r\nfunction isPlainObject(value) {\r\n    if (typeof value !== \"object\" || value === null)\r\n        return false;\r\n    var proto = value;\r\n    while (Object.getPrototypeOf(proto) !== null) {\r\n        proto = Object.getPrototypeOf(proto);\r\n    }\r\n    return Object.getPrototypeOf(value) === proto;\r\n}\r\n// src/getDefaultMiddleware.ts\r\nimport thunkMiddleware from \"redux-thunk\";\r\n// src/utils.ts\r\nfunction getTimeMeasureUtils(maxDelay, fnName) {\r\n    var elapsed = 0;\r\n    return {\r\n        measureTime: function (fn) {\r\n            var started = Date.now();\r\n            try {\r\n                return fn();\r\n            }\r\n            finally {\r\n                var finished = Date.now();\r\n                elapsed += finished - started;\r\n            }\r\n        },\r\n        warnIfExceeded: function () {\r\n            if (elapsed > maxDelay) {\r\n                console.warn(fnName + \" took \" + elapsed + \"ms, which is more than the warning threshold of \" + maxDelay + \"ms. \\nIf your state or actions are very large, you may want to disable the middleware as it might cause too much of a slowdown in development mode. See https://redux-toolkit.js.org/api/getDefaultMiddleware for instructions.\\nIt is disabled in production builds, so you don't need to worry about that.\");\r\n            }\r\n        }\r\n    };\r\n}\r\nvar MiddlewareArray = /** @class */ (function (_super) {\r\n    __extends(MiddlewareArray, _super);\r\n    function MiddlewareArray() {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        var _this = _super.apply(this, args) || this;\r\n        Object.setPrototypeOf(_this, MiddlewareArray.prototype);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(MiddlewareArray, Symbol.species, {\r\n        get: function () {\r\n            return MiddlewareArray;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    MiddlewareArray.prototype.concat = function () {\r\n        var arr = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            arr[_i] = arguments[_i];\r\n        }\r\n        return _super.prototype.concat.apply(this, arr);\r\n    };\r\n    MiddlewareArray.prototype.prepend = function () {\r\n        var arr = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            arr[_i] = arguments[_i];\r\n        }\r\n        if (arr.length === 1 && Array.isArray(arr[0])) {\r\n            return new (MiddlewareArray.bind.apply(MiddlewareArray, __spreadArray([void 0], arr[0].concat(this))))();\r\n        }\r\n        return new (MiddlewareArray.bind.apply(MiddlewareArray, __spreadArray([void 0], arr.concat(this))))();\r\n    };\r\n    return MiddlewareArray;\r\n}(Array));\r\n// src/immutableStateInvariantMiddleware.ts\r\nvar isProduction = process.env.NODE_ENV === \"production\";\r\nvar prefix = \"Invariant failed\";\r\nfunction invariant(condition, message) {\r\n    if (condition) {\r\n        return;\r\n    }\r\n    if (isProduction) {\r\n        throw new Error(prefix);\r\n    }\r\n    throw new Error(prefix + \": \" + (message || \"\"));\r\n}\r\nfunction stringify(obj, serializer, indent, decycler) {\r\n    return JSON.stringify(obj, getSerialize(serializer, decycler), indent);\r\n}\r\nfunction getSerialize(serializer, decycler) {\r\n    var stack = [], keys = [];\r\n    if (!decycler)\r\n        decycler = function (_, value) {\r\n            if (stack[0] === value)\r\n                return \"[Circular ~]\";\r\n            return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join(\".\") + \"]\";\r\n        };\r\n    return function (key, value) {\r\n        if (stack.length > 0) {\r\n            var thisPos = stack.indexOf(this);\r\n            ~thisPos ? stack.splice(thisPos + 1) : stack.push(this);\r\n            ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key);\r\n            if (~stack.indexOf(value))\r\n                value = decycler.call(this, key, value);\r\n        }\r\n        else\r\n            stack.push(value);\r\n        return serializer == null ? value : serializer.call(this, key, value);\r\n    };\r\n}\r\nfunction isImmutableDefault(value) {\r\n    return typeof value !== \"object\" || value === null || typeof value === \"undefined\" || Object.isFrozen(value);\r\n}\r\nfunction trackForMutations(isImmutable, ignorePaths, obj) {\r\n    var trackedProperties = trackProperties(isImmutable, ignorePaths, obj);\r\n    return {\r\n        detectMutations: function () {\r\n            return detectMutations(isImmutable, ignorePaths, trackedProperties, obj);\r\n        }\r\n    };\r\n}\r\nfunction trackProperties(isImmutable, ignorePaths, obj, path) {\r\n    if (ignorePaths === void 0) { ignorePaths = []; }\r\n    if (path === void 0) { path = \"\"; }\r\n    var tracked = { value: obj };\r\n    if (!isImmutable(obj)) {\r\n        tracked.children = {};\r\n        for (var key in obj) {\r\n            var childPath = path ? path + \".\" + key : key;\r\n            if (ignorePaths.length && ignorePaths.indexOf(childPath) !== -1) {\r\n                continue;\r\n            }\r\n            tracked.children[key] = trackProperties(isImmutable, ignorePaths, obj[key], childPath);\r\n        }\r\n    }\r\n    return tracked;\r\n}\r\nfunction detectMutations(isImmutable, ignorePaths, trackedProperty, obj, sameParentRef, path) {\r\n    if (ignorePaths === void 0) { ignorePaths = []; }\r\n    if (sameParentRef === void 0) { sameParentRef = false; }\r\n    if (path === void 0) { path = \"\"; }\r\n    var prevObj = trackedProperty ? trackedProperty.value : void 0;\r\n    var sameRef = prevObj === obj;\r\n    if (sameParentRef && !sameRef && !Number.isNaN(obj)) {\r\n        return { wasMutated: true, path: path };\r\n    }\r\n    if (isImmutable(prevObj) || isImmutable(obj)) {\r\n        return { wasMutated: false };\r\n    }\r\n    var keysToDetect = {};\r\n    for (var key in trackedProperty.children) {\r\n        keysToDetect[key] = true;\r\n    }\r\n    for (var key in obj) {\r\n        keysToDetect[key] = true;\r\n    }\r\n    for (var key in keysToDetect) {\r\n        var childPath = path ? path + \".\" + key : key;\r\n        if (ignorePaths.length && ignorePaths.indexOf(childPath) !== -1) {\r\n            continue;\r\n        }\r\n        var result = detectMutations(isImmutable, ignorePaths, trackedProperty.children[key], obj[key], sameRef, childPath);\r\n        if (result.wasMutated) {\r\n            return result;\r\n        }\r\n    }\r\n    return { wasMutated: false };\r\n}\r\nfunction createImmutableStateInvariantMiddleware(options) {\r\n    if (options === void 0) { options = {}; }\r\n    if (process.env.NODE_ENV === \"production\") {\r\n        return function () { return function (next) { return function (action) { return next(action); }; }; };\r\n    }\r\n    var _b = options.isImmutable, isImmutable = _b === void 0 ? isImmutableDefault : _b, ignoredPaths = options.ignoredPaths, _c = options.warnAfter, warnAfter = _c === void 0 ? 32 : _c, ignore = options.ignore;\r\n    ignoredPaths = ignoredPaths || ignore;\r\n    var track = trackForMutations.bind(null, isImmutable, ignoredPaths);\r\n    return function (_b) {\r\n        var getState = _b.getState;\r\n        var state = getState();\r\n        var tracker = track(state);\r\n        var result;\r\n        return function (next) { return function (action) {\r\n            var measureUtils = getTimeMeasureUtils(warnAfter, \"ImmutableStateInvariantMiddleware\");\r\n            measureUtils.measureTime(function () {\r\n                state = getState();\r\n                result = tracker.detectMutations();\r\n                tracker = track(state);\r\n                invariant(!result.wasMutated, \"A state mutation was detected between dispatches, in the path '\" + (result.path || \"\") + \"'.  This may cause incorrect behavior. (https://redux.js.org/style-guide/style-guide#do-not-mutate-state)\");\r\n            });\r\n            var dispatchedAction = next(action);\r\n            measureUtils.measureTime(function () {\r\n                state = getState();\r\n                result = tracker.detectMutations();\r\n                tracker = track(state);\r\n                result.wasMutated && invariant(!result.wasMutated, \"A state mutation was detected inside a dispatch, in the path: \" + (result.path || \"\") + \". Take a look at the reducer(s) handling the action \" + stringify(action) + \". (https://redux.js.org/style-guide/style-guide#do-not-mutate-state)\");\r\n            });\r\n            measureUtils.warnIfExceeded();\r\n            return dispatchedAction;\r\n        }; };\r\n    };\r\n}\r\n// src/serializableStateInvariantMiddleware.ts\r\nfunction isPlain(val) {\r\n    var type = typeof val;\r\n    return type === \"undefined\" || val === null || type === \"string\" || type === \"boolean\" || type === \"number\" || Array.isArray(val) || isPlainObject(val);\r\n}\r\nfunction findNonSerializableValue(value, path, isSerializable, getEntries, ignoredPaths) {\r\n    if (path === void 0) { path = \"\"; }\r\n    if (isSerializable === void 0) { isSerializable = isPlain; }\r\n    if (ignoredPaths === void 0) { ignoredPaths = []; }\r\n    var foundNestedSerializable;\r\n    if (!isSerializable(value)) {\r\n        return {\r\n            keyPath: path || \"<root>\",\r\n            value: value\r\n        };\r\n    }\r\n    if (typeof value !== \"object\" || value === null) {\r\n        return false;\r\n    }\r\n    var entries = getEntries != null ? getEntries(value) : Object.entries(value);\r\n    var hasIgnoredPaths = ignoredPaths.length > 0;\r\n    for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\r\n        var _b = entries_1[_i], key = _b[0], nestedValue = _b[1];\r\n        var nestedPath = path ? path + \".\" + key : key;\r\n        if (hasIgnoredPaths && ignoredPaths.indexOf(nestedPath) >= 0) {\r\n            continue;\r\n        }\r\n        if (!isSerializable(nestedValue)) {\r\n            return {\r\n                keyPath: nestedPath,\r\n                value: nestedValue\r\n            };\r\n        }\r\n        if (typeof nestedValue === \"object\") {\r\n            foundNestedSerializable = findNonSerializableValue(nestedValue, nestedPath, isSerializable, getEntries, ignoredPaths);\r\n            if (foundNestedSerializable) {\r\n                return foundNestedSerializable;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction createSerializableStateInvariantMiddleware(options) {\r\n    if (options === void 0) { options = {}; }\r\n    if (process.env.NODE_ENV === \"production\") {\r\n        return function () { return function (next) { return function (action) { return next(action); }; }; };\r\n    }\r\n    var _b = options.isSerializable, isSerializable = _b === void 0 ? isPlain : _b, getEntries = options.getEntries, _c = options.ignoredActions, ignoredActions = _c === void 0 ? [] : _c, _d = options.ignoredActionPaths, ignoredActionPaths = _d === void 0 ? [\"meta.arg\", \"meta.baseQueryMeta\"] : _d, _e = options.ignoredPaths, ignoredPaths = _e === void 0 ? [] : _e, _f = options.warnAfter, warnAfter = _f === void 0 ? 32 : _f, _g = options.ignoreState, ignoreState = _g === void 0 ? false : _g;\r\n    return function (storeAPI) { return function (next) { return function (action) {\r\n        if (ignoredActions.length && ignoredActions.indexOf(action.type) !== -1) {\r\n            return next(action);\r\n        }\r\n        var measureUtils = getTimeMeasureUtils(warnAfter, \"SerializableStateInvariantMiddleware\");\r\n        measureUtils.measureTime(function () {\r\n            var foundActionNonSerializableValue = findNonSerializableValue(action, \"\", isSerializable, getEntries, ignoredActionPaths);\r\n            if (foundActionNonSerializableValue) {\r\n                var keyPath = foundActionNonSerializableValue.keyPath, value = foundActionNonSerializableValue.value;\r\n                console.error(\"A non-serializable value was detected in an action, in the path: `\" + keyPath + \"`. Value:\", value, \"\\nTake a look at the logic that dispatched this action: \", action, \"\\n(See https://redux.js.org/faq/actions#why-should-type-be-a-string-or-at-least-serializable-why-should-my-action-types-be-constants)\", \"\\n(To allow non-serializable values see: https://redux-toolkit.js.org/usage/usage-guide#working-with-non-serializable-data)\");\r\n            }\r\n        });\r\n        var result = next(action);\r\n        if (!ignoreState) {\r\n            measureUtils.measureTime(function () {\r\n                var state = storeAPI.getState();\r\n                var foundStateNonSerializableValue = findNonSerializableValue(state, \"\", isSerializable, getEntries, ignoredPaths);\r\n                if (foundStateNonSerializableValue) {\r\n                    var keyPath = foundStateNonSerializableValue.keyPath, value = foundStateNonSerializableValue.value;\r\n                    console.error(\"A non-serializable value was detected in the state, in the path: `\" + keyPath + \"`. Value:\", value, \"\\nTake a look at the reducer(s) handling this action type: \" + action.type + \".\\n(See https://redux.js.org/faq/organizing-state#can-i-put-functions-promises-or-other-non-serializable-items-in-my-store-state)\");\r\n                }\r\n            });\r\n            measureUtils.warnIfExceeded();\r\n        }\r\n        return result;\r\n    }; }; };\r\n}\r\n// src/getDefaultMiddleware.ts\r\nfunction isBoolean(x) {\r\n    return typeof x === \"boolean\";\r\n}\r\nfunction curryGetDefaultMiddleware() {\r\n    return function curriedGetDefaultMiddleware(options) {\r\n        return getDefaultMiddleware(options);\r\n    };\r\n}\r\nfunction getDefaultMiddleware(options) {\r\n    if (options === void 0) { options = {}; }\r\n    var _b = options.thunk, thunk = _b === void 0 ? true : _b, _c = options.immutableCheck, immutableCheck = _c === void 0 ? true : _c, _d = options.serializableCheck, serializableCheck = _d === void 0 ? true : _d;\r\n    var middlewareArray = new MiddlewareArray();\r\n    if (thunk) {\r\n        if (isBoolean(thunk)) {\r\n            middlewareArray.push(thunkMiddleware);\r\n        }\r\n        else {\r\n            middlewareArray.push(thunkMiddleware.withExtraArgument(thunk.extraArgument));\r\n        }\r\n    }\r\n    if (process.env.NODE_ENV !== \"production\") {\r\n        if (immutableCheck) {\r\n            var immutableOptions = {};\r\n            if (!isBoolean(immutableCheck)) {\r\n                immutableOptions = immutableCheck;\r\n            }\r\n            middlewareArray.unshift(createImmutableStateInvariantMiddleware(immutableOptions));\r\n        }\r\n        if (serializableCheck) {\r\n            var serializableOptions = {};\r\n            if (!isBoolean(serializableCheck)) {\r\n                serializableOptions = serializableCheck;\r\n            }\r\n            middlewareArray.push(createSerializableStateInvariantMiddleware(serializableOptions));\r\n        }\r\n    }\r\n    return middlewareArray;\r\n}\r\n// src/configureStore.ts\r\nvar IS_PRODUCTION = process.env.NODE_ENV === \"production\";\r\nfunction configureStore(options) {\r\n    var curriedGetDefaultMiddleware = curryGetDefaultMiddleware();\r\n    var _b = options || {}, _c = _b.reducer, reducer = _c === void 0 ? void 0 : _c, _d = _b.middleware, middleware = _d === void 0 ? curriedGetDefaultMiddleware() : _d, _e = _b.devTools, devTools = _e === void 0 ? true : _e, _f = _b.preloadedState, preloadedState = _f === void 0 ? void 0 : _f, _g = _b.enhancers, enhancers = _g === void 0 ? void 0 : _g;\r\n    var rootReducer;\r\n    if (typeof reducer === \"function\") {\r\n        rootReducer = reducer;\r\n    }\r\n    else if (isPlainObject(reducer)) {\r\n        rootReducer = combineReducers(reducer);\r\n    }\r\n    else {\r\n        throw new Error('\"reducer\" is a required argument, and must be a function or an object of functions that can be passed to combineReducers');\r\n    }\r\n    var finalMiddleware = middleware;\r\n    if (typeof finalMiddleware === \"function\") {\r\n        finalMiddleware = finalMiddleware(curriedGetDefaultMiddleware);\r\n        if (!IS_PRODUCTION && !Array.isArray(finalMiddleware)) {\r\n            throw new Error(\"when using a middleware builder function, an array of middleware must be returned\");\r\n        }\r\n    }\r\n    if (!IS_PRODUCTION && finalMiddleware.some(function (item) { return typeof item !== \"function\"; })) {\r\n        throw new Error(\"each middleware provided to configureStore must be a function\");\r\n    }\r\n    var middlewareEnhancer = applyMiddleware.apply(void 0, finalMiddleware);\r\n    var finalCompose = compose2;\r\n    if (devTools) {\r\n        finalCompose = composeWithDevTools(__spreadValues({\r\n            trace: !IS_PRODUCTION\r\n        }, typeof devTools === \"object\" && devTools));\r\n    }\r\n    var storeEnhancers = [middlewareEnhancer];\r\n    if (Array.isArray(enhancers)) {\r\n        storeEnhancers = __spreadArray([middlewareEnhancer], enhancers);\r\n    }\r\n    else if (typeof enhancers === \"function\") {\r\n        storeEnhancers = enhancers(storeEnhancers);\r\n    }\r\n    var composedEnhancer = finalCompose.apply(void 0, storeEnhancers);\r\n    return createStore(rootReducer, preloadedState, composedEnhancer);\r\n}\r\n// src/createAction.ts\r\nfunction createAction(type, prepareAction) {\r\n    function actionCreator() {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (prepareAction) {\r\n            var prepared = prepareAction.apply(void 0, args);\r\n            if (!prepared) {\r\n                throw new Error(\"prepareAction did not return an object\");\r\n            }\r\n            return __spreadValues(__spreadValues({\r\n                type: type,\r\n                payload: prepared.payload\r\n            }, \"meta\" in prepared && { meta: prepared.meta }), \"error\" in prepared && { error: prepared.error });\r\n        }\r\n        return { type: type, payload: args[0] };\r\n    }\r\n    actionCreator.toString = function () { return \"\" + type; };\r\n    actionCreator.type = type;\r\n    actionCreator.match = function (action) { return action.type === type; };\r\n    return actionCreator;\r\n}\r\nfunction isFSA(action) {\r\n    return isPlainObject(action) && typeof action.type === \"string\" && Object.keys(action).every(isValidKey);\r\n}\r\nfunction isValidKey(key) {\r\n    return [\"type\", \"payload\", \"error\", \"meta\"].indexOf(key) > -1;\r\n}\r\nfunction getType(actionCreator) {\r\n    return \"\" + actionCreator;\r\n}\r\n// src/createReducer.ts\r\nimport createNextState, { isDraft as isDraft2, isDraftable } from \"immer\";\r\n// src/mapBuilders.ts\r\nfunction executeReducerBuilderCallback(builderCallback) {\r\n    var actionsMap = {};\r\n    var actionMatchers = [];\r\n    var defaultCaseReducer;\r\n    var builder = {\r\n        addCase: function (typeOrActionCreator, reducer) {\r\n            if (process.env.NODE_ENV !== \"production\") {\r\n                if (actionMatchers.length > 0) {\r\n                    throw new Error(\"`builder.addCase` should only be called before calling `builder.addMatcher`\");\r\n                }\r\n                if (defaultCaseReducer) {\r\n                    throw new Error(\"`builder.addCase` should only be called before calling `builder.addDefaultCase`\");\r\n                }\r\n            }\r\n            var type = typeof typeOrActionCreator === \"string\" ? typeOrActionCreator : typeOrActionCreator.type;\r\n            if (type in actionsMap) {\r\n                throw new Error(\"addCase cannot be called with two reducers for the same action type\");\r\n            }\r\n            actionsMap[type] = reducer;\r\n            return builder;\r\n        },\r\n        addMatcher: function (matcher, reducer) {\r\n            if (process.env.NODE_ENV !== \"production\") {\r\n                if (defaultCaseReducer) {\r\n                    throw new Error(\"`builder.addMatcher` should only be called before calling `builder.addDefaultCase`\");\r\n                }\r\n            }\r\n            actionMatchers.push({ matcher: matcher, reducer: reducer });\r\n            return builder;\r\n        },\r\n        addDefaultCase: function (reducer) {\r\n            if (process.env.NODE_ENV !== \"production\") {\r\n                if (defaultCaseReducer) {\r\n                    throw new Error(\"`builder.addDefaultCase` can only be called once\");\r\n                }\r\n            }\r\n            defaultCaseReducer = reducer;\r\n            return builder;\r\n        }\r\n    };\r\n    builderCallback(builder);\r\n    return [actionsMap, actionMatchers, defaultCaseReducer];\r\n}\r\n// src/createReducer.ts\r\nfunction createReducer(initialState, mapOrBuilderCallback, actionMatchers, defaultCaseReducer) {\r\n    if (actionMatchers === void 0) { actionMatchers = []; }\r\n    var _b = typeof mapOrBuilderCallback === \"function\" ? executeReducerBuilderCallback(mapOrBuilderCallback) : [mapOrBuilderCallback, actionMatchers, defaultCaseReducer], actionsMap = _b[0], finalActionMatchers = _b[1], finalDefaultCaseReducer = _b[2];\r\n    var frozenInitialState = createNextState(initialState, function () {\r\n    });\r\n    return function (state, action) {\r\n        if (state === void 0) { state = frozenInitialState; }\r\n        var caseReducers = __spreadArray([\r\n            actionsMap[action.type]\r\n        ], finalActionMatchers.filter(function (_b) {\r\n            var matcher = _b.matcher;\r\n            return matcher(action);\r\n        }).map(function (_b) {\r\n            var reducer = _b.reducer;\r\n            return reducer;\r\n        }));\r\n        if (caseReducers.filter(function (cr) { return !!cr; }).length === 0) {\r\n            caseReducers = [finalDefaultCaseReducer];\r\n        }\r\n        return caseReducers.reduce(function (previousState, caseReducer) {\r\n            if (caseReducer) {\r\n                if (isDraft2(previousState)) {\r\n                    var draft = previousState;\r\n                    var result = caseReducer(draft, action);\r\n                    if (typeof result === \"undefined\") {\r\n                        return previousState;\r\n                    }\r\n                    return result;\r\n                }\r\n                else if (!isDraftable(previousState)) {\r\n                    var result = caseReducer(previousState, action);\r\n                    if (typeof result === \"undefined\") {\r\n                        if (previousState === null) {\r\n                            return previousState;\r\n                        }\r\n                        throw Error(\"A case reducer on a non-draftable value must not return undefined\");\r\n                    }\r\n                    return result;\r\n                }\r\n                else {\r\n                    return createNextState(previousState, function (draft) {\r\n                        return caseReducer(draft, action);\r\n                    });\r\n                }\r\n            }\r\n            return previousState;\r\n        }, state);\r\n    };\r\n}\r\n// src/createSlice.ts\r\nfunction getType2(slice, actionKey) {\r\n    return slice + \"/\" + actionKey;\r\n}\r\nfunction createSlice(options) {\r\n    var name = options.name, initialState = options.initialState;\r\n    if (!name) {\r\n        throw new Error(\"`name` is a required option for createSlice\");\r\n    }\r\n    var reducers = options.reducers || {};\r\n    var _b = typeof options.extraReducers === \"function\" ? executeReducerBuilderCallback(options.extraReducers) : [options.extraReducers], _c = _b[0], extraReducers = _c === void 0 ? {} : _c, _d = _b[1], actionMatchers = _d === void 0 ? [] : _d, _e = _b[2], defaultCaseReducer = _e === void 0 ? void 0 : _e;\r\n    var reducerNames = Object.keys(reducers);\r\n    var sliceCaseReducersByName = {};\r\n    var sliceCaseReducersByType = {};\r\n    var actionCreators = {};\r\n    reducerNames.forEach(function (reducerName) {\r\n        var maybeReducerWithPrepare = reducers[reducerName];\r\n        var type = getType2(name, reducerName);\r\n        var caseReducer;\r\n        var prepareCallback;\r\n        if (\"reducer\" in maybeReducerWithPrepare) {\r\n            caseReducer = maybeReducerWithPrepare.reducer;\r\n            prepareCallback = maybeReducerWithPrepare.prepare;\r\n        }\r\n        else {\r\n            caseReducer = maybeReducerWithPrepare;\r\n        }\r\n        sliceCaseReducersByName[reducerName] = caseReducer;\r\n        sliceCaseReducersByType[type] = caseReducer;\r\n        actionCreators[reducerName] = prepareCallback ? createAction(type, prepareCallback) : createAction(type);\r\n    });\r\n    var finalCaseReducers = __spreadValues(__spreadValues({}, extraReducers), sliceCaseReducersByType);\r\n    var reducer = createReducer(initialState, finalCaseReducers, actionMatchers, defaultCaseReducer);\r\n    return {\r\n        name: name,\r\n        reducer: reducer,\r\n        actions: actionCreators,\r\n        caseReducers: sliceCaseReducersByName\r\n    };\r\n}\r\n// src/entities/entity_state.ts\r\nfunction getInitialEntityState() {\r\n    return {\r\n        ids: [],\r\n        entities: {}\r\n    };\r\n}\r\nfunction createInitialStateFactory() {\r\n    function getInitialState(additionalState) {\r\n        if (additionalState === void 0) { additionalState = {}; }\r\n        return Object.assign(getInitialEntityState(), additionalState);\r\n    }\r\n    return { getInitialState: getInitialState };\r\n}\r\n// src/entities/state_selectors.ts\r\nfunction createSelectorsFactory() {\r\n    function getSelectors(selectState) {\r\n        var selectIds = function (state) { return state.ids; };\r\n        var selectEntities = function (state) { return state.entities; };\r\n        var selectAll = createDraftSafeSelector(selectIds, selectEntities, function (ids, entities) { return ids.map(function (id) { return entities[id]; }); });\r\n        var selectId = function (_, id) { return id; };\r\n        var selectById = function (entities, id) { return entities[id]; };\r\n        var selectTotal = createDraftSafeSelector(selectIds, function (ids) { return ids.length; });\r\n        if (!selectState) {\r\n            return {\r\n                selectIds: selectIds,\r\n                selectEntities: selectEntities,\r\n                selectAll: selectAll,\r\n                selectTotal: selectTotal,\r\n                selectById: createDraftSafeSelector(selectEntities, selectId, selectById)\r\n            };\r\n        }\r\n        var selectGlobalizedEntities = createDraftSafeSelector(selectState, selectEntities);\r\n        return {\r\n            selectIds: createDraftSafeSelector(selectState, selectIds),\r\n            selectEntities: selectGlobalizedEntities,\r\n            selectAll: createDraftSafeSelector(selectState, selectAll),\r\n            selectTotal: createDraftSafeSelector(selectState, selectTotal),\r\n            selectById: createDraftSafeSelector(selectGlobalizedEntities, selectId, selectById)\r\n        };\r\n    }\r\n    return { getSelectors: getSelectors };\r\n}\r\n// src/entities/state_adapter.ts\r\nimport createNextState2, { isDraft as isDraft3 } from \"immer\";\r\nfunction createSingleArgumentStateOperator(mutator) {\r\n    var operator = createStateOperator(function (_, state) { return mutator(state); });\r\n    return function operation(state) {\r\n        return operator(state, void 0);\r\n    };\r\n}\r\nfunction createStateOperator(mutator) {\r\n    return function operation(state, arg) {\r\n        function isPayloadActionArgument(arg2) {\r\n            return isFSA(arg2);\r\n        }\r\n        var runMutator = function (draft) {\r\n            if (isPayloadActionArgument(arg)) {\r\n                mutator(arg.payload, draft);\r\n            }\r\n            else {\r\n                mutator(arg, draft);\r\n            }\r\n        };\r\n        if (isDraft3(state)) {\r\n            runMutator(state);\r\n            return state;\r\n        }\r\n        else {\r\n            return createNextState2(state, runMutator);\r\n        }\r\n    };\r\n}\r\n// src/entities/utils.ts\r\nfunction selectIdValue(entity, selectId) {\r\n    var key = selectId(entity);\r\n    if (process.env.NODE_ENV !== \"production\" && key === void 0) {\r\n        console.warn(\"The entity passed to the `selectId` implementation returned undefined.\", \"You should probably provide your own `selectId` implementation.\", \"The entity that was passed:\", entity, \"The `selectId` implementation:\", selectId.toString());\r\n    }\r\n    return key;\r\n}\r\nfunction ensureEntitiesArray(entities) {\r\n    if (!Array.isArray(entities)) {\r\n        entities = Object.values(entities);\r\n    }\r\n    return entities;\r\n}\r\nfunction splitAddedUpdatedEntities(newEntities, selectId, state) {\r\n    newEntities = ensureEntitiesArray(newEntities);\r\n    var added = [];\r\n    var updated = [];\r\n    for (var _i = 0, newEntities_1 = newEntities; _i < newEntities_1.length; _i++) {\r\n        var entity = newEntities_1[_i];\r\n        var id = selectIdValue(entity, selectId);\r\n        if (id in state.entities) {\r\n            updated.push({ id: id, changes: entity });\r\n        }\r\n        else {\r\n            added.push(entity);\r\n        }\r\n    }\r\n    return [added, updated];\r\n}\r\n// src/entities/unsorted_state_adapter.ts\r\nfunction createUnsortedStateAdapter(selectId) {\r\n    function addOneMutably(entity, state) {\r\n        var key = selectIdValue(entity, selectId);\r\n        if (key in state.entities) {\r\n            return;\r\n        }\r\n        state.ids.push(key);\r\n        state.entities[key] = entity;\r\n    }\r\n    function addManyMutably(newEntities, state) {\r\n        newEntities = ensureEntitiesArray(newEntities);\r\n        for (var _i = 0, newEntities_2 = newEntities; _i < newEntities_2.length; _i++) {\r\n            var entity = newEntities_2[_i];\r\n            addOneMutably(entity, state);\r\n        }\r\n    }\r\n    function setOneMutably(entity, state) {\r\n        var key = selectIdValue(entity, selectId);\r\n        if (!(key in state.entities)) {\r\n            state.ids.push(key);\r\n        }\r\n        state.entities[key] = entity;\r\n    }\r\n    function setManyMutably(newEntities, state) {\r\n        newEntities = ensureEntitiesArray(newEntities);\r\n        for (var _i = 0, newEntities_3 = newEntities; _i < newEntities_3.length; _i++) {\r\n            var entity = newEntities_3[_i];\r\n            setOneMutably(entity, state);\r\n        }\r\n    }\r\n    function setAllMutably(newEntities, state) {\r\n        newEntities = ensureEntitiesArray(newEntities);\r\n        state.ids = [];\r\n        state.entities = {};\r\n        addManyMutably(newEntities, state);\r\n    }\r\n    function removeOneMutably(key, state) {\r\n        return removeManyMutably([key], state);\r\n    }\r\n    function removeManyMutably(keys, state) {\r\n        var didMutate = false;\r\n        keys.forEach(function (key) {\r\n            if (key in state.entities) {\r\n                delete state.entities[key];\r\n                didMutate = true;\r\n            }\r\n        });\r\n        if (didMutate) {\r\n            state.ids = state.ids.filter(function (id) { return id in state.entities; });\r\n        }\r\n    }\r\n    function removeAllMutably(state) {\r\n        Object.assign(state, {\r\n            ids: [],\r\n            entities: {}\r\n        });\r\n    }\r\n    function takeNewKey(keys, update, state) {\r\n        var original2 = state.entities[update.id];\r\n        var updated = Object.assign({}, original2, update.changes);\r\n        var newKey = selectIdValue(updated, selectId);\r\n        var hasNewKey = newKey !== update.id;\r\n        if (hasNewKey) {\r\n            keys[update.id] = newKey;\r\n            delete state.entities[update.id];\r\n        }\r\n        state.entities[newKey] = updated;\r\n        return hasNewKey;\r\n    }\r\n    function updateOneMutably(update, state) {\r\n        return updateManyMutably([update], state);\r\n    }\r\n    function updateManyMutably(updates, state) {\r\n        var newKeys = {};\r\n        var updatesPerEntity = {};\r\n        updates.forEach(function (update) {\r\n            if (update.id in state.entities) {\r\n                updatesPerEntity[update.id] = {\r\n                    id: update.id,\r\n                    changes: __spreadValues(__spreadValues({}, updatesPerEntity[update.id] ? updatesPerEntity[update.id].changes : null), update.changes)\r\n                };\r\n            }\r\n        });\r\n        updates = Object.values(updatesPerEntity);\r\n        var didMutateEntities = updates.length > 0;\r\n        if (didMutateEntities) {\r\n            var didMutateIds = updates.filter(function (update) { return takeNewKey(newKeys, update, state); }).length > 0;\r\n            if (didMutateIds) {\r\n                state.ids = state.ids.map(function (id) { return newKeys[id] || id; });\r\n            }\r\n        }\r\n    }\r\n    function upsertOneMutably(entity, state) {\r\n        return upsertManyMutably([entity], state);\r\n    }\r\n    function upsertManyMutably(newEntities, state) {\r\n        var _b = splitAddedUpdatedEntities(newEntities, selectId, state), added = _b[0], updated = _b[1];\r\n        updateManyMutably(updated, state);\r\n        addManyMutably(added, state);\r\n    }\r\n    return {\r\n        removeAll: createSingleArgumentStateOperator(removeAllMutably),\r\n        addOne: createStateOperator(addOneMutably),\r\n        addMany: createStateOperator(addManyMutably),\r\n        setOne: createStateOperator(setOneMutably),\r\n        setMany: createStateOperator(setManyMutably),\r\n        setAll: createStateOperator(setAllMutably),\r\n        updateOne: createStateOperator(updateOneMutably),\r\n        updateMany: createStateOperator(updateManyMutably),\r\n        upsertOne: createStateOperator(upsertOneMutably),\r\n        upsertMany: createStateOperator(upsertManyMutably),\r\n        removeOne: createStateOperator(removeOneMutably),\r\n        removeMany: createStateOperator(removeManyMutably)\r\n    };\r\n}\r\n// src/entities/sorted_state_adapter.ts\r\nfunction createSortedStateAdapter(selectId, sort) {\r\n    var _b = createUnsortedStateAdapter(selectId), removeOne = _b.removeOne, removeMany = _b.removeMany, removeAll = _b.removeAll;\r\n    function addOneMutably(entity, state) {\r\n        return addManyMutably([entity], state);\r\n    }\r\n    function addManyMutably(newEntities, state) {\r\n        newEntities = ensureEntitiesArray(newEntities);\r\n        var models = newEntities.filter(function (model) { return !(selectIdValue(model, selectId) in state.entities); });\r\n        if (models.length !== 0) {\r\n            merge(models, state);\r\n        }\r\n    }\r\n    function setOneMutably(entity, state) {\r\n        return setManyMutably([entity], state);\r\n    }\r\n    function setManyMutably(newEntities, state) {\r\n        newEntities = ensureEntitiesArray(newEntities);\r\n        if (newEntities.length !== 0) {\r\n            merge(newEntities, state);\r\n        }\r\n    }\r\n    function setAllMutably(newEntities, state) {\r\n        newEntities = ensureEntitiesArray(newEntities);\r\n        state.entities = {};\r\n        state.ids = [];\r\n        addManyMutably(newEntities, state);\r\n    }\r\n    function updateOneMutably(update, state) {\r\n        return updateManyMutably([update], state);\r\n    }\r\n    function takeUpdatedModel(models, update, state) {\r\n        if (!(update.id in state.entities)) {\r\n            return false;\r\n        }\r\n        var original2 = state.entities[update.id];\r\n        var updated = Object.assign({}, original2, update.changes);\r\n        var newKey = selectIdValue(updated, selectId);\r\n        delete state.entities[update.id];\r\n        models.push(updated);\r\n        return newKey !== update.id;\r\n    }\r\n    function updateManyMutably(updates, state) {\r\n        var models = [];\r\n        updates.forEach(function (update) { return takeUpdatedModel(models, update, state); });\r\n        if (models.length !== 0) {\r\n            merge(models, state);\r\n        }\r\n    }\r\n    function upsertOneMutably(entity, state) {\r\n        return upsertManyMutably([entity], state);\r\n    }\r\n    function upsertManyMutably(newEntities, state) {\r\n        var _b = splitAddedUpdatedEntities(newEntities, selectId, state), added = _b[0], updated = _b[1];\r\n        updateManyMutably(updated, state);\r\n        addManyMutably(added, state);\r\n    }\r\n    function areArraysEqual(a, b) {\r\n        if (a.length !== b.length) {\r\n            return false;\r\n        }\r\n        for (var i = 0; i < a.length && i < b.length; i++) {\r\n            if (a[i] === b[i]) {\r\n                continue;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    function merge(models, state) {\r\n        models.forEach(function (model) {\r\n            state.entities[selectId(model)] = model;\r\n        });\r\n        var allEntities = Object.values(state.entities);\r\n        allEntities.sort(sort);\r\n        var newSortedIds = allEntities.map(selectId);\r\n        var ids = state.ids;\r\n        if (!areArraysEqual(ids, newSortedIds)) {\r\n            state.ids = newSortedIds;\r\n        }\r\n    }\r\n    return {\r\n        removeOne: removeOne,\r\n        removeMany: removeMany,\r\n        removeAll: removeAll,\r\n        addOne: createStateOperator(addOneMutably),\r\n        updateOne: createStateOperator(updateOneMutably),\r\n        upsertOne: createStateOperator(upsertOneMutably),\r\n        setOne: createStateOperator(setOneMutably),\r\n        setMany: createStateOperator(setManyMutably),\r\n        setAll: createStateOperator(setAllMutably),\r\n        addMany: createStateOperator(addManyMutably),\r\n        updateMany: createStateOperator(updateManyMutably),\r\n        upsertMany: createStateOperator(upsertManyMutably)\r\n    };\r\n}\r\n// src/entities/create_adapter.ts\r\nfunction createEntityAdapter(options) {\r\n    if (options === void 0) { options = {}; }\r\n    var _b = __spreadValues({\r\n        sortComparer: false,\r\n        selectId: function (instance) { return instance.id; }\r\n    }, options), selectId = _b.selectId, sortComparer = _b.sortComparer;\r\n    var stateFactory = createInitialStateFactory();\r\n    var selectorsFactory = createSelectorsFactory();\r\n    var stateAdapter = sortComparer ? createSortedStateAdapter(selectId, sortComparer) : createUnsortedStateAdapter(selectId);\r\n    return __spreadValues(__spreadValues(__spreadValues({\r\n        selectId: selectId,\r\n        sortComparer: sortComparer\r\n    }, stateFactory), selectorsFactory), stateAdapter);\r\n}\r\n// src/nanoid.ts\r\nvar urlAlphabet = \"ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW\";\r\nvar nanoid = function (size) {\r\n    if (size === void 0) { size = 21; }\r\n    var id = \"\";\r\n    var i = size;\r\n    while (i--) {\r\n        id += urlAlphabet[Math.random() * 64 | 0];\r\n    }\r\n    return id;\r\n};\r\n// src/createAsyncThunk.ts\r\nvar commonProperties = [\r\n    \"name\",\r\n    \"message\",\r\n    \"stack\",\r\n    \"code\"\r\n];\r\nvar RejectWithValue = /** @class */ (function () {\r\n    function RejectWithValue(payload, meta) {\r\n        this.payload = payload;\r\n        this.meta = meta;\r\n    }\r\n    return RejectWithValue;\r\n}());\r\nvar FulfillWithMeta = /** @class */ (function () {\r\n    function FulfillWithMeta(payload, meta) {\r\n        this.payload = payload;\r\n        this.meta = meta;\r\n    }\r\n    return FulfillWithMeta;\r\n}());\r\nvar miniSerializeError = function (value) {\r\n    if (typeof value === \"object\" && value !== null) {\r\n        var simpleError = {};\r\n        for (var _i = 0, commonProperties_1 = commonProperties; _i < commonProperties_1.length; _i++) {\r\n            var property = commonProperties_1[_i];\r\n            if (typeof value[property] === \"string\") {\r\n                simpleError[property] = value[property];\r\n            }\r\n        }\r\n        return simpleError;\r\n    }\r\n    return { message: String(value) };\r\n};\r\nfunction createAsyncThunk(typePrefix, payloadCreator, options) {\r\n    var fulfilled = createAction(typePrefix + \"/fulfilled\", function (payload, requestId, arg, meta) { return ({\r\n        payload: payload,\r\n        meta: __spreadProps(__spreadValues({}, meta || {}), {\r\n            arg: arg,\r\n            requestId: requestId,\r\n            requestStatus: \"fulfilled\"\r\n        })\r\n    }); });\r\n    var pending = createAction(typePrefix + \"/pending\", function (requestId, arg, meta) { return ({\r\n        payload: void 0,\r\n        meta: __spreadProps(__spreadValues({}, meta || {}), {\r\n            arg: arg,\r\n            requestId: requestId,\r\n            requestStatus: \"pending\"\r\n        })\r\n    }); });\r\n    var rejected = createAction(typePrefix + \"/rejected\", function (error, requestId, arg, payload, meta) { return ({\r\n        payload: payload,\r\n        error: (options && options.serializeError || miniSerializeError)(error || \"Rejected\"),\r\n        meta: __spreadProps(__spreadValues({}, meta || {}), {\r\n            arg: arg,\r\n            requestId: requestId,\r\n            rejectedWithValue: !!payload,\r\n            requestStatus: \"rejected\",\r\n            aborted: (error == null ? void 0 : error.name) === \"AbortError\",\r\n            condition: (error == null ? void 0 : error.name) === \"ConditionError\"\r\n        })\r\n    }); });\r\n    var displayedWarning = false;\r\n    var AC = typeof AbortController !== \"undefined\" ? AbortController : /** @class */ (function () {\r\n        function class_1() {\r\n            this.signal = {\r\n                aborted: false,\r\n                addEventListener: function () {\r\n                },\r\n                dispatchEvent: function () {\r\n                    return false;\r\n                },\r\n                onabort: function () {\r\n                },\r\n                removeEventListener: function () {\r\n                }\r\n            };\r\n        }\r\n        class_1.prototype.abort = function () {\r\n            if (process.env.NODE_ENV !== \"production\") {\r\n                if (!displayedWarning) {\r\n                    displayedWarning = true;\r\n                    console.info(\"This platform does not implement AbortController. \\nIf you want to use the AbortController to react to `abort` events, please consider importing a polyfill like 'abortcontroller-polyfill/dist/abortcontroller-polyfill-only'.\");\r\n                }\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n    function actionCreator(arg) {\r\n        return function (dispatch, getState, extra) {\r\n            var _a;\r\n            var requestId = ((_a = options == null ? void 0 : options.idGenerator) != null ? _a : nanoid)();\r\n            var abortController = new AC();\r\n            var abortReason;\r\n            var abortedPromise = new Promise(function (_, reject) { return abortController.signal.addEventListener(\"abort\", function () { return reject({ name: \"AbortError\", message: abortReason || \"Aborted\" }); }); });\r\n            var started = false;\r\n            function abort(reason) {\r\n                if (started) {\r\n                    abortReason = reason;\r\n                    abortController.abort();\r\n                }\r\n            }\r\n            var promise = function () {\r\n                return __async(this, null, function () {\r\n                    var _a2, finalAction, err_1, skipDispatch;\r\n                    return __generator(this, function (_b) {\r\n                        switch (_b.label) {\r\n                            case 0:\r\n                                _b.trys.push([0, 2, , 3]);\r\n                                if (options && options.condition && options.condition(arg, { getState: getState, extra: extra }) === false) {\r\n                                    throw {\r\n                                        name: \"ConditionError\",\r\n                                        message: \"Aborted due to condition callback returning false.\"\r\n                                    };\r\n                                }\r\n                                started = true;\r\n                                dispatch(pending(requestId, arg, (_a2 = options == null ? void 0 : options.getPendingMeta) == null ? void 0 : _a2.call(options, { requestId: requestId, arg: arg }, { getState: getState, extra: extra })));\r\n                                return [4 /*yield*/, Promise.race([\r\n                                        abortedPromise,\r\n                                        Promise.resolve(payloadCreator(arg, {\r\n                                            dispatch: dispatch,\r\n                                            getState: getState,\r\n                                            extra: extra,\r\n                                            requestId: requestId,\r\n                                            signal: abortController.signal,\r\n                                            rejectWithValue: function (value, meta) {\r\n                                                return new RejectWithValue(value, meta);\r\n                                            },\r\n                                            fulfillWithValue: function (value, meta) {\r\n                                                return new FulfillWithMeta(value, meta);\r\n                                            }\r\n                                        })).then(function (result) {\r\n                                            if (result instanceof RejectWithValue) {\r\n                                                throw result;\r\n                                            }\r\n                                            if (result instanceof FulfillWithMeta) {\r\n                                                return fulfilled(result.payload, requestId, arg, result.meta);\r\n                                            }\r\n                                            return fulfilled(result, requestId, arg);\r\n                                        })\r\n                                    ])];\r\n                            case 1:\r\n                                finalAction = _b.sent();\r\n                                return [3 /*break*/, 3];\r\n                            case 2:\r\n                                err_1 = _b.sent();\r\n                                finalAction = err_1 instanceof RejectWithValue ? rejected(null, requestId, arg, err_1.payload, err_1.meta) : rejected(err_1, requestId, arg);\r\n                                return [3 /*break*/, 3];\r\n                            case 3:\r\n                                skipDispatch = options && !options.dispatchConditionRejection && rejected.match(finalAction) && finalAction.meta.condition;\r\n                                if (!skipDispatch) {\r\n                                    dispatch(finalAction);\r\n                                }\r\n                                return [2 /*return*/, finalAction];\r\n                        }\r\n                    });\r\n                });\r\n            }();\r\n            return Object.assign(promise, {\r\n                abort: abort,\r\n                requestId: requestId,\r\n                arg: arg,\r\n                unwrap: function () {\r\n                    return promise.then(unwrapResult);\r\n                }\r\n            });\r\n        };\r\n    }\r\n    return Object.assign(actionCreator, {\r\n        pending: pending,\r\n        rejected: rejected,\r\n        fulfilled: fulfilled,\r\n        typePrefix: typePrefix\r\n    });\r\n}\r\nfunction unwrapResult(action) {\r\n    if (action.meta && action.meta.rejectedWithValue) {\r\n        throw action.payload;\r\n    }\r\n    if (action.error) {\r\n        throw action.error;\r\n    }\r\n    return action.payload;\r\n}\r\n// src/tsHelpers.ts\r\nvar hasMatchFunction = function (v) {\r\n    return v && typeof v.match === \"function\";\r\n};\r\n// src/matchers.ts\r\nvar matches = function (matcher, action) {\r\n    if (hasMatchFunction(matcher)) {\r\n        return matcher.match(action);\r\n    }\r\n    else {\r\n        return matcher(action);\r\n    }\r\n};\r\nfunction isAnyOf() {\r\n    var matchers = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        matchers[_i] = arguments[_i];\r\n    }\r\n    return function (action) {\r\n        return matchers.some(function (matcher) { return matches(matcher, action); });\r\n    };\r\n}\r\nfunction isAllOf() {\r\n    var matchers = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        matchers[_i] = arguments[_i];\r\n    }\r\n    return function (action) {\r\n        return matchers.every(function (matcher) { return matches(matcher, action); });\r\n    };\r\n}\r\nfunction hasExpectedRequestMetadata(action, validStatus) {\r\n    if (!action || !action.meta)\r\n        return false;\r\n    var hasValidRequestId = typeof action.meta.requestId === \"string\";\r\n    var hasValidRequestStatus = validStatus.indexOf(action.meta.requestStatus) > -1;\r\n    return hasValidRequestId && hasValidRequestStatus;\r\n}\r\nfunction isAsyncThunkArray(a) {\r\n    return typeof a[0] === \"function\" && \"pending\" in a[0] && \"fulfilled\" in a[0] && \"rejected\" in a[0];\r\n}\r\nfunction isPending() {\r\n    var asyncThunks = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        asyncThunks[_i] = arguments[_i];\r\n    }\r\n    if (asyncThunks.length === 0) {\r\n        return function (action) { return hasExpectedRequestMetadata(action, [\"pending\"]); };\r\n    }\r\n    if (!isAsyncThunkArray(asyncThunks)) {\r\n        return isPending()(asyncThunks[0]);\r\n    }\r\n    return function (action) {\r\n        var matchers = asyncThunks.map(function (asyncThunk) { return asyncThunk.pending; });\r\n        var combinedMatcher = isAnyOf.apply(void 0, matchers);\r\n        return combinedMatcher(action);\r\n    };\r\n}\r\nfunction isRejected() {\r\n    var asyncThunks = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        asyncThunks[_i] = arguments[_i];\r\n    }\r\n    if (asyncThunks.length === 0) {\r\n        return function (action) { return hasExpectedRequestMetadata(action, [\"rejected\"]); };\r\n    }\r\n    if (!isAsyncThunkArray(asyncThunks)) {\r\n        return isRejected()(asyncThunks[0]);\r\n    }\r\n    return function (action) {\r\n        var matchers = asyncThunks.map(function (asyncThunk) { return asyncThunk.rejected; });\r\n        var combinedMatcher = isAnyOf.apply(void 0, matchers);\r\n        return combinedMatcher(action);\r\n    };\r\n}\r\nfunction isRejectedWithValue() {\r\n    var asyncThunks = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        asyncThunks[_i] = arguments[_i];\r\n    }\r\n    var hasFlag = function (action) {\r\n        return action && action.meta && action.meta.rejectedWithValue;\r\n    };\r\n    if (asyncThunks.length === 0) {\r\n        return function (action) {\r\n            var combinedMatcher = isAllOf(isRejected.apply(void 0, asyncThunks), hasFlag);\r\n            return combinedMatcher(action);\r\n        };\r\n    }\r\n    if (!isAsyncThunkArray(asyncThunks)) {\r\n        return isRejectedWithValue()(asyncThunks[0]);\r\n    }\r\n    return function (action) {\r\n        var combinedMatcher = isAllOf(isRejected.apply(void 0, asyncThunks), hasFlag);\r\n        return combinedMatcher(action);\r\n    };\r\n}\r\nfunction isFulfilled() {\r\n    var asyncThunks = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        asyncThunks[_i] = arguments[_i];\r\n    }\r\n    if (asyncThunks.length === 0) {\r\n        return function (action) { return hasExpectedRequestMetadata(action, [\"fulfilled\"]); };\r\n    }\r\n    if (!isAsyncThunkArray(asyncThunks)) {\r\n        return isFulfilled()(asyncThunks[0]);\r\n    }\r\n    return function (action) {\r\n        var matchers = asyncThunks.map(function (asyncThunk) { return asyncThunk.fulfilled; });\r\n        var combinedMatcher = isAnyOf.apply(void 0, matchers);\r\n        return combinedMatcher(action);\r\n    };\r\n}\r\nfunction isAsyncThunkAction() {\r\n    var asyncThunks = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        asyncThunks[_i] = arguments[_i];\r\n    }\r\n    if (asyncThunks.length === 0) {\r\n        return function (action) { return hasExpectedRequestMetadata(action, [\"pending\", \"fulfilled\", \"rejected\"]); };\r\n    }\r\n    if (!isAsyncThunkArray(asyncThunks)) {\r\n        return isAsyncThunkAction()(asyncThunks[0]);\r\n    }\r\n    return function (action) {\r\n        var matchers = [];\r\n        for (var _i = 0, asyncThunks_1 = asyncThunks; _i < asyncThunks_1.length; _i++) {\r\n            var asyncThunk = asyncThunks_1[_i];\r\n            matchers.push(asyncThunk.pending, asyncThunk.rejected, asyncThunk.fulfilled);\r\n        }\r\n        var combinedMatcher = isAnyOf.apply(void 0, matchers);\r\n        return combinedMatcher(action);\r\n    };\r\n}\r\n// src/index.ts\r\nenableES5();\r\nexport { MiddlewareArray, configureStore, createAction, createAsyncThunk, createDraftSafeSelector, createEntityAdapter, createImmutableStateInvariantMiddleware, default2 as createNextState, createReducer, createSelector2 as createSelector, createSerializableStateInvariantMiddleware, createSlice, current2 as current, findNonSerializableValue, freeze, getDefaultMiddleware, getType, isAllOf, isAnyOf, isAsyncThunkAction, isDraft4 as isDraft, isFulfilled, isImmutableDefault, isPending, isPlain, isPlainObject, isRejected, isRejectedWithValue, miniSerializeError, nanoid, original, unwrapResult };\r\n//# sourceMappingURL=module.js.map","// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet } from './url-alphabet/index.js'\n\nif (false) {\n  // All bundlers will remove this block in the production bundle.\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * size) / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.ClassRequest = (function() {\n\n    /**\n     * Properties of a ClassRequest.\n     * @exports IClassRequest\n     * @interface IClassRequest\n     * @property {string|null} [id] ClassRequest id\n     * @property {IEndClassRequest|null} [endClass] ClassRequest endClass\n     * @property {ISetHostRequest|null} [setHost] ClassRequest setHost\n     * @property {ISetContentRequest|null} [setContent] ClassRequest setContent\n     * @property {ISetActivityStreamIdRequest|null} [setActvityStreamId] ClassRequest setActvityStreamId\n     * @property {IRewardTrophyToUserRequest|null} [rewardTrophyToUser] ClassRequest rewardTrophyToUser\n     * @property {IRewardTrophyToAllRequest|null} [rewardTrophyToAll] ClassRequest rewardTrophyToAll\n     * @property {ISendChatMessageRequest|null} [sendChatMessage] ClassRequest sendChatMessage\n     */\n\n    /**\n     * Constructs a new ClassRequest.\n     * @exports ClassRequest\n     * @classdesc Represents a ClassRequest.\n     * @implements IClassRequest\n     * @constructor\n     * @param {IClassRequest=} [properties] Properties to set\n     */\n    function ClassRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * ClassRequest id.\n     * @member {string} id\n     * @memberof ClassRequest\n     * @instance\n     */\n    ClassRequest.prototype.id = \"\";\n\n    /**\n     * ClassRequest endClass.\n     * @member {IEndClassRequest|null|undefined} endClass\n     * @memberof ClassRequest\n     * @instance\n     */\n    ClassRequest.prototype.endClass = null;\n\n    /**\n     * ClassRequest setHost.\n     * @member {ISetHostRequest|null|undefined} setHost\n     * @memberof ClassRequest\n     * @instance\n     */\n    ClassRequest.prototype.setHost = null;\n\n    /**\n     * ClassRequest setContent.\n     * @member {ISetContentRequest|null|undefined} setContent\n     * @memberof ClassRequest\n     * @instance\n     */\n    ClassRequest.prototype.setContent = null;\n\n    /**\n     * ClassRequest setActvityStreamId.\n     * @member {ISetActivityStreamIdRequest|null|undefined} setActvityStreamId\n     * @memberof ClassRequest\n     * @instance\n     */\n    ClassRequest.prototype.setActvityStreamId = null;\n\n    /**\n     * ClassRequest rewardTrophyToUser.\n     * @member {IRewardTrophyToUserRequest|null|undefined} rewardTrophyToUser\n     * @memberof ClassRequest\n     * @instance\n     */\n    ClassRequest.prototype.rewardTrophyToUser = null;\n\n    /**\n     * ClassRequest rewardTrophyToAll.\n     * @member {IRewardTrophyToAllRequest|null|undefined} rewardTrophyToAll\n     * @memberof ClassRequest\n     * @instance\n     */\n    ClassRequest.prototype.rewardTrophyToAll = null;\n\n    /**\n     * ClassRequest sendChatMessage.\n     * @member {ISendChatMessageRequest|null|undefined} sendChatMessage\n     * @memberof ClassRequest\n     * @instance\n     */\n    ClassRequest.prototype.sendChatMessage = null;\n\n    // OneOf field names bound to virtual getters and setters\n    var $oneOfFields;\n\n    /**\n     * ClassRequest type.\n     * @member {\"endClass\"|\"setHost\"|\"setContent\"|\"setActvityStreamId\"|\"rewardTrophyToUser\"|\"rewardTrophyToAll\"|\"sendChatMessage\"|undefined} type\n     * @memberof ClassRequest\n     * @instance\n     */\n    Object.defineProperty(ClassRequest.prototype, \"type\", {\n        get: $util.oneOfGetter($oneOfFields = [\"endClass\", \"setHost\", \"setContent\", \"setActvityStreamId\", \"rewardTrophyToUser\", \"rewardTrophyToAll\", \"sendChatMessage\"]),\n        set: $util.oneOfSetter($oneOfFields)\n    });\n\n    /**\n     * Creates a new ClassRequest instance using the specified properties.\n     * @function create\n     * @memberof ClassRequest\n     * @static\n     * @param {IClassRequest=} [properties] Properties to set\n     * @returns {ClassRequest} ClassRequest instance\n     */\n    ClassRequest.create = function create(properties) {\n        return new ClassRequest(properties);\n    };\n\n    /**\n     * Encodes the specified ClassRequest message. Does not implicitly {@link ClassRequest.verify|verify} messages.\n     * @function encode\n     * @memberof ClassRequest\n     * @static\n     * @param {IClassRequest} message ClassRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ClassRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.id != null && Object.hasOwnProperty.call(message, \"id\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);\n        if (message.endClass != null && Object.hasOwnProperty.call(message, \"endClass\"))\n            $root.EndClassRequest.encode(message.endClass, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        if (message.setHost != null && Object.hasOwnProperty.call(message, \"setHost\"))\n            $root.SetHostRequest.encode(message.setHost, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n        if (message.setContent != null && Object.hasOwnProperty.call(message, \"setContent\"))\n            $root.SetContentRequest.encode(message.setContent, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n        if (message.setActvityStreamId != null && Object.hasOwnProperty.call(message, \"setActvityStreamId\"))\n            $root.SetActivityStreamIdRequest.encode(message.setActvityStreamId, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n        if (message.rewardTrophyToUser != null && Object.hasOwnProperty.call(message, \"rewardTrophyToUser\"))\n            $root.RewardTrophyToUserRequest.encode(message.rewardTrophyToUser, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n        if (message.rewardTrophyToAll != null && Object.hasOwnProperty.call(message, \"rewardTrophyToAll\"))\n            $root.RewardTrophyToAllRequest.encode(message.rewardTrophyToAll, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n        if (message.sendChatMessage != null && Object.hasOwnProperty.call(message, \"sendChatMessage\"))\n            $root.SendChatMessageRequest.encode(message.sendChatMessage, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified ClassRequest message, length delimited. Does not implicitly {@link ClassRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ClassRequest\n     * @static\n     * @param {IClassRequest} message ClassRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ClassRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a ClassRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof ClassRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ClassRequest} ClassRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ClassRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ClassRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.id = reader.string();\n                break;\n            case 2:\n                message.endClass = $root.EndClassRequest.decode(reader, reader.uint32());\n                break;\n            case 3:\n                message.setHost = $root.SetHostRequest.decode(reader, reader.uint32());\n                break;\n            case 4:\n                message.setContent = $root.SetContentRequest.decode(reader, reader.uint32());\n                break;\n            case 5:\n                message.setActvityStreamId = $root.SetActivityStreamIdRequest.decode(reader, reader.uint32());\n                break;\n            case 6:\n                message.rewardTrophyToUser = $root.RewardTrophyToUserRequest.decode(reader, reader.uint32());\n                break;\n            case 7:\n                message.rewardTrophyToAll = $root.RewardTrophyToAllRequest.decode(reader, reader.uint32());\n                break;\n            case 8:\n                message.sendChatMessage = $root.SendChatMessageRequest.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a ClassRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ClassRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ClassRequest} ClassRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ClassRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a ClassRequest message.\n     * @function verify\n     * @memberof ClassRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    ClassRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        var properties = {};\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            if (!$util.isString(message.id))\n                return \"id: string expected\";\n        if (message.endClass != null && message.hasOwnProperty(\"endClass\")) {\n            properties.type = 1;\n            {\n                var error = $root.EndClassRequest.verify(message.endClass);\n                if (error)\n                    return \"endClass.\" + error;\n            }\n        }\n        if (message.setHost != null && message.hasOwnProperty(\"setHost\")) {\n            if (properties.type === 1)\n                return \"type: multiple values\";\n            properties.type = 1;\n            {\n                var error = $root.SetHostRequest.verify(message.setHost);\n                if (error)\n                    return \"setHost.\" + error;\n            }\n        }\n        if (message.setContent != null && message.hasOwnProperty(\"setContent\")) {\n            if (properties.type === 1)\n                return \"type: multiple values\";\n            properties.type = 1;\n            {\n                var error = $root.SetContentRequest.verify(message.setContent);\n                if (error)\n                    return \"setContent.\" + error;\n            }\n        }\n        if (message.setActvityStreamId != null && message.hasOwnProperty(\"setActvityStreamId\")) {\n            if (properties.type === 1)\n                return \"type: multiple values\";\n            properties.type = 1;\n            {\n                var error = $root.SetActivityStreamIdRequest.verify(message.setActvityStreamId);\n                if (error)\n                    return \"setActvityStreamId.\" + error;\n            }\n        }\n        if (message.rewardTrophyToUser != null && message.hasOwnProperty(\"rewardTrophyToUser\")) {\n            if (properties.type === 1)\n                return \"type: multiple values\";\n            properties.type = 1;\n            {\n                var error = $root.RewardTrophyToUserRequest.verify(message.rewardTrophyToUser);\n                if (error)\n                    return \"rewardTrophyToUser.\" + error;\n            }\n        }\n        if (message.rewardTrophyToAll != null && message.hasOwnProperty(\"rewardTrophyToAll\")) {\n            if (properties.type === 1)\n                return \"type: multiple values\";\n            properties.type = 1;\n            {\n                var error = $root.RewardTrophyToAllRequest.verify(message.rewardTrophyToAll);\n                if (error)\n                    return \"rewardTrophyToAll.\" + error;\n            }\n        }\n        if (message.sendChatMessage != null && message.hasOwnProperty(\"sendChatMessage\")) {\n            if (properties.type === 1)\n                return \"type: multiple values\";\n            properties.type = 1;\n            {\n                var error = $root.SendChatMessageRequest.verify(message.sendChatMessage);\n                if (error)\n                    return \"sendChatMessage.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a ClassRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ClassRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ClassRequest} ClassRequest\n     */\n    ClassRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.ClassRequest)\n            return object;\n        var message = new $root.ClassRequest();\n        if (object.id != null)\n            message.id = String(object.id);\n        if (object.endClass != null) {\n            if (typeof object.endClass !== \"object\")\n                throw TypeError(\".ClassRequest.endClass: object expected\");\n            message.endClass = $root.EndClassRequest.fromObject(object.endClass);\n        }\n        if (object.setHost != null) {\n            if (typeof object.setHost !== \"object\")\n                throw TypeError(\".ClassRequest.setHost: object expected\");\n            message.setHost = $root.SetHostRequest.fromObject(object.setHost);\n        }\n        if (object.setContent != null) {\n            if (typeof object.setContent !== \"object\")\n                throw TypeError(\".ClassRequest.setContent: object expected\");\n            message.setContent = $root.SetContentRequest.fromObject(object.setContent);\n        }\n        if (object.setActvityStreamId != null) {\n            if (typeof object.setActvityStreamId !== \"object\")\n                throw TypeError(\".ClassRequest.setActvityStreamId: object expected\");\n            message.setActvityStreamId = $root.SetActivityStreamIdRequest.fromObject(object.setActvityStreamId);\n        }\n        if (object.rewardTrophyToUser != null) {\n            if (typeof object.rewardTrophyToUser !== \"object\")\n                throw TypeError(\".ClassRequest.rewardTrophyToUser: object expected\");\n            message.rewardTrophyToUser = $root.RewardTrophyToUserRequest.fromObject(object.rewardTrophyToUser);\n        }\n        if (object.rewardTrophyToAll != null) {\n            if (typeof object.rewardTrophyToAll !== \"object\")\n                throw TypeError(\".ClassRequest.rewardTrophyToAll: object expected\");\n            message.rewardTrophyToAll = $root.RewardTrophyToAllRequest.fromObject(object.rewardTrophyToAll);\n        }\n        if (object.sendChatMessage != null) {\n            if (typeof object.sendChatMessage !== \"object\")\n                throw TypeError(\".ClassRequest.sendChatMessage: object expected\");\n            message.sendChatMessage = $root.SendChatMessageRequest.fromObject(object.sendChatMessage);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a ClassRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ClassRequest\n     * @static\n     * @param {ClassRequest} message ClassRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    ClassRequest.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.id = \"\";\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            object.id = message.id;\n        if (message.endClass != null && message.hasOwnProperty(\"endClass\")) {\n            object.endClass = $root.EndClassRequest.toObject(message.endClass, options);\n            if (options.oneofs)\n                object.type = \"endClass\";\n        }\n        if (message.setHost != null && message.hasOwnProperty(\"setHost\")) {\n            object.setHost = $root.SetHostRequest.toObject(message.setHost, options);\n            if (options.oneofs)\n                object.type = \"setHost\";\n        }\n        if (message.setContent != null && message.hasOwnProperty(\"setContent\")) {\n            object.setContent = $root.SetContentRequest.toObject(message.setContent, options);\n            if (options.oneofs)\n                object.type = \"setContent\";\n        }\n        if (message.setActvityStreamId != null && message.hasOwnProperty(\"setActvityStreamId\")) {\n            object.setActvityStreamId = $root.SetActivityStreamIdRequest.toObject(message.setActvityStreamId, options);\n            if (options.oneofs)\n                object.type = \"setActvityStreamId\";\n        }\n        if (message.rewardTrophyToUser != null && message.hasOwnProperty(\"rewardTrophyToUser\")) {\n            object.rewardTrophyToUser = $root.RewardTrophyToUserRequest.toObject(message.rewardTrophyToUser, options);\n            if (options.oneofs)\n                object.type = \"rewardTrophyToUser\";\n        }\n        if (message.rewardTrophyToAll != null && message.hasOwnProperty(\"rewardTrophyToAll\")) {\n            object.rewardTrophyToAll = $root.RewardTrophyToAllRequest.toObject(message.rewardTrophyToAll, options);\n            if (options.oneofs)\n                object.type = \"rewardTrophyToAll\";\n        }\n        if (message.sendChatMessage != null && message.hasOwnProperty(\"sendChatMessage\")) {\n            object.sendChatMessage = $root.SendChatMessageRequest.toObject(message.sendChatMessage, options);\n            if (options.oneofs)\n                object.type = \"sendChatMessage\";\n        }\n        return object;\n    };\n\n    /**\n     * Converts this ClassRequest to JSON.\n     * @function toJSON\n     * @memberof ClassRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    ClassRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ClassRequest;\n})();\n\n$root.ClassEvent = (function() {\n\n    /**\n     * Properties of a ClassEvent.\n     * @exports IClassEvent\n     * @interface IClassEvent\n     * @property {string|null} [id] ClassEvent id\n     * @property {IClassResponseEvent|null} [actionResponse] ClassEvent actionResponse\n     * @property {ISetClassStateEvent|null} [setRoomState] ClassEvent setRoomState\n     * @property {IClassEndedEvent|null} [classEnded] ClassEvent classEnded\n     * @property {IDeviceConnectedEvent|null} [deviceConnected] ClassEvent deviceConnected\n     * @property {IDeviceDisconnectedEvent|null} [deviceDisconnected] ClassEvent deviceDisconnected\n     * @property {IHostChangedEvent|null} [hostChanged] ClassEvent hostChanged\n     * @property {IContentChangedEvent|null} [contentChanged] ClassEvent contentChanged\n     * @property {INewChatMessageEvent|null} [newChatMessage] ClassEvent newChatMessage\n     * @property {IActivityStreamIdChangedEvent|null} [actvityStreamIdChanged] ClassEvent actvityStreamIdChanged\n     * @property {ITrophyRewardedToUserEvent|null} [trophyRewardedToUser] ClassEvent trophyRewardedToUser\n     * @property {ITrophyRewardedToAllEvent|null} [trophyRewardedToAll] ClassEvent trophyRewardedToAll\n     */\n\n    /**\n     * Constructs a new ClassEvent.\n     * @exports ClassEvent\n     * @classdesc Represents a ClassEvent.\n     * @implements IClassEvent\n     * @constructor\n     * @param {IClassEvent=} [properties] Properties to set\n     */\n    function ClassEvent(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * ClassEvent id.\n     * @member {string} id\n     * @memberof ClassEvent\n     * @instance\n     */\n    ClassEvent.prototype.id = \"\";\n\n    /**\n     * ClassEvent actionResponse.\n     * @member {IClassResponseEvent|null|undefined} actionResponse\n     * @memberof ClassEvent\n     * @instance\n     */\n    ClassEvent.prototype.actionResponse = null;\n\n    /**\n     * ClassEvent setRoomState.\n     * @member {ISetClassStateEvent|null|undefined} setRoomState\n     * @memberof ClassEvent\n     * @instance\n     */\n    ClassEvent.prototype.setRoomState = null;\n\n    /**\n     * ClassEvent classEnded.\n     * @member {IClassEndedEvent|null|undefined} classEnded\n     * @memberof ClassEvent\n     * @instance\n     */\n    ClassEvent.prototype.classEnded = null;\n\n    /**\n     * ClassEvent deviceConnected.\n     * @member {IDeviceConnectedEvent|null|undefined} deviceConnected\n     * @memberof ClassEvent\n     * @instance\n     */\n    ClassEvent.prototype.deviceConnected = null;\n\n    /**\n     * ClassEvent deviceDisconnected.\n     * @member {IDeviceDisconnectedEvent|null|undefined} deviceDisconnected\n     * @memberof ClassEvent\n     * @instance\n     */\n    ClassEvent.prototype.deviceDisconnected = null;\n\n    /**\n     * ClassEvent hostChanged.\n     * @member {IHostChangedEvent|null|undefined} hostChanged\n     * @memberof ClassEvent\n     * @instance\n     */\n    ClassEvent.prototype.hostChanged = null;\n\n    /**\n     * ClassEvent contentChanged.\n     * @member {IContentChangedEvent|null|undefined} contentChanged\n     * @memberof ClassEvent\n     * @instance\n     */\n    ClassEvent.prototype.contentChanged = null;\n\n    /**\n     * ClassEvent newChatMessage.\n     * @member {INewChatMessageEvent|null|undefined} newChatMessage\n     * @memberof ClassEvent\n     * @instance\n     */\n    ClassEvent.prototype.newChatMessage = null;\n\n    /**\n     * ClassEvent actvityStreamIdChanged.\n     * @member {IActivityStreamIdChangedEvent|null|undefined} actvityStreamIdChanged\n     * @memberof ClassEvent\n     * @instance\n     */\n    ClassEvent.prototype.actvityStreamIdChanged = null;\n\n    /**\n     * ClassEvent trophyRewardedToUser.\n     * @member {ITrophyRewardedToUserEvent|null|undefined} trophyRewardedToUser\n     * @memberof ClassEvent\n     * @instance\n     */\n    ClassEvent.prototype.trophyRewardedToUser = null;\n\n    /**\n     * ClassEvent trophyRewardedToAll.\n     * @member {ITrophyRewardedToAllEvent|null|undefined} trophyRewardedToAll\n     * @memberof ClassEvent\n     * @instance\n     */\n    ClassEvent.prototype.trophyRewardedToAll = null;\n\n    // OneOf field names bound to virtual getters and setters\n    var $oneOfFields;\n\n    /**\n     * ClassEvent type.\n     * @member {\"actionResponse\"|\"setRoomState\"|\"classEnded\"|\"deviceConnected\"|\"deviceDisconnected\"|\"hostChanged\"|\"contentChanged\"|\"newChatMessage\"|\"actvityStreamIdChanged\"|\"trophyRewardedToUser\"|\"trophyRewardedToAll\"|undefined} type\n     * @memberof ClassEvent\n     * @instance\n     */\n    Object.defineProperty(ClassEvent.prototype, \"type\", {\n        get: $util.oneOfGetter($oneOfFields = [\"actionResponse\", \"setRoomState\", \"classEnded\", \"deviceConnected\", \"deviceDisconnected\", \"hostChanged\", \"contentChanged\", \"newChatMessage\", \"actvityStreamIdChanged\", \"trophyRewardedToUser\", \"trophyRewardedToAll\"]),\n        set: $util.oneOfSetter($oneOfFields)\n    });\n\n    /**\n     * Creates a new ClassEvent instance using the specified properties.\n     * @function create\n     * @memberof ClassEvent\n     * @static\n     * @param {IClassEvent=} [properties] Properties to set\n     * @returns {ClassEvent} ClassEvent instance\n     */\n    ClassEvent.create = function create(properties) {\n        return new ClassEvent(properties);\n    };\n\n    /**\n     * Encodes the specified ClassEvent message. Does not implicitly {@link ClassEvent.verify|verify} messages.\n     * @function encode\n     * @memberof ClassEvent\n     * @static\n     * @param {IClassEvent} message ClassEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ClassEvent.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.id != null && Object.hasOwnProperty.call(message, \"id\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);\n        if (message.actionResponse != null && Object.hasOwnProperty.call(message, \"actionResponse\"))\n            $root.ClassResponseEvent.encode(message.actionResponse, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        if (message.setRoomState != null && Object.hasOwnProperty.call(message, \"setRoomState\"))\n            $root.SetClassStateEvent.encode(message.setRoomState, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n        if (message.classEnded != null && Object.hasOwnProperty.call(message, \"classEnded\"))\n            $root.ClassEndedEvent.encode(message.classEnded, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n        if (message.deviceConnected != null && Object.hasOwnProperty.call(message, \"deviceConnected\"))\n            $root.DeviceConnectedEvent.encode(message.deviceConnected, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n        if (message.deviceDisconnected != null && Object.hasOwnProperty.call(message, \"deviceDisconnected\"))\n            $root.DeviceDisconnectedEvent.encode(message.deviceDisconnected, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n        if (message.hostChanged != null && Object.hasOwnProperty.call(message, \"hostChanged\"))\n            $root.HostChangedEvent.encode(message.hostChanged, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n        if (message.contentChanged != null && Object.hasOwnProperty.call(message, \"contentChanged\"))\n            $root.ContentChangedEvent.encode(message.contentChanged, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n        if (message.newChatMessage != null && Object.hasOwnProperty.call(message, \"newChatMessage\"))\n            $root.NewChatMessageEvent.encode(message.newChatMessage, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();\n        if (message.actvityStreamIdChanged != null && Object.hasOwnProperty.call(message, \"actvityStreamIdChanged\"))\n            $root.ActivityStreamIdChangedEvent.encode(message.actvityStreamIdChanged, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n        if (message.trophyRewardedToUser != null && Object.hasOwnProperty.call(message, \"trophyRewardedToUser\"))\n            $root.TrophyRewardedToUserEvent.encode(message.trophyRewardedToUser, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n        if (message.trophyRewardedToAll != null && Object.hasOwnProperty.call(message, \"trophyRewardedToAll\"))\n            $root.TrophyRewardedToAllEvent.encode(message.trophyRewardedToAll, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified ClassEvent message, length delimited. Does not implicitly {@link ClassEvent.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ClassEvent\n     * @static\n     * @param {IClassEvent} message ClassEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ClassEvent.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a ClassEvent message from the specified reader or buffer.\n     * @function decode\n     * @memberof ClassEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ClassEvent} ClassEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ClassEvent.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ClassEvent();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.id = reader.string();\n                break;\n            case 2:\n                message.actionResponse = $root.ClassResponseEvent.decode(reader, reader.uint32());\n                break;\n            case 3:\n                message.setRoomState = $root.SetClassStateEvent.decode(reader, reader.uint32());\n                break;\n            case 4:\n                message.classEnded = $root.ClassEndedEvent.decode(reader, reader.uint32());\n                break;\n            case 5:\n                message.deviceConnected = $root.DeviceConnectedEvent.decode(reader, reader.uint32());\n                break;\n            case 6:\n                message.deviceDisconnected = $root.DeviceDisconnectedEvent.decode(reader, reader.uint32());\n                break;\n            case 7:\n                message.hostChanged = $root.HostChangedEvent.decode(reader, reader.uint32());\n                break;\n            case 8:\n                message.contentChanged = $root.ContentChangedEvent.decode(reader, reader.uint32());\n                break;\n            case 9:\n                message.newChatMessage = $root.NewChatMessageEvent.decode(reader, reader.uint32());\n                break;\n            case 10:\n                message.actvityStreamIdChanged = $root.ActivityStreamIdChangedEvent.decode(reader, reader.uint32());\n                break;\n            case 11:\n                message.trophyRewardedToUser = $root.TrophyRewardedToUserEvent.decode(reader, reader.uint32());\n                break;\n            case 12:\n                message.trophyRewardedToAll = $root.TrophyRewardedToAllEvent.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a ClassEvent message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ClassEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ClassEvent} ClassEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ClassEvent.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a ClassEvent message.\n     * @function verify\n     * @memberof ClassEvent\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    ClassEvent.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        var properties = {};\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            if (!$util.isString(message.id))\n                return \"id: string expected\";\n        if (message.actionResponse != null && message.hasOwnProperty(\"actionResponse\")) {\n            properties.type = 1;\n            {\n                var error = $root.ClassResponseEvent.verify(message.actionResponse);\n                if (error)\n                    return \"actionResponse.\" + error;\n            }\n        }\n        if (message.setRoomState != null && message.hasOwnProperty(\"setRoomState\")) {\n            if (properties.type === 1)\n                return \"type: multiple values\";\n            properties.type = 1;\n            {\n                var error = $root.SetClassStateEvent.verify(message.setRoomState);\n                if (error)\n                    return \"setRoomState.\" + error;\n            }\n        }\n        if (message.classEnded != null && message.hasOwnProperty(\"classEnded\")) {\n            if (properties.type === 1)\n                return \"type: multiple values\";\n            properties.type = 1;\n            {\n                var error = $root.ClassEndedEvent.verify(message.classEnded);\n                if (error)\n                    return \"classEnded.\" + error;\n            }\n        }\n        if (message.deviceConnected != null && message.hasOwnProperty(\"deviceConnected\")) {\n            if (properties.type === 1)\n                return \"type: multiple values\";\n            properties.type = 1;\n            {\n                var error = $root.DeviceConnectedEvent.verify(message.deviceConnected);\n                if (error)\n                    return \"deviceConnected.\" + error;\n            }\n        }\n        if (message.deviceDisconnected != null && message.hasOwnProperty(\"deviceDisconnected\")) {\n            if (properties.type === 1)\n                return \"type: multiple values\";\n            properties.type = 1;\n            {\n                var error = $root.DeviceDisconnectedEvent.verify(message.deviceDisconnected);\n                if (error)\n                    return \"deviceDisconnected.\" + error;\n            }\n        }\n        if (message.hostChanged != null && message.hasOwnProperty(\"hostChanged\")) {\n            if (properties.type === 1)\n                return \"type: multiple values\";\n            properties.type = 1;\n            {\n                var error = $root.HostChangedEvent.verify(message.hostChanged);\n                if (error)\n                    return \"hostChanged.\" + error;\n            }\n        }\n        if (message.contentChanged != null && message.hasOwnProperty(\"contentChanged\")) {\n            if (properties.type === 1)\n                return \"type: multiple values\";\n            properties.type = 1;\n            {\n                var error = $root.ContentChangedEvent.verify(message.contentChanged);\n                if (error)\n                    return \"contentChanged.\" + error;\n            }\n        }\n        if (message.newChatMessage != null && message.hasOwnProperty(\"newChatMessage\")) {\n            if (properties.type === 1)\n                return \"type: multiple values\";\n            properties.type = 1;\n            {\n                var error = $root.NewChatMessageEvent.verify(message.newChatMessage);\n                if (error)\n                    return \"newChatMessage.\" + error;\n            }\n        }\n        if (message.actvityStreamIdChanged != null && message.hasOwnProperty(\"actvityStreamIdChanged\")) {\n            if (properties.type === 1)\n                return \"type: multiple values\";\n            properties.type = 1;\n            {\n                var error = $root.ActivityStreamIdChangedEvent.verify(message.actvityStreamIdChanged);\n                if (error)\n                    return \"actvityStreamIdChanged.\" + error;\n            }\n        }\n        if (message.trophyRewardedToUser != null && message.hasOwnProperty(\"trophyRewardedToUser\")) {\n            if (properties.type === 1)\n                return \"type: multiple values\";\n            properties.type = 1;\n            {\n                var error = $root.TrophyRewardedToUserEvent.verify(message.trophyRewardedToUser);\n                if (error)\n                    return \"trophyRewardedToUser.\" + error;\n            }\n        }\n        if (message.trophyRewardedToAll != null && message.hasOwnProperty(\"trophyRewardedToAll\")) {\n            if (properties.type === 1)\n                return \"type: multiple values\";\n            properties.type = 1;\n            {\n                var error = $root.TrophyRewardedToAllEvent.verify(message.trophyRewardedToAll);\n                if (error)\n                    return \"trophyRewardedToAll.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a ClassEvent message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ClassEvent\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ClassEvent} ClassEvent\n     */\n    ClassEvent.fromObject = function fromObject(object) {\n        if (object instanceof $root.ClassEvent)\n            return object;\n        var message = new $root.ClassEvent();\n        if (object.id != null)\n            message.id = String(object.id);\n        if (object.actionResponse != null) {\n            if (typeof object.actionResponse !== \"object\")\n                throw TypeError(\".ClassEvent.actionResponse: object expected\");\n            message.actionResponse = $root.ClassResponseEvent.fromObject(object.actionResponse);\n        }\n        if (object.setRoomState != null) {\n            if (typeof object.setRoomState !== \"object\")\n                throw TypeError(\".ClassEvent.setRoomState: object expected\");\n            message.setRoomState = $root.SetClassStateEvent.fromObject(object.setRoomState);\n        }\n        if (object.classEnded != null) {\n            if (typeof object.classEnded !== \"object\")\n                throw TypeError(\".ClassEvent.classEnded: object expected\");\n            message.classEnded = $root.ClassEndedEvent.fromObject(object.classEnded);\n        }\n        if (object.deviceConnected != null) {\n            if (typeof object.deviceConnected !== \"object\")\n                throw TypeError(\".ClassEvent.deviceConnected: object expected\");\n            message.deviceConnected = $root.DeviceConnectedEvent.fromObject(object.deviceConnected);\n        }\n        if (object.deviceDisconnected != null) {\n            if (typeof object.deviceDisconnected !== \"object\")\n                throw TypeError(\".ClassEvent.deviceDisconnected: object expected\");\n            message.deviceDisconnected = $root.DeviceDisconnectedEvent.fromObject(object.deviceDisconnected);\n        }\n        if (object.hostChanged != null) {\n            if (typeof object.hostChanged !== \"object\")\n                throw TypeError(\".ClassEvent.hostChanged: object expected\");\n            message.hostChanged = $root.HostChangedEvent.fromObject(object.hostChanged);\n        }\n        if (object.contentChanged != null) {\n            if (typeof object.contentChanged !== \"object\")\n                throw TypeError(\".ClassEvent.contentChanged: object expected\");\n            message.contentChanged = $root.ContentChangedEvent.fromObject(object.contentChanged);\n        }\n        if (object.newChatMessage != null) {\n            if (typeof object.newChatMessage !== \"object\")\n                throw TypeError(\".ClassEvent.newChatMessage: object expected\");\n            message.newChatMessage = $root.NewChatMessageEvent.fromObject(object.newChatMessage);\n        }\n        if (object.actvityStreamIdChanged != null) {\n            if (typeof object.actvityStreamIdChanged !== \"object\")\n                throw TypeError(\".ClassEvent.actvityStreamIdChanged: object expected\");\n            message.actvityStreamIdChanged = $root.ActivityStreamIdChangedEvent.fromObject(object.actvityStreamIdChanged);\n        }\n        if (object.trophyRewardedToUser != null) {\n            if (typeof object.trophyRewardedToUser !== \"object\")\n                throw TypeError(\".ClassEvent.trophyRewardedToUser: object expected\");\n            message.trophyRewardedToUser = $root.TrophyRewardedToUserEvent.fromObject(object.trophyRewardedToUser);\n        }\n        if (object.trophyRewardedToAll != null) {\n            if (typeof object.trophyRewardedToAll !== \"object\")\n                throw TypeError(\".ClassEvent.trophyRewardedToAll: object expected\");\n            message.trophyRewardedToAll = $root.TrophyRewardedToAllEvent.fromObject(object.trophyRewardedToAll);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a ClassEvent message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ClassEvent\n     * @static\n     * @param {ClassEvent} message ClassEvent\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    ClassEvent.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.id = \"\";\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            object.id = message.id;\n        if (message.actionResponse != null && message.hasOwnProperty(\"actionResponse\")) {\n            object.actionResponse = $root.ClassResponseEvent.toObject(message.actionResponse, options);\n            if (options.oneofs)\n                object.type = \"actionResponse\";\n        }\n        if (message.setRoomState != null && message.hasOwnProperty(\"setRoomState\")) {\n            object.setRoomState = $root.SetClassStateEvent.toObject(message.setRoomState, options);\n            if (options.oneofs)\n                object.type = \"setRoomState\";\n        }\n        if (message.classEnded != null && message.hasOwnProperty(\"classEnded\")) {\n            object.classEnded = $root.ClassEndedEvent.toObject(message.classEnded, options);\n            if (options.oneofs)\n                object.type = \"classEnded\";\n        }\n        if (message.deviceConnected != null && message.hasOwnProperty(\"deviceConnected\")) {\n            object.deviceConnected = $root.DeviceConnectedEvent.toObject(message.deviceConnected, options);\n            if (options.oneofs)\n                object.type = \"deviceConnected\";\n        }\n        if (message.deviceDisconnected != null && message.hasOwnProperty(\"deviceDisconnected\")) {\n            object.deviceDisconnected = $root.DeviceDisconnectedEvent.toObject(message.deviceDisconnected, options);\n            if (options.oneofs)\n                object.type = \"deviceDisconnected\";\n        }\n        if (message.hostChanged != null && message.hasOwnProperty(\"hostChanged\")) {\n            object.hostChanged = $root.HostChangedEvent.toObject(message.hostChanged, options);\n            if (options.oneofs)\n                object.type = \"hostChanged\";\n        }\n        if (message.contentChanged != null && message.hasOwnProperty(\"contentChanged\")) {\n            object.contentChanged = $root.ContentChangedEvent.toObject(message.contentChanged, options);\n            if (options.oneofs)\n                object.type = \"contentChanged\";\n        }\n        if (message.newChatMessage != null && message.hasOwnProperty(\"newChatMessage\")) {\n            object.newChatMessage = $root.NewChatMessageEvent.toObject(message.newChatMessage, options);\n            if (options.oneofs)\n                object.type = \"newChatMessage\";\n        }\n        if (message.actvityStreamIdChanged != null && message.hasOwnProperty(\"actvityStreamIdChanged\")) {\n            object.actvityStreamIdChanged = $root.ActivityStreamIdChangedEvent.toObject(message.actvityStreamIdChanged, options);\n            if (options.oneofs)\n                object.type = \"actvityStreamIdChanged\";\n        }\n        if (message.trophyRewardedToUser != null && message.hasOwnProperty(\"trophyRewardedToUser\")) {\n            object.trophyRewardedToUser = $root.TrophyRewardedToUserEvent.toObject(message.trophyRewardedToUser, options);\n            if (options.oneofs)\n                object.type = \"trophyRewardedToUser\";\n        }\n        if (message.trophyRewardedToAll != null && message.hasOwnProperty(\"trophyRewardedToAll\")) {\n            object.trophyRewardedToAll = $root.TrophyRewardedToAllEvent.toObject(message.trophyRewardedToAll, options);\n            if (options.oneofs)\n                object.type = \"trophyRewardedToAll\";\n        }\n        return object;\n    };\n\n    /**\n     * Converts this ClassEvent to JSON.\n     * @function toJSON\n     * @memberof ClassEvent\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    ClassEvent.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ClassEvent;\n})();\n\n$root.EndClassRequest = (function() {\n\n    /**\n     * Properties of an EndClassRequest.\n     * @exports IEndClassRequest\n     * @interface IEndClassRequest\n     */\n\n    /**\n     * Constructs a new EndClassRequest.\n     * @exports EndClassRequest\n     * @classdesc Represents an EndClassRequest.\n     * @implements IEndClassRequest\n     * @constructor\n     * @param {IEndClassRequest=} [properties] Properties to set\n     */\n    function EndClassRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Creates a new EndClassRequest instance using the specified properties.\n     * @function create\n     * @memberof EndClassRequest\n     * @static\n     * @param {IEndClassRequest=} [properties] Properties to set\n     * @returns {EndClassRequest} EndClassRequest instance\n     */\n    EndClassRequest.create = function create(properties) {\n        return new EndClassRequest(properties);\n    };\n\n    /**\n     * Encodes the specified EndClassRequest message. Does not implicitly {@link EndClassRequest.verify|verify} messages.\n     * @function encode\n     * @memberof EndClassRequest\n     * @static\n     * @param {IEndClassRequest} message EndClassRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    EndClassRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified EndClassRequest message, length delimited. Does not implicitly {@link EndClassRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof EndClassRequest\n     * @static\n     * @param {IEndClassRequest} message EndClassRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    EndClassRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an EndClassRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof EndClassRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {EndClassRequest} EndClassRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    EndClassRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.EndClassRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes an EndClassRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof EndClassRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {EndClassRequest} EndClassRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    EndClassRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an EndClassRequest message.\n     * @function verify\n     * @memberof EndClassRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    EndClassRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        return null;\n    };\n\n    /**\n     * Creates an EndClassRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof EndClassRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {EndClassRequest} EndClassRequest\n     */\n    EndClassRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.EndClassRequest)\n            return object;\n        return new $root.EndClassRequest();\n    };\n\n    /**\n     * Creates a plain object from an EndClassRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof EndClassRequest\n     * @static\n     * @param {EndClassRequest} message EndClassRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    EndClassRequest.toObject = function toObject() {\n        return {};\n    };\n\n    /**\n     * Converts this EndClassRequest to JSON.\n     * @function toJSON\n     * @memberof EndClassRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    EndClassRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return EndClassRequest;\n})();\n\n$root.SetHostRequest = (function() {\n\n    /**\n     * Properties of a SetHostRequest.\n     * @exports ISetHostRequest\n     * @interface ISetHostRequest\n     * @property {string|null} [hostUserId] SetHostRequest hostUserId\n     */\n\n    /**\n     * Constructs a new SetHostRequest.\n     * @exports SetHostRequest\n     * @classdesc Represents a SetHostRequest.\n     * @implements ISetHostRequest\n     * @constructor\n     * @param {ISetHostRequest=} [properties] Properties to set\n     */\n    function SetHostRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SetHostRequest hostUserId.\n     * @member {string} hostUserId\n     * @memberof SetHostRequest\n     * @instance\n     */\n    SetHostRequest.prototype.hostUserId = \"\";\n\n    /**\n     * Creates a new SetHostRequest instance using the specified properties.\n     * @function create\n     * @memberof SetHostRequest\n     * @static\n     * @param {ISetHostRequest=} [properties] Properties to set\n     * @returns {SetHostRequest} SetHostRequest instance\n     */\n    SetHostRequest.create = function create(properties) {\n        return new SetHostRequest(properties);\n    };\n\n    /**\n     * Encodes the specified SetHostRequest message. Does not implicitly {@link SetHostRequest.verify|verify} messages.\n     * @function encode\n     * @memberof SetHostRequest\n     * @static\n     * @param {ISetHostRequest} message SetHostRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SetHostRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.hostUserId != null && Object.hasOwnProperty.call(message, \"hostUserId\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.hostUserId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SetHostRequest message, length delimited. Does not implicitly {@link SetHostRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SetHostRequest\n     * @static\n     * @param {ISetHostRequest} message SetHostRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SetHostRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SetHostRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof SetHostRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SetHostRequest} SetHostRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SetHostRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SetHostRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.hostUserId = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SetHostRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SetHostRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SetHostRequest} SetHostRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SetHostRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SetHostRequest message.\n     * @function verify\n     * @memberof SetHostRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SetHostRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.hostUserId != null && message.hasOwnProperty(\"hostUserId\"))\n            if (!$util.isString(message.hostUserId))\n                return \"hostUserId: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SetHostRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SetHostRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SetHostRequest} SetHostRequest\n     */\n    SetHostRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.SetHostRequest)\n            return object;\n        var message = new $root.SetHostRequest();\n        if (object.hostUserId != null)\n            message.hostUserId = String(object.hostUserId);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SetHostRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SetHostRequest\n     * @static\n     * @param {SetHostRequest} message SetHostRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SetHostRequest.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.hostUserId = \"\";\n        if (message.hostUserId != null && message.hasOwnProperty(\"hostUserId\"))\n            object.hostUserId = message.hostUserId;\n        return object;\n    };\n\n    /**\n     * Converts this SetHostRequest to JSON.\n     * @function toJSON\n     * @memberof SetHostRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SetHostRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SetHostRequest;\n})();\n\n$root.SetContentRequest = (function() {\n\n    /**\n     * Properties of a SetContentRequest.\n     * @exports ISetContentRequest\n     * @interface ISetContentRequest\n     * @property {IContent|null} [content] SetContentRequest content\n     */\n\n    /**\n     * Constructs a new SetContentRequest.\n     * @exports SetContentRequest\n     * @classdesc Represents a SetContentRequest.\n     * @implements ISetContentRequest\n     * @constructor\n     * @param {ISetContentRequest=} [properties] Properties to set\n     */\n    function SetContentRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SetContentRequest content.\n     * @member {IContent|null|undefined} content\n     * @memberof SetContentRequest\n     * @instance\n     */\n    SetContentRequest.prototype.content = null;\n\n    /**\n     * Creates a new SetContentRequest instance using the specified properties.\n     * @function create\n     * @memberof SetContentRequest\n     * @static\n     * @param {ISetContentRequest=} [properties] Properties to set\n     * @returns {SetContentRequest} SetContentRequest instance\n     */\n    SetContentRequest.create = function create(properties) {\n        return new SetContentRequest(properties);\n    };\n\n    /**\n     * Encodes the specified SetContentRequest message. Does not implicitly {@link SetContentRequest.verify|verify} messages.\n     * @function encode\n     * @memberof SetContentRequest\n     * @static\n     * @param {ISetContentRequest} message SetContentRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SetContentRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.content != null && Object.hasOwnProperty.call(message, \"content\"))\n            $root.Content.encode(message.content, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SetContentRequest message, length delimited. Does not implicitly {@link SetContentRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SetContentRequest\n     * @static\n     * @param {ISetContentRequest} message SetContentRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SetContentRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SetContentRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof SetContentRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SetContentRequest} SetContentRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SetContentRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SetContentRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.content = $root.Content.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SetContentRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SetContentRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SetContentRequest} SetContentRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SetContentRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SetContentRequest message.\n     * @function verify\n     * @memberof SetContentRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SetContentRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.content != null && message.hasOwnProperty(\"content\")) {\n            var error = $root.Content.verify(message.content);\n            if (error)\n                return \"content.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SetContentRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SetContentRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SetContentRequest} SetContentRequest\n     */\n    SetContentRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.SetContentRequest)\n            return object;\n        var message = new $root.SetContentRequest();\n        if (object.content != null) {\n            if (typeof object.content !== \"object\")\n                throw TypeError(\".SetContentRequest.content: object expected\");\n            message.content = $root.Content.fromObject(object.content);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SetContentRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SetContentRequest\n     * @static\n     * @param {SetContentRequest} message SetContentRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SetContentRequest.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.content = null;\n        if (message.content != null && message.hasOwnProperty(\"content\"))\n            object.content = $root.Content.toObject(message.content, options);\n        return object;\n    };\n\n    /**\n     * Converts this SetContentRequest to JSON.\n     * @function toJSON\n     * @memberof SetContentRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SetContentRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SetContentRequest;\n})();\n\n$root.SetActivityStreamIdRequest = (function() {\n\n    /**\n     * Properties of a SetActivityStreamIdRequest.\n     * @exports ISetActivityStreamIdRequest\n     * @interface ISetActivityStreamIdRequest\n     * @property {string|null} [deviceId] SetActivityStreamIdRequest deviceId\n     * @property {string|null} [activityStreamId] SetActivityStreamIdRequest activityStreamId\n     */\n\n    /**\n     * Constructs a new SetActivityStreamIdRequest.\n     * @exports SetActivityStreamIdRequest\n     * @classdesc Represents a SetActivityStreamIdRequest.\n     * @implements ISetActivityStreamIdRequest\n     * @constructor\n     * @param {ISetActivityStreamIdRequest=} [properties] Properties to set\n     */\n    function SetActivityStreamIdRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SetActivityStreamIdRequest deviceId.\n     * @member {string} deviceId\n     * @memberof SetActivityStreamIdRequest\n     * @instance\n     */\n    SetActivityStreamIdRequest.prototype.deviceId = \"\";\n\n    /**\n     * SetActivityStreamIdRequest activityStreamId.\n     * @member {string} activityStreamId\n     * @memberof SetActivityStreamIdRequest\n     * @instance\n     */\n    SetActivityStreamIdRequest.prototype.activityStreamId = \"\";\n\n    /**\n     * Creates a new SetActivityStreamIdRequest instance using the specified properties.\n     * @function create\n     * @memberof SetActivityStreamIdRequest\n     * @static\n     * @param {ISetActivityStreamIdRequest=} [properties] Properties to set\n     * @returns {SetActivityStreamIdRequest} SetActivityStreamIdRequest instance\n     */\n    SetActivityStreamIdRequest.create = function create(properties) {\n        return new SetActivityStreamIdRequest(properties);\n    };\n\n    /**\n     * Encodes the specified SetActivityStreamIdRequest message. Does not implicitly {@link SetActivityStreamIdRequest.verify|verify} messages.\n     * @function encode\n     * @memberof SetActivityStreamIdRequest\n     * @static\n     * @param {ISetActivityStreamIdRequest} message SetActivityStreamIdRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SetActivityStreamIdRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.deviceId != null && Object.hasOwnProperty.call(message, \"deviceId\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.deviceId);\n        if (message.activityStreamId != null && Object.hasOwnProperty.call(message, \"activityStreamId\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.activityStreamId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SetActivityStreamIdRequest message, length delimited. Does not implicitly {@link SetActivityStreamIdRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SetActivityStreamIdRequest\n     * @static\n     * @param {ISetActivityStreamIdRequest} message SetActivityStreamIdRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SetActivityStreamIdRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SetActivityStreamIdRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof SetActivityStreamIdRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SetActivityStreamIdRequest} SetActivityStreamIdRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SetActivityStreamIdRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SetActivityStreamIdRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.deviceId = reader.string();\n                break;\n            case 2:\n                message.activityStreamId = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SetActivityStreamIdRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SetActivityStreamIdRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SetActivityStreamIdRequest} SetActivityStreamIdRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SetActivityStreamIdRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SetActivityStreamIdRequest message.\n     * @function verify\n     * @memberof SetActivityStreamIdRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SetActivityStreamIdRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.deviceId != null && message.hasOwnProperty(\"deviceId\"))\n            if (!$util.isString(message.deviceId))\n                return \"deviceId: string expected\";\n        if (message.activityStreamId != null && message.hasOwnProperty(\"activityStreamId\"))\n            if (!$util.isString(message.activityStreamId))\n                return \"activityStreamId: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SetActivityStreamIdRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SetActivityStreamIdRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SetActivityStreamIdRequest} SetActivityStreamIdRequest\n     */\n    SetActivityStreamIdRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.SetActivityStreamIdRequest)\n            return object;\n        var message = new $root.SetActivityStreamIdRequest();\n        if (object.deviceId != null)\n            message.deviceId = String(object.deviceId);\n        if (object.activityStreamId != null)\n            message.activityStreamId = String(object.activityStreamId);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SetActivityStreamIdRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SetActivityStreamIdRequest\n     * @static\n     * @param {SetActivityStreamIdRequest} message SetActivityStreamIdRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SetActivityStreamIdRequest.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.deviceId = \"\";\n            object.activityStreamId = \"\";\n        }\n        if (message.deviceId != null && message.hasOwnProperty(\"deviceId\"))\n            object.deviceId = message.deviceId;\n        if (message.activityStreamId != null && message.hasOwnProperty(\"activityStreamId\"))\n            object.activityStreamId = message.activityStreamId;\n        return object;\n    };\n\n    /**\n     * Converts this SetActivityStreamIdRequest to JSON.\n     * @function toJSON\n     * @memberof SetActivityStreamIdRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SetActivityStreamIdRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SetActivityStreamIdRequest;\n})();\n\n$root.RewardTrophyToUserRequest = (function() {\n\n    /**\n     * Properties of a RewardTrophyToUserRequest.\n     * @exports IRewardTrophyToUserRequest\n     * @interface IRewardTrophyToUserRequest\n     * @property {string|null} [userId] RewardTrophyToUserRequest userId\n     * @property {ITrophy|null} [trophy] RewardTrophyToUserRequest trophy\n     */\n\n    /**\n     * Constructs a new RewardTrophyToUserRequest.\n     * @exports RewardTrophyToUserRequest\n     * @classdesc Represents a RewardTrophyToUserRequest.\n     * @implements IRewardTrophyToUserRequest\n     * @constructor\n     * @param {IRewardTrophyToUserRequest=} [properties] Properties to set\n     */\n    function RewardTrophyToUserRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * RewardTrophyToUserRequest userId.\n     * @member {string} userId\n     * @memberof RewardTrophyToUserRequest\n     * @instance\n     */\n    RewardTrophyToUserRequest.prototype.userId = \"\";\n\n    /**\n     * RewardTrophyToUserRequest trophy.\n     * @member {ITrophy|null|undefined} trophy\n     * @memberof RewardTrophyToUserRequest\n     * @instance\n     */\n    RewardTrophyToUserRequest.prototype.trophy = null;\n\n    /**\n     * Creates a new RewardTrophyToUserRequest instance using the specified properties.\n     * @function create\n     * @memberof RewardTrophyToUserRequest\n     * @static\n     * @param {IRewardTrophyToUserRequest=} [properties] Properties to set\n     * @returns {RewardTrophyToUserRequest} RewardTrophyToUserRequest instance\n     */\n    RewardTrophyToUserRequest.create = function create(properties) {\n        return new RewardTrophyToUserRequest(properties);\n    };\n\n    /**\n     * Encodes the specified RewardTrophyToUserRequest message. Does not implicitly {@link RewardTrophyToUserRequest.verify|verify} messages.\n     * @function encode\n     * @memberof RewardTrophyToUserRequest\n     * @static\n     * @param {IRewardTrophyToUserRequest} message RewardTrophyToUserRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    RewardTrophyToUserRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.userId != null && Object.hasOwnProperty.call(message, \"userId\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.userId);\n        if (message.trophy != null && Object.hasOwnProperty.call(message, \"trophy\"))\n            $root.Trophy.encode(message.trophy, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified RewardTrophyToUserRequest message, length delimited. Does not implicitly {@link RewardTrophyToUserRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof RewardTrophyToUserRequest\n     * @static\n     * @param {IRewardTrophyToUserRequest} message RewardTrophyToUserRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    RewardTrophyToUserRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a RewardTrophyToUserRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof RewardTrophyToUserRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {RewardTrophyToUserRequest} RewardTrophyToUserRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    RewardTrophyToUserRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.RewardTrophyToUserRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.userId = reader.string();\n                break;\n            case 2:\n                message.trophy = $root.Trophy.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a RewardTrophyToUserRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof RewardTrophyToUserRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {RewardTrophyToUserRequest} RewardTrophyToUserRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    RewardTrophyToUserRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a RewardTrophyToUserRequest message.\n     * @function verify\n     * @memberof RewardTrophyToUserRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    RewardTrophyToUserRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            if (!$util.isString(message.userId))\n                return \"userId: string expected\";\n        if (message.trophy != null && message.hasOwnProperty(\"trophy\")) {\n            var error = $root.Trophy.verify(message.trophy);\n            if (error)\n                return \"trophy.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a RewardTrophyToUserRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof RewardTrophyToUserRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {RewardTrophyToUserRequest} RewardTrophyToUserRequest\n     */\n    RewardTrophyToUserRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.RewardTrophyToUserRequest)\n            return object;\n        var message = new $root.RewardTrophyToUserRequest();\n        if (object.userId != null)\n            message.userId = String(object.userId);\n        if (object.trophy != null) {\n            if (typeof object.trophy !== \"object\")\n                throw TypeError(\".RewardTrophyToUserRequest.trophy: object expected\");\n            message.trophy = $root.Trophy.fromObject(object.trophy);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a RewardTrophyToUserRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof RewardTrophyToUserRequest\n     * @static\n     * @param {RewardTrophyToUserRequest} message RewardTrophyToUserRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    RewardTrophyToUserRequest.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.userId = \"\";\n            object.trophy = null;\n        }\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            object.userId = message.userId;\n        if (message.trophy != null && message.hasOwnProperty(\"trophy\"))\n            object.trophy = $root.Trophy.toObject(message.trophy, options);\n        return object;\n    };\n\n    /**\n     * Converts this RewardTrophyToUserRequest to JSON.\n     * @function toJSON\n     * @memberof RewardTrophyToUserRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    RewardTrophyToUserRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return RewardTrophyToUserRequest;\n})();\n\n$root.RewardTrophyToAllRequest = (function() {\n\n    /**\n     * Properties of a RewardTrophyToAllRequest.\n     * @exports IRewardTrophyToAllRequest\n     * @interface IRewardTrophyToAllRequest\n     * @property {ITrophy|null} [trophy] RewardTrophyToAllRequest trophy\n     */\n\n    /**\n     * Constructs a new RewardTrophyToAllRequest.\n     * @exports RewardTrophyToAllRequest\n     * @classdesc Represents a RewardTrophyToAllRequest.\n     * @implements IRewardTrophyToAllRequest\n     * @constructor\n     * @param {IRewardTrophyToAllRequest=} [properties] Properties to set\n     */\n    function RewardTrophyToAllRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * RewardTrophyToAllRequest trophy.\n     * @member {ITrophy|null|undefined} trophy\n     * @memberof RewardTrophyToAllRequest\n     * @instance\n     */\n    RewardTrophyToAllRequest.prototype.trophy = null;\n\n    /**\n     * Creates a new RewardTrophyToAllRequest instance using the specified properties.\n     * @function create\n     * @memberof RewardTrophyToAllRequest\n     * @static\n     * @param {IRewardTrophyToAllRequest=} [properties] Properties to set\n     * @returns {RewardTrophyToAllRequest} RewardTrophyToAllRequest instance\n     */\n    RewardTrophyToAllRequest.create = function create(properties) {\n        return new RewardTrophyToAllRequest(properties);\n    };\n\n    /**\n     * Encodes the specified RewardTrophyToAllRequest message. Does not implicitly {@link RewardTrophyToAllRequest.verify|verify} messages.\n     * @function encode\n     * @memberof RewardTrophyToAllRequest\n     * @static\n     * @param {IRewardTrophyToAllRequest} message RewardTrophyToAllRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    RewardTrophyToAllRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.trophy != null && Object.hasOwnProperty.call(message, \"trophy\"))\n            $root.Trophy.encode(message.trophy, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified RewardTrophyToAllRequest message, length delimited. Does not implicitly {@link RewardTrophyToAllRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof RewardTrophyToAllRequest\n     * @static\n     * @param {IRewardTrophyToAllRequest} message RewardTrophyToAllRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    RewardTrophyToAllRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a RewardTrophyToAllRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof RewardTrophyToAllRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {RewardTrophyToAllRequest} RewardTrophyToAllRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    RewardTrophyToAllRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.RewardTrophyToAllRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.trophy = $root.Trophy.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a RewardTrophyToAllRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof RewardTrophyToAllRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {RewardTrophyToAllRequest} RewardTrophyToAllRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    RewardTrophyToAllRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a RewardTrophyToAllRequest message.\n     * @function verify\n     * @memberof RewardTrophyToAllRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    RewardTrophyToAllRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.trophy != null && message.hasOwnProperty(\"trophy\")) {\n            var error = $root.Trophy.verify(message.trophy);\n            if (error)\n                return \"trophy.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a RewardTrophyToAllRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof RewardTrophyToAllRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {RewardTrophyToAllRequest} RewardTrophyToAllRequest\n     */\n    RewardTrophyToAllRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.RewardTrophyToAllRequest)\n            return object;\n        var message = new $root.RewardTrophyToAllRequest();\n        if (object.trophy != null) {\n            if (typeof object.trophy !== \"object\")\n                throw TypeError(\".RewardTrophyToAllRequest.trophy: object expected\");\n            message.trophy = $root.Trophy.fromObject(object.trophy);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a RewardTrophyToAllRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof RewardTrophyToAllRequest\n     * @static\n     * @param {RewardTrophyToAllRequest} message RewardTrophyToAllRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    RewardTrophyToAllRequest.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.trophy = null;\n        if (message.trophy != null && message.hasOwnProperty(\"trophy\"))\n            object.trophy = $root.Trophy.toObject(message.trophy, options);\n        return object;\n    };\n\n    /**\n     * Converts this RewardTrophyToAllRequest to JSON.\n     * @function toJSON\n     * @memberof RewardTrophyToAllRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    RewardTrophyToAllRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return RewardTrophyToAllRequest;\n})();\n\n$root.SendChatMessageRequest = (function() {\n\n    /**\n     * Properties of a SendChatMessageRequest.\n     * @exports ISendChatMessageRequest\n     * @interface ISendChatMessageRequest\n     * @property {string|null} [message] SendChatMessageRequest message\n     */\n\n    /**\n     * Constructs a new SendChatMessageRequest.\n     * @exports SendChatMessageRequest\n     * @classdesc Represents a SendChatMessageRequest.\n     * @implements ISendChatMessageRequest\n     * @constructor\n     * @param {ISendChatMessageRequest=} [properties] Properties to set\n     */\n    function SendChatMessageRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SendChatMessageRequest message.\n     * @member {string} message\n     * @memberof SendChatMessageRequest\n     * @instance\n     */\n    SendChatMessageRequest.prototype.message = \"\";\n\n    /**\n     * Creates a new SendChatMessageRequest instance using the specified properties.\n     * @function create\n     * @memberof SendChatMessageRequest\n     * @static\n     * @param {ISendChatMessageRequest=} [properties] Properties to set\n     * @returns {SendChatMessageRequest} SendChatMessageRequest instance\n     */\n    SendChatMessageRequest.create = function create(properties) {\n        return new SendChatMessageRequest(properties);\n    };\n\n    /**\n     * Encodes the specified SendChatMessageRequest message. Does not implicitly {@link SendChatMessageRequest.verify|verify} messages.\n     * @function encode\n     * @memberof SendChatMessageRequest\n     * @static\n     * @param {ISendChatMessageRequest} message SendChatMessageRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SendChatMessageRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.message != null && Object.hasOwnProperty.call(message, \"message\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.message);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SendChatMessageRequest message, length delimited. Does not implicitly {@link SendChatMessageRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SendChatMessageRequest\n     * @static\n     * @param {ISendChatMessageRequest} message SendChatMessageRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SendChatMessageRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SendChatMessageRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof SendChatMessageRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SendChatMessageRequest} SendChatMessageRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SendChatMessageRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SendChatMessageRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.message = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SendChatMessageRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SendChatMessageRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SendChatMessageRequest} SendChatMessageRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SendChatMessageRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SendChatMessageRequest message.\n     * @function verify\n     * @memberof SendChatMessageRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SendChatMessageRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.message != null && message.hasOwnProperty(\"message\"))\n            if (!$util.isString(message.message))\n                return \"message: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SendChatMessageRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SendChatMessageRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SendChatMessageRequest} SendChatMessageRequest\n     */\n    SendChatMessageRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.SendChatMessageRequest)\n            return object;\n        var message = new $root.SendChatMessageRequest();\n        if (object.message != null)\n            message.message = String(object.message);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SendChatMessageRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SendChatMessageRequest\n     * @static\n     * @param {SendChatMessageRequest} message SendChatMessageRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SendChatMessageRequest.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.message = \"\";\n        if (message.message != null && message.hasOwnProperty(\"message\"))\n            object.message = message.message;\n        return object;\n    };\n\n    /**\n     * Converts this SendChatMessageRequest to JSON.\n     * @function toJSON\n     * @memberof SendChatMessageRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SendChatMessageRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SendChatMessageRequest;\n})();\n\n$root.ClassResponseEvent = (function() {\n\n    /**\n     * Properties of a ClassResponseEvent.\n     * @exports IClassResponseEvent\n     * @interface IClassResponseEvent\n     * @property {string|null} [id] ClassResponseEvent id\n     * @property {string|null} [error] ClassResponseEvent error\n     */\n\n    /**\n     * Constructs a new ClassResponseEvent.\n     * @exports ClassResponseEvent\n     * @classdesc Represents a ClassResponseEvent.\n     * @implements IClassResponseEvent\n     * @constructor\n     * @param {IClassResponseEvent=} [properties] Properties to set\n     */\n    function ClassResponseEvent(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * ClassResponseEvent id.\n     * @member {string} id\n     * @memberof ClassResponseEvent\n     * @instance\n     */\n    ClassResponseEvent.prototype.id = \"\";\n\n    /**\n     * ClassResponseEvent error.\n     * @member {string} error\n     * @memberof ClassResponseEvent\n     * @instance\n     */\n    ClassResponseEvent.prototype.error = \"\";\n\n    /**\n     * Creates a new ClassResponseEvent instance using the specified properties.\n     * @function create\n     * @memberof ClassResponseEvent\n     * @static\n     * @param {IClassResponseEvent=} [properties] Properties to set\n     * @returns {ClassResponseEvent} ClassResponseEvent instance\n     */\n    ClassResponseEvent.create = function create(properties) {\n        return new ClassResponseEvent(properties);\n    };\n\n    /**\n     * Encodes the specified ClassResponseEvent message. Does not implicitly {@link ClassResponseEvent.verify|verify} messages.\n     * @function encode\n     * @memberof ClassResponseEvent\n     * @static\n     * @param {IClassResponseEvent} message ClassResponseEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ClassResponseEvent.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.id != null && Object.hasOwnProperty.call(message, \"id\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);\n        if (message.error != null && Object.hasOwnProperty.call(message, \"error\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.error);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified ClassResponseEvent message, length delimited. Does not implicitly {@link ClassResponseEvent.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ClassResponseEvent\n     * @static\n     * @param {IClassResponseEvent} message ClassResponseEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ClassResponseEvent.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a ClassResponseEvent message from the specified reader or buffer.\n     * @function decode\n     * @memberof ClassResponseEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ClassResponseEvent} ClassResponseEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ClassResponseEvent.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ClassResponseEvent();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.id = reader.string();\n                break;\n            case 2:\n                message.error = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a ClassResponseEvent message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ClassResponseEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ClassResponseEvent} ClassResponseEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ClassResponseEvent.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a ClassResponseEvent message.\n     * @function verify\n     * @memberof ClassResponseEvent\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    ClassResponseEvent.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            if (!$util.isString(message.id))\n                return \"id: string expected\";\n        if (message.error != null && message.hasOwnProperty(\"error\"))\n            if (!$util.isString(message.error))\n                return \"error: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a ClassResponseEvent message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ClassResponseEvent\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ClassResponseEvent} ClassResponseEvent\n     */\n    ClassResponseEvent.fromObject = function fromObject(object) {\n        if (object instanceof $root.ClassResponseEvent)\n            return object;\n        var message = new $root.ClassResponseEvent();\n        if (object.id != null)\n            message.id = String(object.id);\n        if (object.error != null)\n            message.error = String(object.error);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a ClassResponseEvent message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ClassResponseEvent\n     * @static\n     * @param {ClassResponseEvent} message ClassResponseEvent\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    ClassResponseEvent.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.id = \"\";\n            object.error = \"\";\n        }\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            object.id = message.id;\n        if (message.error != null && message.hasOwnProperty(\"error\"))\n            object.error = message.error;\n        return object;\n    };\n\n    /**\n     * Converts this ClassResponseEvent to JSON.\n     * @function toJSON\n     * @memberof ClassResponseEvent\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    ClassResponseEvent.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ClassResponseEvent;\n})();\n\n$root.SetClassStateEvent = (function() {\n\n    /**\n     * Properties of a SetClassStateEvent.\n     * @exports ISetClassStateEvent\n     * @interface ISetClassStateEvent\n     * @property {IClassState|null} [state] SetClassStateEvent state\n     */\n\n    /**\n     * Constructs a new SetClassStateEvent.\n     * @exports SetClassStateEvent\n     * @classdesc Represents a SetClassStateEvent.\n     * @implements ISetClassStateEvent\n     * @constructor\n     * @param {ISetClassStateEvent=} [properties] Properties to set\n     */\n    function SetClassStateEvent(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SetClassStateEvent state.\n     * @member {IClassState|null|undefined} state\n     * @memberof SetClassStateEvent\n     * @instance\n     */\n    SetClassStateEvent.prototype.state = null;\n\n    /**\n     * Creates a new SetClassStateEvent instance using the specified properties.\n     * @function create\n     * @memberof SetClassStateEvent\n     * @static\n     * @param {ISetClassStateEvent=} [properties] Properties to set\n     * @returns {SetClassStateEvent} SetClassStateEvent instance\n     */\n    SetClassStateEvent.create = function create(properties) {\n        return new SetClassStateEvent(properties);\n    };\n\n    /**\n     * Encodes the specified SetClassStateEvent message. Does not implicitly {@link SetClassStateEvent.verify|verify} messages.\n     * @function encode\n     * @memberof SetClassStateEvent\n     * @static\n     * @param {ISetClassStateEvent} message SetClassStateEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SetClassStateEvent.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.state != null && Object.hasOwnProperty.call(message, \"state\"))\n            $root.ClassState.encode(message.state, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SetClassStateEvent message, length delimited. Does not implicitly {@link SetClassStateEvent.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SetClassStateEvent\n     * @static\n     * @param {ISetClassStateEvent} message SetClassStateEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SetClassStateEvent.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SetClassStateEvent message from the specified reader or buffer.\n     * @function decode\n     * @memberof SetClassStateEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SetClassStateEvent} SetClassStateEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SetClassStateEvent.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SetClassStateEvent();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.state = $root.ClassState.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SetClassStateEvent message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SetClassStateEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SetClassStateEvent} SetClassStateEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SetClassStateEvent.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SetClassStateEvent message.\n     * @function verify\n     * @memberof SetClassStateEvent\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SetClassStateEvent.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.state != null && message.hasOwnProperty(\"state\")) {\n            var error = $root.ClassState.verify(message.state);\n            if (error)\n                return \"state.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SetClassStateEvent message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SetClassStateEvent\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SetClassStateEvent} SetClassStateEvent\n     */\n    SetClassStateEvent.fromObject = function fromObject(object) {\n        if (object instanceof $root.SetClassStateEvent)\n            return object;\n        var message = new $root.SetClassStateEvent();\n        if (object.state != null) {\n            if (typeof object.state !== \"object\")\n                throw TypeError(\".SetClassStateEvent.state: object expected\");\n            message.state = $root.ClassState.fromObject(object.state);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SetClassStateEvent message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SetClassStateEvent\n     * @static\n     * @param {SetClassStateEvent} message SetClassStateEvent\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SetClassStateEvent.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.state = null;\n        if (message.state != null && message.hasOwnProperty(\"state\"))\n            object.state = $root.ClassState.toObject(message.state, options);\n        return object;\n    };\n\n    /**\n     * Converts this SetClassStateEvent to JSON.\n     * @function toJSON\n     * @memberof SetClassStateEvent\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SetClassStateEvent.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SetClassStateEvent;\n})();\n\n$root.ClassEndedEvent = (function() {\n\n    /**\n     * Properties of a ClassEndedEvent.\n     * @exports IClassEndedEvent\n     * @interface IClassEndedEvent\n     * @property {number|Long|null} [timestamp] ClassEndedEvent timestamp\n     */\n\n    /**\n     * Constructs a new ClassEndedEvent.\n     * @exports ClassEndedEvent\n     * @classdesc Represents a ClassEndedEvent.\n     * @implements IClassEndedEvent\n     * @constructor\n     * @param {IClassEndedEvent=} [properties] Properties to set\n     */\n    function ClassEndedEvent(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * ClassEndedEvent timestamp.\n     * @member {number|Long} timestamp\n     * @memberof ClassEndedEvent\n     * @instance\n     */\n    ClassEndedEvent.prototype.timestamp = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Creates a new ClassEndedEvent instance using the specified properties.\n     * @function create\n     * @memberof ClassEndedEvent\n     * @static\n     * @param {IClassEndedEvent=} [properties] Properties to set\n     * @returns {ClassEndedEvent} ClassEndedEvent instance\n     */\n    ClassEndedEvent.create = function create(properties) {\n        return new ClassEndedEvent(properties);\n    };\n\n    /**\n     * Encodes the specified ClassEndedEvent message. Does not implicitly {@link ClassEndedEvent.verify|verify} messages.\n     * @function encode\n     * @memberof ClassEndedEvent\n     * @static\n     * @param {IClassEndedEvent} message ClassEndedEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ClassEndedEvent.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.timestamp != null && Object.hasOwnProperty.call(message, \"timestamp\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.timestamp);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified ClassEndedEvent message, length delimited. Does not implicitly {@link ClassEndedEvent.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ClassEndedEvent\n     * @static\n     * @param {IClassEndedEvent} message ClassEndedEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ClassEndedEvent.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a ClassEndedEvent message from the specified reader or buffer.\n     * @function decode\n     * @memberof ClassEndedEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ClassEndedEvent} ClassEndedEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ClassEndedEvent.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ClassEndedEvent();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.timestamp = reader.uint64();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a ClassEndedEvent message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ClassEndedEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ClassEndedEvent} ClassEndedEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ClassEndedEvent.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a ClassEndedEvent message.\n     * @function verify\n     * @memberof ClassEndedEvent\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    ClassEndedEvent.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.timestamp != null && message.hasOwnProperty(\"timestamp\"))\n            if (!$util.isInteger(message.timestamp) && !(message.timestamp && $util.isInteger(message.timestamp.low) && $util.isInteger(message.timestamp.high)))\n                return \"timestamp: integer|Long expected\";\n        return null;\n    };\n\n    /**\n     * Creates a ClassEndedEvent message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ClassEndedEvent\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ClassEndedEvent} ClassEndedEvent\n     */\n    ClassEndedEvent.fromObject = function fromObject(object) {\n        if (object instanceof $root.ClassEndedEvent)\n            return object;\n        var message = new $root.ClassEndedEvent();\n        if (object.timestamp != null)\n            if ($util.Long)\n                (message.timestamp = $util.Long.fromValue(object.timestamp)).unsigned = true;\n            else if (typeof object.timestamp === \"string\")\n                message.timestamp = parseInt(object.timestamp, 10);\n            else if (typeof object.timestamp === \"number\")\n                message.timestamp = object.timestamp;\n            else if (typeof object.timestamp === \"object\")\n                message.timestamp = new $util.LongBits(object.timestamp.low >>> 0, object.timestamp.high >>> 0).toNumber(true);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a ClassEndedEvent message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ClassEndedEvent\n     * @static\n     * @param {ClassEndedEvent} message ClassEndedEvent\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    ClassEndedEvent.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, true);\n                object.timestamp = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.timestamp = options.longs === String ? \"0\" : 0;\n        if (message.timestamp != null && message.hasOwnProperty(\"timestamp\"))\n            if (typeof message.timestamp === \"number\")\n                object.timestamp = options.longs === String ? String(message.timestamp) : message.timestamp;\n            else\n                object.timestamp = options.longs === String ? $util.Long.prototype.toString.call(message.timestamp) : options.longs === Number ? new $util.LongBits(message.timestamp.low >>> 0, message.timestamp.high >>> 0).toNumber(true) : message.timestamp;\n        return object;\n    };\n\n    /**\n     * Converts this ClassEndedEvent to JSON.\n     * @function toJSON\n     * @memberof ClassEndedEvent\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    ClassEndedEvent.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ClassEndedEvent;\n})();\n\n$root.DeviceConnectedEvent = (function() {\n\n    /**\n     * Properties of a DeviceConnectedEvent.\n     * @exports IDeviceConnectedEvent\n     * @interface IDeviceConnectedEvent\n     * @property {string|null} [name] DeviceConnectedEvent name\n     * @property {IDevice|null} [device] DeviceConnectedEvent device\n     */\n\n    /**\n     * Constructs a new DeviceConnectedEvent.\n     * @exports DeviceConnectedEvent\n     * @classdesc Represents a DeviceConnectedEvent.\n     * @implements IDeviceConnectedEvent\n     * @constructor\n     * @param {IDeviceConnectedEvent=} [properties] Properties to set\n     */\n    function DeviceConnectedEvent(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * DeviceConnectedEvent name.\n     * @member {string} name\n     * @memberof DeviceConnectedEvent\n     * @instance\n     */\n    DeviceConnectedEvent.prototype.name = \"\";\n\n    /**\n     * DeviceConnectedEvent device.\n     * @member {IDevice|null|undefined} device\n     * @memberof DeviceConnectedEvent\n     * @instance\n     */\n    DeviceConnectedEvent.prototype.device = null;\n\n    /**\n     * Creates a new DeviceConnectedEvent instance using the specified properties.\n     * @function create\n     * @memberof DeviceConnectedEvent\n     * @static\n     * @param {IDeviceConnectedEvent=} [properties] Properties to set\n     * @returns {DeviceConnectedEvent} DeviceConnectedEvent instance\n     */\n    DeviceConnectedEvent.create = function create(properties) {\n        return new DeviceConnectedEvent(properties);\n    };\n\n    /**\n     * Encodes the specified DeviceConnectedEvent message. Does not implicitly {@link DeviceConnectedEvent.verify|verify} messages.\n     * @function encode\n     * @memberof DeviceConnectedEvent\n     * @static\n     * @param {IDeviceConnectedEvent} message DeviceConnectedEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    DeviceConnectedEvent.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.name != null && Object.hasOwnProperty.call(message, \"name\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n        if (message.device != null && Object.hasOwnProperty.call(message, \"device\"))\n            $root.Device.encode(message.device, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified DeviceConnectedEvent message, length delimited. Does not implicitly {@link DeviceConnectedEvent.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof DeviceConnectedEvent\n     * @static\n     * @param {IDeviceConnectedEvent} message DeviceConnectedEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    DeviceConnectedEvent.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a DeviceConnectedEvent message from the specified reader or buffer.\n     * @function decode\n     * @memberof DeviceConnectedEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {DeviceConnectedEvent} DeviceConnectedEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    DeviceConnectedEvent.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.DeviceConnectedEvent();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.name = reader.string();\n                break;\n            case 2:\n                message.device = $root.Device.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a DeviceConnectedEvent message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof DeviceConnectedEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {DeviceConnectedEvent} DeviceConnectedEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    DeviceConnectedEvent.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a DeviceConnectedEvent message.\n     * @function verify\n     * @memberof DeviceConnectedEvent\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    DeviceConnectedEvent.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.name != null && message.hasOwnProperty(\"name\"))\n            if (!$util.isString(message.name))\n                return \"name: string expected\";\n        if (message.device != null && message.hasOwnProperty(\"device\")) {\n            var error = $root.Device.verify(message.device);\n            if (error)\n                return \"device.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a DeviceConnectedEvent message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof DeviceConnectedEvent\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {DeviceConnectedEvent} DeviceConnectedEvent\n     */\n    DeviceConnectedEvent.fromObject = function fromObject(object) {\n        if (object instanceof $root.DeviceConnectedEvent)\n            return object;\n        var message = new $root.DeviceConnectedEvent();\n        if (object.name != null)\n            message.name = String(object.name);\n        if (object.device != null) {\n            if (typeof object.device !== \"object\")\n                throw TypeError(\".DeviceConnectedEvent.device: object expected\");\n            message.device = $root.Device.fromObject(object.device);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a DeviceConnectedEvent message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof DeviceConnectedEvent\n     * @static\n     * @param {DeviceConnectedEvent} message DeviceConnectedEvent\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    DeviceConnectedEvent.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.name = \"\";\n            object.device = null;\n        }\n        if (message.name != null && message.hasOwnProperty(\"name\"))\n            object.name = message.name;\n        if (message.device != null && message.hasOwnProperty(\"device\"))\n            object.device = $root.Device.toObject(message.device, options);\n        return object;\n    };\n\n    /**\n     * Converts this DeviceConnectedEvent to JSON.\n     * @function toJSON\n     * @memberof DeviceConnectedEvent\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    DeviceConnectedEvent.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return DeviceConnectedEvent;\n})();\n\n$root.DeviceDisconnectedEvent = (function() {\n\n    /**\n     * Properties of a DeviceDisconnectedEvent.\n     * @exports IDeviceDisconnectedEvent\n     * @interface IDeviceDisconnectedEvent\n     * @property {string|null} [deviceId] DeviceDisconnectedEvent deviceId\n     */\n\n    /**\n     * Constructs a new DeviceDisconnectedEvent.\n     * @exports DeviceDisconnectedEvent\n     * @classdesc Represents a DeviceDisconnectedEvent.\n     * @implements IDeviceDisconnectedEvent\n     * @constructor\n     * @param {IDeviceDisconnectedEvent=} [properties] Properties to set\n     */\n    function DeviceDisconnectedEvent(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * DeviceDisconnectedEvent deviceId.\n     * @member {string} deviceId\n     * @memberof DeviceDisconnectedEvent\n     * @instance\n     */\n    DeviceDisconnectedEvent.prototype.deviceId = \"\";\n\n    /**\n     * Creates a new DeviceDisconnectedEvent instance using the specified properties.\n     * @function create\n     * @memberof DeviceDisconnectedEvent\n     * @static\n     * @param {IDeviceDisconnectedEvent=} [properties] Properties to set\n     * @returns {DeviceDisconnectedEvent} DeviceDisconnectedEvent instance\n     */\n    DeviceDisconnectedEvent.create = function create(properties) {\n        return new DeviceDisconnectedEvent(properties);\n    };\n\n    /**\n     * Encodes the specified DeviceDisconnectedEvent message. Does not implicitly {@link DeviceDisconnectedEvent.verify|verify} messages.\n     * @function encode\n     * @memberof DeviceDisconnectedEvent\n     * @static\n     * @param {IDeviceDisconnectedEvent} message DeviceDisconnectedEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    DeviceDisconnectedEvent.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.deviceId != null && Object.hasOwnProperty.call(message, \"deviceId\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.deviceId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified DeviceDisconnectedEvent message, length delimited. Does not implicitly {@link DeviceDisconnectedEvent.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof DeviceDisconnectedEvent\n     * @static\n     * @param {IDeviceDisconnectedEvent} message DeviceDisconnectedEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    DeviceDisconnectedEvent.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a DeviceDisconnectedEvent message from the specified reader or buffer.\n     * @function decode\n     * @memberof DeviceDisconnectedEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {DeviceDisconnectedEvent} DeviceDisconnectedEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    DeviceDisconnectedEvent.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.DeviceDisconnectedEvent();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.deviceId = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a DeviceDisconnectedEvent message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof DeviceDisconnectedEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {DeviceDisconnectedEvent} DeviceDisconnectedEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    DeviceDisconnectedEvent.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a DeviceDisconnectedEvent message.\n     * @function verify\n     * @memberof DeviceDisconnectedEvent\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    DeviceDisconnectedEvent.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.deviceId != null && message.hasOwnProperty(\"deviceId\"))\n            if (!$util.isString(message.deviceId))\n                return \"deviceId: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a DeviceDisconnectedEvent message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof DeviceDisconnectedEvent\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {DeviceDisconnectedEvent} DeviceDisconnectedEvent\n     */\n    DeviceDisconnectedEvent.fromObject = function fromObject(object) {\n        if (object instanceof $root.DeviceDisconnectedEvent)\n            return object;\n        var message = new $root.DeviceDisconnectedEvent();\n        if (object.deviceId != null)\n            message.deviceId = String(object.deviceId);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a DeviceDisconnectedEvent message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof DeviceDisconnectedEvent\n     * @static\n     * @param {DeviceDisconnectedEvent} message DeviceDisconnectedEvent\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    DeviceDisconnectedEvent.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.deviceId = \"\";\n        if (message.deviceId != null && message.hasOwnProperty(\"deviceId\"))\n            object.deviceId = message.deviceId;\n        return object;\n    };\n\n    /**\n     * Converts this DeviceDisconnectedEvent to JSON.\n     * @function toJSON\n     * @memberof DeviceDisconnectedEvent\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    DeviceDisconnectedEvent.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return DeviceDisconnectedEvent;\n})();\n\n$root.HostChangedEvent = (function() {\n\n    /**\n     * Properties of a HostChangedEvent.\n     * @exports IHostChangedEvent\n     * @interface IHostChangedEvent\n     * @property {string|null} [hostUserId] HostChangedEvent hostUserId\n     */\n\n    /**\n     * Constructs a new HostChangedEvent.\n     * @exports HostChangedEvent\n     * @classdesc Represents a HostChangedEvent.\n     * @implements IHostChangedEvent\n     * @constructor\n     * @param {IHostChangedEvent=} [properties] Properties to set\n     */\n    function HostChangedEvent(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * HostChangedEvent hostUserId.\n     * @member {string} hostUserId\n     * @memberof HostChangedEvent\n     * @instance\n     */\n    HostChangedEvent.prototype.hostUserId = \"\";\n\n    /**\n     * Creates a new HostChangedEvent instance using the specified properties.\n     * @function create\n     * @memberof HostChangedEvent\n     * @static\n     * @param {IHostChangedEvent=} [properties] Properties to set\n     * @returns {HostChangedEvent} HostChangedEvent instance\n     */\n    HostChangedEvent.create = function create(properties) {\n        return new HostChangedEvent(properties);\n    };\n\n    /**\n     * Encodes the specified HostChangedEvent message. Does not implicitly {@link HostChangedEvent.verify|verify} messages.\n     * @function encode\n     * @memberof HostChangedEvent\n     * @static\n     * @param {IHostChangedEvent} message HostChangedEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    HostChangedEvent.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.hostUserId != null && Object.hasOwnProperty.call(message, \"hostUserId\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.hostUserId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified HostChangedEvent message, length delimited. Does not implicitly {@link HostChangedEvent.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof HostChangedEvent\n     * @static\n     * @param {IHostChangedEvent} message HostChangedEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    HostChangedEvent.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a HostChangedEvent message from the specified reader or buffer.\n     * @function decode\n     * @memberof HostChangedEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {HostChangedEvent} HostChangedEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    HostChangedEvent.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.HostChangedEvent();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.hostUserId = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a HostChangedEvent message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof HostChangedEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {HostChangedEvent} HostChangedEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    HostChangedEvent.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a HostChangedEvent message.\n     * @function verify\n     * @memberof HostChangedEvent\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    HostChangedEvent.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.hostUserId != null && message.hasOwnProperty(\"hostUserId\"))\n            if (!$util.isString(message.hostUserId))\n                return \"hostUserId: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a HostChangedEvent message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof HostChangedEvent\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {HostChangedEvent} HostChangedEvent\n     */\n    HostChangedEvent.fromObject = function fromObject(object) {\n        if (object instanceof $root.HostChangedEvent)\n            return object;\n        var message = new $root.HostChangedEvent();\n        if (object.hostUserId != null)\n            message.hostUserId = String(object.hostUserId);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a HostChangedEvent message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof HostChangedEvent\n     * @static\n     * @param {HostChangedEvent} message HostChangedEvent\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    HostChangedEvent.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.hostUserId = \"\";\n        if (message.hostUserId != null && message.hasOwnProperty(\"hostUserId\"))\n            object.hostUserId = message.hostUserId;\n        return object;\n    };\n\n    /**\n     * Converts this HostChangedEvent to JSON.\n     * @function toJSON\n     * @memberof HostChangedEvent\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    HostChangedEvent.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return HostChangedEvent;\n})();\n\n$root.ContentChangedEvent = (function() {\n\n    /**\n     * Properties of a ContentChangedEvent.\n     * @exports IContentChangedEvent\n     * @interface IContentChangedEvent\n     * @property {IContent|null} [content] ContentChangedEvent content\n     */\n\n    /**\n     * Constructs a new ContentChangedEvent.\n     * @exports ContentChangedEvent\n     * @classdesc Represents a ContentChangedEvent.\n     * @implements IContentChangedEvent\n     * @constructor\n     * @param {IContentChangedEvent=} [properties] Properties to set\n     */\n    function ContentChangedEvent(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * ContentChangedEvent content.\n     * @member {IContent|null|undefined} content\n     * @memberof ContentChangedEvent\n     * @instance\n     */\n    ContentChangedEvent.prototype.content = null;\n\n    /**\n     * Creates a new ContentChangedEvent instance using the specified properties.\n     * @function create\n     * @memberof ContentChangedEvent\n     * @static\n     * @param {IContentChangedEvent=} [properties] Properties to set\n     * @returns {ContentChangedEvent} ContentChangedEvent instance\n     */\n    ContentChangedEvent.create = function create(properties) {\n        return new ContentChangedEvent(properties);\n    };\n\n    /**\n     * Encodes the specified ContentChangedEvent message. Does not implicitly {@link ContentChangedEvent.verify|verify} messages.\n     * @function encode\n     * @memberof ContentChangedEvent\n     * @static\n     * @param {IContentChangedEvent} message ContentChangedEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ContentChangedEvent.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.content != null && Object.hasOwnProperty.call(message, \"content\"))\n            $root.Content.encode(message.content, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified ContentChangedEvent message, length delimited. Does not implicitly {@link ContentChangedEvent.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ContentChangedEvent\n     * @static\n     * @param {IContentChangedEvent} message ContentChangedEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ContentChangedEvent.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a ContentChangedEvent message from the specified reader or buffer.\n     * @function decode\n     * @memberof ContentChangedEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ContentChangedEvent} ContentChangedEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ContentChangedEvent.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ContentChangedEvent();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.content = $root.Content.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a ContentChangedEvent message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ContentChangedEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ContentChangedEvent} ContentChangedEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ContentChangedEvent.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a ContentChangedEvent message.\n     * @function verify\n     * @memberof ContentChangedEvent\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    ContentChangedEvent.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.content != null && message.hasOwnProperty(\"content\")) {\n            var error = $root.Content.verify(message.content);\n            if (error)\n                return \"content.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a ContentChangedEvent message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ContentChangedEvent\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ContentChangedEvent} ContentChangedEvent\n     */\n    ContentChangedEvent.fromObject = function fromObject(object) {\n        if (object instanceof $root.ContentChangedEvent)\n            return object;\n        var message = new $root.ContentChangedEvent();\n        if (object.content != null) {\n            if (typeof object.content !== \"object\")\n                throw TypeError(\".ContentChangedEvent.content: object expected\");\n            message.content = $root.Content.fromObject(object.content);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a ContentChangedEvent message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ContentChangedEvent\n     * @static\n     * @param {ContentChangedEvent} message ContentChangedEvent\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    ContentChangedEvent.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.content = null;\n        if (message.content != null && message.hasOwnProperty(\"content\"))\n            object.content = $root.Content.toObject(message.content, options);\n        return object;\n    };\n\n    /**\n     * Converts this ContentChangedEvent to JSON.\n     * @function toJSON\n     * @memberof ContentChangedEvent\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    ContentChangedEvent.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ContentChangedEvent;\n})();\n\n$root.ActivityStreamIdChangedEvent = (function() {\n\n    /**\n     * Properties of an ActivityStreamIdChangedEvent.\n     * @exports IActivityStreamIdChangedEvent\n     * @interface IActivityStreamIdChangedEvent\n     * @property {string|null} [deviceId] ActivityStreamIdChangedEvent deviceId\n     * @property {string|null} [activityStreamId] ActivityStreamIdChangedEvent activityStreamId\n     */\n\n    /**\n     * Constructs a new ActivityStreamIdChangedEvent.\n     * @exports ActivityStreamIdChangedEvent\n     * @classdesc Represents an ActivityStreamIdChangedEvent.\n     * @implements IActivityStreamIdChangedEvent\n     * @constructor\n     * @param {IActivityStreamIdChangedEvent=} [properties] Properties to set\n     */\n    function ActivityStreamIdChangedEvent(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * ActivityStreamIdChangedEvent deviceId.\n     * @member {string} deviceId\n     * @memberof ActivityStreamIdChangedEvent\n     * @instance\n     */\n    ActivityStreamIdChangedEvent.prototype.deviceId = \"\";\n\n    /**\n     * ActivityStreamIdChangedEvent activityStreamId.\n     * @member {string} activityStreamId\n     * @memberof ActivityStreamIdChangedEvent\n     * @instance\n     */\n    ActivityStreamIdChangedEvent.prototype.activityStreamId = \"\";\n\n    /**\n     * Creates a new ActivityStreamIdChangedEvent instance using the specified properties.\n     * @function create\n     * @memberof ActivityStreamIdChangedEvent\n     * @static\n     * @param {IActivityStreamIdChangedEvent=} [properties] Properties to set\n     * @returns {ActivityStreamIdChangedEvent} ActivityStreamIdChangedEvent instance\n     */\n    ActivityStreamIdChangedEvent.create = function create(properties) {\n        return new ActivityStreamIdChangedEvent(properties);\n    };\n\n    /**\n     * Encodes the specified ActivityStreamIdChangedEvent message. Does not implicitly {@link ActivityStreamIdChangedEvent.verify|verify} messages.\n     * @function encode\n     * @memberof ActivityStreamIdChangedEvent\n     * @static\n     * @param {IActivityStreamIdChangedEvent} message ActivityStreamIdChangedEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ActivityStreamIdChangedEvent.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.deviceId != null && Object.hasOwnProperty.call(message, \"deviceId\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.deviceId);\n        if (message.activityStreamId != null && Object.hasOwnProperty.call(message, \"activityStreamId\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.activityStreamId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified ActivityStreamIdChangedEvent message, length delimited. Does not implicitly {@link ActivityStreamIdChangedEvent.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ActivityStreamIdChangedEvent\n     * @static\n     * @param {IActivityStreamIdChangedEvent} message ActivityStreamIdChangedEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ActivityStreamIdChangedEvent.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an ActivityStreamIdChangedEvent message from the specified reader or buffer.\n     * @function decode\n     * @memberof ActivityStreamIdChangedEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ActivityStreamIdChangedEvent} ActivityStreamIdChangedEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ActivityStreamIdChangedEvent.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ActivityStreamIdChangedEvent();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.deviceId = reader.string();\n                break;\n            case 2:\n                message.activityStreamId = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes an ActivityStreamIdChangedEvent message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ActivityStreamIdChangedEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ActivityStreamIdChangedEvent} ActivityStreamIdChangedEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ActivityStreamIdChangedEvent.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an ActivityStreamIdChangedEvent message.\n     * @function verify\n     * @memberof ActivityStreamIdChangedEvent\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    ActivityStreamIdChangedEvent.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.deviceId != null && message.hasOwnProperty(\"deviceId\"))\n            if (!$util.isString(message.deviceId))\n                return \"deviceId: string expected\";\n        if (message.activityStreamId != null && message.hasOwnProperty(\"activityStreamId\"))\n            if (!$util.isString(message.activityStreamId))\n                return \"activityStreamId: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates an ActivityStreamIdChangedEvent message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ActivityStreamIdChangedEvent\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ActivityStreamIdChangedEvent} ActivityStreamIdChangedEvent\n     */\n    ActivityStreamIdChangedEvent.fromObject = function fromObject(object) {\n        if (object instanceof $root.ActivityStreamIdChangedEvent)\n            return object;\n        var message = new $root.ActivityStreamIdChangedEvent();\n        if (object.deviceId != null)\n            message.deviceId = String(object.deviceId);\n        if (object.activityStreamId != null)\n            message.activityStreamId = String(object.activityStreamId);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from an ActivityStreamIdChangedEvent message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ActivityStreamIdChangedEvent\n     * @static\n     * @param {ActivityStreamIdChangedEvent} message ActivityStreamIdChangedEvent\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    ActivityStreamIdChangedEvent.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.deviceId = \"\";\n            object.activityStreamId = \"\";\n        }\n        if (message.deviceId != null && message.hasOwnProperty(\"deviceId\"))\n            object.deviceId = message.deviceId;\n        if (message.activityStreamId != null && message.hasOwnProperty(\"activityStreamId\"))\n            object.activityStreamId = message.activityStreamId;\n        return object;\n    };\n\n    /**\n     * Converts this ActivityStreamIdChangedEvent to JSON.\n     * @function toJSON\n     * @memberof ActivityStreamIdChangedEvent\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    ActivityStreamIdChangedEvent.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ActivityStreamIdChangedEvent;\n})();\n\n$root.TrophyRewardedToUserEvent = (function() {\n\n    /**\n     * Properties of a TrophyRewardedToUserEvent.\n     * @exports ITrophyRewardedToUserEvent\n     * @interface ITrophyRewardedToUserEvent\n     * @property {string|null} [userId] TrophyRewardedToUserEvent userId\n     * @property {ITrophy|null} [trophy] TrophyRewardedToUserEvent trophy\n     */\n\n    /**\n     * Constructs a new TrophyRewardedToUserEvent.\n     * @exports TrophyRewardedToUserEvent\n     * @classdesc Represents a TrophyRewardedToUserEvent.\n     * @implements ITrophyRewardedToUserEvent\n     * @constructor\n     * @param {ITrophyRewardedToUserEvent=} [properties] Properties to set\n     */\n    function TrophyRewardedToUserEvent(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * TrophyRewardedToUserEvent userId.\n     * @member {string} userId\n     * @memberof TrophyRewardedToUserEvent\n     * @instance\n     */\n    TrophyRewardedToUserEvent.prototype.userId = \"\";\n\n    /**\n     * TrophyRewardedToUserEvent trophy.\n     * @member {ITrophy|null|undefined} trophy\n     * @memberof TrophyRewardedToUserEvent\n     * @instance\n     */\n    TrophyRewardedToUserEvent.prototype.trophy = null;\n\n    /**\n     * Creates a new TrophyRewardedToUserEvent instance using the specified properties.\n     * @function create\n     * @memberof TrophyRewardedToUserEvent\n     * @static\n     * @param {ITrophyRewardedToUserEvent=} [properties] Properties to set\n     * @returns {TrophyRewardedToUserEvent} TrophyRewardedToUserEvent instance\n     */\n    TrophyRewardedToUserEvent.create = function create(properties) {\n        return new TrophyRewardedToUserEvent(properties);\n    };\n\n    /**\n     * Encodes the specified TrophyRewardedToUserEvent message. Does not implicitly {@link TrophyRewardedToUserEvent.verify|verify} messages.\n     * @function encode\n     * @memberof TrophyRewardedToUserEvent\n     * @static\n     * @param {ITrophyRewardedToUserEvent} message TrophyRewardedToUserEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    TrophyRewardedToUserEvent.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.userId != null && Object.hasOwnProperty.call(message, \"userId\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.userId);\n        if (message.trophy != null && Object.hasOwnProperty.call(message, \"trophy\"))\n            $root.Trophy.encode(message.trophy, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified TrophyRewardedToUserEvent message, length delimited. Does not implicitly {@link TrophyRewardedToUserEvent.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof TrophyRewardedToUserEvent\n     * @static\n     * @param {ITrophyRewardedToUserEvent} message TrophyRewardedToUserEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    TrophyRewardedToUserEvent.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a TrophyRewardedToUserEvent message from the specified reader or buffer.\n     * @function decode\n     * @memberof TrophyRewardedToUserEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {TrophyRewardedToUserEvent} TrophyRewardedToUserEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    TrophyRewardedToUserEvent.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.TrophyRewardedToUserEvent();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.userId = reader.string();\n                break;\n            case 2:\n                message.trophy = $root.Trophy.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a TrophyRewardedToUserEvent message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof TrophyRewardedToUserEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {TrophyRewardedToUserEvent} TrophyRewardedToUserEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    TrophyRewardedToUserEvent.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a TrophyRewardedToUserEvent message.\n     * @function verify\n     * @memberof TrophyRewardedToUserEvent\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    TrophyRewardedToUserEvent.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            if (!$util.isString(message.userId))\n                return \"userId: string expected\";\n        if (message.trophy != null && message.hasOwnProperty(\"trophy\")) {\n            var error = $root.Trophy.verify(message.trophy);\n            if (error)\n                return \"trophy.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a TrophyRewardedToUserEvent message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof TrophyRewardedToUserEvent\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {TrophyRewardedToUserEvent} TrophyRewardedToUserEvent\n     */\n    TrophyRewardedToUserEvent.fromObject = function fromObject(object) {\n        if (object instanceof $root.TrophyRewardedToUserEvent)\n            return object;\n        var message = new $root.TrophyRewardedToUserEvent();\n        if (object.userId != null)\n            message.userId = String(object.userId);\n        if (object.trophy != null) {\n            if (typeof object.trophy !== \"object\")\n                throw TypeError(\".TrophyRewardedToUserEvent.trophy: object expected\");\n            message.trophy = $root.Trophy.fromObject(object.trophy);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a TrophyRewardedToUserEvent message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof TrophyRewardedToUserEvent\n     * @static\n     * @param {TrophyRewardedToUserEvent} message TrophyRewardedToUserEvent\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    TrophyRewardedToUserEvent.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.userId = \"\";\n            object.trophy = null;\n        }\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            object.userId = message.userId;\n        if (message.trophy != null && message.hasOwnProperty(\"trophy\"))\n            object.trophy = $root.Trophy.toObject(message.trophy, options);\n        return object;\n    };\n\n    /**\n     * Converts this TrophyRewardedToUserEvent to JSON.\n     * @function toJSON\n     * @memberof TrophyRewardedToUserEvent\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    TrophyRewardedToUserEvent.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return TrophyRewardedToUserEvent;\n})();\n\n$root.TrophyRewardedToAllEvent = (function() {\n\n    /**\n     * Properties of a TrophyRewardedToAllEvent.\n     * @exports ITrophyRewardedToAllEvent\n     * @interface ITrophyRewardedToAllEvent\n     * @property {ITrophy|null} [trophy] TrophyRewardedToAllEvent trophy\n     */\n\n    /**\n     * Constructs a new TrophyRewardedToAllEvent.\n     * @exports TrophyRewardedToAllEvent\n     * @classdesc Represents a TrophyRewardedToAllEvent.\n     * @implements ITrophyRewardedToAllEvent\n     * @constructor\n     * @param {ITrophyRewardedToAllEvent=} [properties] Properties to set\n     */\n    function TrophyRewardedToAllEvent(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * TrophyRewardedToAllEvent trophy.\n     * @member {ITrophy|null|undefined} trophy\n     * @memberof TrophyRewardedToAllEvent\n     * @instance\n     */\n    TrophyRewardedToAllEvent.prototype.trophy = null;\n\n    /**\n     * Creates a new TrophyRewardedToAllEvent instance using the specified properties.\n     * @function create\n     * @memberof TrophyRewardedToAllEvent\n     * @static\n     * @param {ITrophyRewardedToAllEvent=} [properties] Properties to set\n     * @returns {TrophyRewardedToAllEvent} TrophyRewardedToAllEvent instance\n     */\n    TrophyRewardedToAllEvent.create = function create(properties) {\n        return new TrophyRewardedToAllEvent(properties);\n    };\n\n    /**\n     * Encodes the specified TrophyRewardedToAllEvent message. Does not implicitly {@link TrophyRewardedToAllEvent.verify|verify} messages.\n     * @function encode\n     * @memberof TrophyRewardedToAllEvent\n     * @static\n     * @param {ITrophyRewardedToAllEvent} message TrophyRewardedToAllEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    TrophyRewardedToAllEvent.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.trophy != null && Object.hasOwnProperty.call(message, \"trophy\"))\n            $root.Trophy.encode(message.trophy, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified TrophyRewardedToAllEvent message, length delimited. Does not implicitly {@link TrophyRewardedToAllEvent.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof TrophyRewardedToAllEvent\n     * @static\n     * @param {ITrophyRewardedToAllEvent} message TrophyRewardedToAllEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    TrophyRewardedToAllEvent.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a TrophyRewardedToAllEvent message from the specified reader or buffer.\n     * @function decode\n     * @memberof TrophyRewardedToAllEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {TrophyRewardedToAllEvent} TrophyRewardedToAllEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    TrophyRewardedToAllEvent.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.TrophyRewardedToAllEvent();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.trophy = $root.Trophy.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a TrophyRewardedToAllEvent message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof TrophyRewardedToAllEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {TrophyRewardedToAllEvent} TrophyRewardedToAllEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    TrophyRewardedToAllEvent.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a TrophyRewardedToAllEvent message.\n     * @function verify\n     * @memberof TrophyRewardedToAllEvent\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    TrophyRewardedToAllEvent.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.trophy != null && message.hasOwnProperty(\"trophy\")) {\n            var error = $root.Trophy.verify(message.trophy);\n            if (error)\n                return \"trophy.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a TrophyRewardedToAllEvent message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof TrophyRewardedToAllEvent\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {TrophyRewardedToAllEvent} TrophyRewardedToAllEvent\n     */\n    TrophyRewardedToAllEvent.fromObject = function fromObject(object) {\n        if (object instanceof $root.TrophyRewardedToAllEvent)\n            return object;\n        var message = new $root.TrophyRewardedToAllEvent();\n        if (object.trophy != null) {\n            if (typeof object.trophy !== \"object\")\n                throw TypeError(\".TrophyRewardedToAllEvent.trophy: object expected\");\n            message.trophy = $root.Trophy.fromObject(object.trophy);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a TrophyRewardedToAllEvent message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof TrophyRewardedToAllEvent\n     * @static\n     * @param {TrophyRewardedToAllEvent} message TrophyRewardedToAllEvent\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    TrophyRewardedToAllEvent.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.trophy = null;\n        if (message.trophy != null && message.hasOwnProperty(\"trophy\"))\n            object.trophy = $root.Trophy.toObject(message.trophy, options);\n        return object;\n    };\n\n    /**\n     * Converts this TrophyRewardedToAllEvent to JSON.\n     * @function toJSON\n     * @memberof TrophyRewardedToAllEvent\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    TrophyRewardedToAllEvent.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return TrophyRewardedToAllEvent;\n})();\n\n$root.NewChatMessageEvent = (function() {\n\n    /**\n     * Properties of a NewChatMessageEvent.\n     * @exports INewChatMessageEvent\n     * @interface INewChatMessageEvent\n     * @property {IChatMessage|null} [chatMessage] NewChatMessageEvent chatMessage\n     */\n\n    /**\n     * Constructs a new NewChatMessageEvent.\n     * @exports NewChatMessageEvent\n     * @classdesc Represents a NewChatMessageEvent.\n     * @implements INewChatMessageEvent\n     * @constructor\n     * @param {INewChatMessageEvent=} [properties] Properties to set\n     */\n    function NewChatMessageEvent(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * NewChatMessageEvent chatMessage.\n     * @member {IChatMessage|null|undefined} chatMessage\n     * @memberof NewChatMessageEvent\n     * @instance\n     */\n    NewChatMessageEvent.prototype.chatMessage = null;\n\n    /**\n     * Creates a new NewChatMessageEvent instance using the specified properties.\n     * @function create\n     * @memberof NewChatMessageEvent\n     * @static\n     * @param {INewChatMessageEvent=} [properties] Properties to set\n     * @returns {NewChatMessageEvent} NewChatMessageEvent instance\n     */\n    NewChatMessageEvent.create = function create(properties) {\n        return new NewChatMessageEvent(properties);\n    };\n\n    /**\n     * Encodes the specified NewChatMessageEvent message. Does not implicitly {@link NewChatMessageEvent.verify|verify} messages.\n     * @function encode\n     * @memberof NewChatMessageEvent\n     * @static\n     * @param {INewChatMessageEvent} message NewChatMessageEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    NewChatMessageEvent.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.chatMessage != null && Object.hasOwnProperty.call(message, \"chatMessage\"))\n            $root.ChatMessage.encode(message.chatMessage, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified NewChatMessageEvent message, length delimited. Does not implicitly {@link NewChatMessageEvent.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof NewChatMessageEvent\n     * @static\n     * @param {INewChatMessageEvent} message NewChatMessageEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    NewChatMessageEvent.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a NewChatMessageEvent message from the specified reader or buffer.\n     * @function decode\n     * @memberof NewChatMessageEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {NewChatMessageEvent} NewChatMessageEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    NewChatMessageEvent.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NewChatMessageEvent();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.chatMessage = $root.ChatMessage.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a NewChatMessageEvent message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof NewChatMessageEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {NewChatMessageEvent} NewChatMessageEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    NewChatMessageEvent.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a NewChatMessageEvent message.\n     * @function verify\n     * @memberof NewChatMessageEvent\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    NewChatMessageEvent.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.chatMessage != null && message.hasOwnProperty(\"chatMessage\")) {\n            var error = $root.ChatMessage.verify(message.chatMessage);\n            if (error)\n                return \"chatMessage.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a NewChatMessageEvent message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof NewChatMessageEvent\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {NewChatMessageEvent} NewChatMessageEvent\n     */\n    NewChatMessageEvent.fromObject = function fromObject(object) {\n        if (object instanceof $root.NewChatMessageEvent)\n            return object;\n        var message = new $root.NewChatMessageEvent();\n        if (object.chatMessage != null) {\n            if (typeof object.chatMessage !== \"object\")\n                throw TypeError(\".NewChatMessageEvent.chatMessage: object expected\");\n            message.chatMessage = $root.ChatMessage.fromObject(object.chatMessage);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a NewChatMessageEvent message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof NewChatMessageEvent\n     * @static\n     * @param {NewChatMessageEvent} message NewChatMessageEvent\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    NewChatMessageEvent.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.chatMessage = null;\n        if (message.chatMessage != null && message.hasOwnProperty(\"chatMessage\"))\n            object.chatMessage = $root.ChatMessage.toObject(message.chatMessage, options);\n        return object;\n    };\n\n    /**\n     * Converts this NewChatMessageEvent to JSON.\n     * @function toJSON\n     * @memberof NewChatMessageEvent\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    NewChatMessageEvent.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return NewChatMessageEvent;\n})();\n\n$root.ClassState = (function() {\n\n    /**\n     * Properties of a ClassState.\n     * @exports IClassState\n     * @interface IClassState\n     * @property {Object.<string,IUser>|null} [users] ClassState users\n     * @property {Object.<string,IDevice>|null} [devices] ClassState devices\n     * @property {Array.<IChatMessage>|null} [chatMessages] ClassState chatMessages\n     * @property {IContent|null} [content] ClassState content\n     * @property {string|null} [hostUserId] ClassState hostUserId\n     * @property {number|Long|null} [classEndedTime] ClassState classEndedTime\n     */\n\n    /**\n     * Constructs a new ClassState.\n     * @exports ClassState\n     * @classdesc Represents a ClassState.\n     * @implements IClassState\n     * @constructor\n     * @param {IClassState=} [properties] Properties to set\n     */\n    function ClassState(properties) {\n        this.users = {};\n        this.devices = {};\n        this.chatMessages = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * ClassState users.\n     * @member {Object.<string,IUser>} users\n     * @memberof ClassState\n     * @instance\n     */\n    ClassState.prototype.users = $util.emptyObject;\n\n    /**\n     * ClassState devices.\n     * @member {Object.<string,IDevice>} devices\n     * @memberof ClassState\n     * @instance\n     */\n    ClassState.prototype.devices = $util.emptyObject;\n\n    /**\n     * ClassState chatMessages.\n     * @member {Array.<IChatMessage>} chatMessages\n     * @memberof ClassState\n     * @instance\n     */\n    ClassState.prototype.chatMessages = $util.emptyArray;\n\n    /**\n     * ClassState content.\n     * @member {IContent|null|undefined} content\n     * @memberof ClassState\n     * @instance\n     */\n    ClassState.prototype.content = null;\n\n    /**\n     * ClassState hostUserId.\n     * @member {string} hostUserId\n     * @memberof ClassState\n     * @instance\n     */\n    ClassState.prototype.hostUserId = \"\";\n\n    /**\n     * ClassState classEndedTime.\n     * @member {number|Long} classEndedTime\n     * @memberof ClassState\n     * @instance\n     */\n    ClassState.prototype.classEndedTime = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Creates a new ClassState instance using the specified properties.\n     * @function create\n     * @memberof ClassState\n     * @static\n     * @param {IClassState=} [properties] Properties to set\n     * @returns {ClassState} ClassState instance\n     */\n    ClassState.create = function create(properties) {\n        return new ClassState(properties);\n    };\n\n    /**\n     * Encodes the specified ClassState message. Does not implicitly {@link ClassState.verify|verify} messages.\n     * @function encode\n     * @memberof ClassState\n     * @static\n     * @param {IClassState} message ClassState message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ClassState.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.users != null && Object.hasOwnProperty.call(message, \"users\"))\n            for (var keys = Object.keys(message.users), i = 0; i < keys.length; ++i) {\n                writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);\n                $root.User.encode(message.users[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();\n            }\n        if (message.devices != null && Object.hasOwnProperty.call(message, \"devices\"))\n            for (var keys = Object.keys(message.devices), i = 0; i < keys.length; ++i) {\n                writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);\n                $root.Device.encode(message.devices[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();\n            }\n        if (message.chatMessages != null && message.chatMessages.length)\n            for (var i = 0; i < message.chatMessages.length; ++i)\n                $root.ChatMessage.encode(message.chatMessages[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n        if (message.content != null && Object.hasOwnProperty.call(message, \"content\"))\n            $root.Content.encode(message.content, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n        if (message.hostUserId != null && Object.hasOwnProperty.call(message, \"hostUserId\"))\n            writer.uint32(/* id 5, wireType 2 =*/42).string(message.hostUserId);\n        if (message.classEndedTime != null && Object.hasOwnProperty.call(message, \"classEndedTime\"))\n            writer.uint32(/* id 6, wireType 0 =*/48).uint64(message.classEndedTime);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified ClassState message, length delimited. Does not implicitly {@link ClassState.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ClassState\n     * @static\n     * @param {IClassState} message ClassState message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ClassState.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a ClassState message from the specified reader or buffer.\n     * @function decode\n     * @memberof ClassState\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ClassState} ClassState\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ClassState.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ClassState(), key, value;\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (message.users === $util.emptyObject)\n                    message.users = {};\n                var end2 = reader.uint32() + reader.pos;\n                key = \"\";\n                value = null;\n                while (reader.pos < end2) {\n                    var tag2 = reader.uint32();\n                    switch (tag2 >>> 3) {\n                    case 1:\n                        key = reader.string();\n                        break;\n                    case 2:\n                        value = $root.User.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag2 & 7);\n                        break;\n                    }\n                }\n                message.users[key] = value;\n                break;\n            case 2:\n                if (message.devices === $util.emptyObject)\n                    message.devices = {};\n                var end2 = reader.uint32() + reader.pos;\n                key = \"\";\n                value = null;\n                while (reader.pos < end2) {\n                    var tag2 = reader.uint32();\n                    switch (tag2 >>> 3) {\n                    case 1:\n                        key = reader.string();\n                        break;\n                    case 2:\n                        value = $root.Device.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag2 & 7);\n                        break;\n                    }\n                }\n                message.devices[key] = value;\n                break;\n            case 3:\n                if (!(message.chatMessages && message.chatMessages.length))\n                    message.chatMessages = [];\n                message.chatMessages.push($root.ChatMessage.decode(reader, reader.uint32()));\n                break;\n            case 4:\n                message.content = $root.Content.decode(reader, reader.uint32());\n                break;\n            case 5:\n                message.hostUserId = reader.string();\n                break;\n            case 6:\n                message.classEndedTime = reader.uint64();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a ClassState message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ClassState\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ClassState} ClassState\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ClassState.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a ClassState message.\n     * @function verify\n     * @memberof ClassState\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    ClassState.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.users != null && message.hasOwnProperty(\"users\")) {\n            if (!$util.isObject(message.users))\n                return \"users: object expected\";\n            var key = Object.keys(message.users);\n            for (var i = 0; i < key.length; ++i) {\n                var error = $root.User.verify(message.users[key[i]]);\n                if (error)\n                    return \"users.\" + error;\n            }\n        }\n        if (message.devices != null && message.hasOwnProperty(\"devices\")) {\n            if (!$util.isObject(message.devices))\n                return \"devices: object expected\";\n            var key = Object.keys(message.devices);\n            for (var i = 0; i < key.length; ++i) {\n                var error = $root.Device.verify(message.devices[key[i]]);\n                if (error)\n                    return \"devices.\" + error;\n            }\n        }\n        if (message.chatMessages != null && message.hasOwnProperty(\"chatMessages\")) {\n            if (!Array.isArray(message.chatMessages))\n                return \"chatMessages: array expected\";\n            for (var i = 0; i < message.chatMessages.length; ++i) {\n                var error = $root.ChatMessage.verify(message.chatMessages[i]);\n                if (error)\n                    return \"chatMessages.\" + error;\n            }\n        }\n        if (message.content != null && message.hasOwnProperty(\"content\")) {\n            var error = $root.Content.verify(message.content);\n            if (error)\n                return \"content.\" + error;\n        }\n        if (message.hostUserId != null && message.hasOwnProperty(\"hostUserId\"))\n            if (!$util.isString(message.hostUserId))\n                return \"hostUserId: string expected\";\n        if (message.classEndedTime != null && message.hasOwnProperty(\"classEndedTime\"))\n            if (!$util.isInteger(message.classEndedTime) && !(message.classEndedTime && $util.isInteger(message.classEndedTime.low) && $util.isInteger(message.classEndedTime.high)))\n                return \"classEndedTime: integer|Long expected\";\n        return null;\n    };\n\n    /**\n     * Creates a ClassState message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ClassState\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ClassState} ClassState\n     */\n    ClassState.fromObject = function fromObject(object) {\n        if (object instanceof $root.ClassState)\n            return object;\n        var message = new $root.ClassState();\n        if (object.users) {\n            if (typeof object.users !== \"object\")\n                throw TypeError(\".ClassState.users: object expected\");\n            message.users = {};\n            for (var keys = Object.keys(object.users), i = 0; i < keys.length; ++i) {\n                if (typeof object.users[keys[i]] !== \"object\")\n                    throw TypeError(\".ClassState.users: object expected\");\n                message.users[keys[i]] = $root.User.fromObject(object.users[keys[i]]);\n            }\n        }\n        if (object.devices) {\n            if (typeof object.devices !== \"object\")\n                throw TypeError(\".ClassState.devices: object expected\");\n            message.devices = {};\n            for (var keys = Object.keys(object.devices), i = 0; i < keys.length; ++i) {\n                if (typeof object.devices[keys[i]] !== \"object\")\n                    throw TypeError(\".ClassState.devices: object expected\");\n                message.devices[keys[i]] = $root.Device.fromObject(object.devices[keys[i]]);\n            }\n        }\n        if (object.chatMessages) {\n            if (!Array.isArray(object.chatMessages))\n                throw TypeError(\".ClassState.chatMessages: array expected\");\n            message.chatMessages = [];\n            for (var i = 0; i < object.chatMessages.length; ++i) {\n                if (typeof object.chatMessages[i] !== \"object\")\n                    throw TypeError(\".ClassState.chatMessages: object expected\");\n                message.chatMessages[i] = $root.ChatMessage.fromObject(object.chatMessages[i]);\n            }\n        }\n        if (object.content != null) {\n            if (typeof object.content !== \"object\")\n                throw TypeError(\".ClassState.content: object expected\");\n            message.content = $root.Content.fromObject(object.content);\n        }\n        if (object.hostUserId != null)\n            message.hostUserId = String(object.hostUserId);\n        if (object.classEndedTime != null)\n            if ($util.Long)\n                (message.classEndedTime = $util.Long.fromValue(object.classEndedTime)).unsigned = true;\n            else if (typeof object.classEndedTime === \"string\")\n                message.classEndedTime = parseInt(object.classEndedTime, 10);\n            else if (typeof object.classEndedTime === \"number\")\n                message.classEndedTime = object.classEndedTime;\n            else if (typeof object.classEndedTime === \"object\")\n                message.classEndedTime = new $util.LongBits(object.classEndedTime.low >>> 0, object.classEndedTime.high >>> 0).toNumber(true);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a ClassState message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ClassState\n     * @static\n     * @param {ClassState} message ClassState\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    ClassState.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.chatMessages = [];\n        if (options.objects || options.defaults) {\n            object.users = {};\n            object.devices = {};\n        }\n        if (options.defaults) {\n            object.content = null;\n            object.hostUserId = \"\";\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, true);\n                object.classEndedTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.classEndedTime = options.longs === String ? \"0\" : 0;\n        }\n        var keys2;\n        if (message.users && (keys2 = Object.keys(message.users)).length) {\n            object.users = {};\n            for (var j = 0; j < keys2.length; ++j)\n                object.users[keys2[j]] = $root.User.toObject(message.users[keys2[j]], options);\n        }\n        if (message.devices && (keys2 = Object.keys(message.devices)).length) {\n            object.devices = {};\n            for (var j = 0; j < keys2.length; ++j)\n                object.devices[keys2[j]] = $root.Device.toObject(message.devices[keys2[j]], options);\n        }\n        if (message.chatMessages && message.chatMessages.length) {\n            object.chatMessages = [];\n            for (var j = 0; j < message.chatMessages.length; ++j)\n                object.chatMessages[j] = $root.ChatMessage.toObject(message.chatMessages[j], options);\n        }\n        if (message.content != null && message.hasOwnProperty(\"content\"))\n            object.content = $root.Content.toObject(message.content, options);\n        if (message.hostUserId != null && message.hasOwnProperty(\"hostUserId\"))\n            object.hostUserId = message.hostUserId;\n        if (message.classEndedTime != null && message.hasOwnProperty(\"classEndedTime\"))\n            if (typeof message.classEndedTime === \"number\")\n                object.classEndedTime = options.longs === String ? String(message.classEndedTime) : message.classEndedTime;\n            else\n                object.classEndedTime = options.longs === String ? $util.Long.prototype.toString.call(message.classEndedTime) : options.longs === Number ? new $util.LongBits(message.classEndedTime.low >>> 0, message.classEndedTime.high >>> 0).toNumber(true) : message.classEndedTime;\n        return object;\n    };\n\n    /**\n     * Converts this ClassState to JSON.\n     * @function toJSON\n     * @memberof ClassState\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    ClassState.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ClassState;\n})();\n\n$root.User = (function() {\n\n    /**\n     * Properties of a User.\n     * @exports IUser\n     * @interface IUser\n     * @property {string|null} [id] User id\n     * @property {string|null} [name] User name\n     * @property {Array.<ITrophy>|null} [trophies] User trophies\n     * @property {Array.<string>|null} [deviceIds] User deviceIds\n     */\n\n    /**\n     * Constructs a new User.\n     * @exports User\n     * @classdesc Represents a User.\n     * @implements IUser\n     * @constructor\n     * @param {IUser=} [properties] Properties to set\n     */\n    function User(properties) {\n        this.trophies = [];\n        this.deviceIds = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * User id.\n     * @member {string} id\n     * @memberof User\n     * @instance\n     */\n    User.prototype.id = \"\";\n\n    /**\n     * User name.\n     * @member {string} name\n     * @memberof User\n     * @instance\n     */\n    User.prototype.name = \"\";\n\n    /**\n     * User trophies.\n     * @member {Array.<ITrophy>} trophies\n     * @memberof User\n     * @instance\n     */\n    User.prototype.trophies = $util.emptyArray;\n\n    /**\n     * User deviceIds.\n     * @member {Array.<string>} deviceIds\n     * @memberof User\n     * @instance\n     */\n    User.prototype.deviceIds = $util.emptyArray;\n\n    /**\n     * Creates a new User instance using the specified properties.\n     * @function create\n     * @memberof User\n     * @static\n     * @param {IUser=} [properties] Properties to set\n     * @returns {User} User instance\n     */\n    User.create = function create(properties) {\n        return new User(properties);\n    };\n\n    /**\n     * Encodes the specified User message. Does not implicitly {@link User.verify|verify} messages.\n     * @function encode\n     * @memberof User\n     * @static\n     * @param {IUser} message User message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    User.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.id != null && Object.hasOwnProperty.call(message, \"id\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);\n        if (message.name != null && Object.hasOwnProperty.call(message, \"name\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);\n        if (message.trophies != null && message.trophies.length)\n            for (var i = 0; i < message.trophies.length; ++i)\n                $root.Trophy.encode(message.trophies[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n        if (message.deviceIds != null && message.deviceIds.length)\n            for (var i = 0; i < message.deviceIds.length; ++i)\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.deviceIds[i]);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified User message, length delimited. Does not implicitly {@link User.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof User\n     * @static\n     * @param {IUser} message User message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    User.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a User message from the specified reader or buffer.\n     * @function decode\n     * @memberof User\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {User} User\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    User.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.User();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.id = reader.string();\n                break;\n            case 2:\n                message.name = reader.string();\n                break;\n            case 3:\n                if (!(message.trophies && message.trophies.length))\n                    message.trophies = [];\n                message.trophies.push($root.Trophy.decode(reader, reader.uint32()));\n                break;\n            case 4:\n                if (!(message.deviceIds && message.deviceIds.length))\n                    message.deviceIds = [];\n                message.deviceIds.push(reader.string());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a User message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof User\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {User} User\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    User.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a User message.\n     * @function verify\n     * @memberof User\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    User.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            if (!$util.isString(message.id))\n                return \"id: string expected\";\n        if (message.name != null && message.hasOwnProperty(\"name\"))\n            if (!$util.isString(message.name))\n                return \"name: string expected\";\n        if (message.trophies != null && message.hasOwnProperty(\"trophies\")) {\n            if (!Array.isArray(message.trophies))\n                return \"trophies: array expected\";\n            for (var i = 0; i < message.trophies.length; ++i) {\n                var error = $root.Trophy.verify(message.trophies[i]);\n                if (error)\n                    return \"trophies.\" + error;\n            }\n        }\n        if (message.deviceIds != null && message.hasOwnProperty(\"deviceIds\")) {\n            if (!Array.isArray(message.deviceIds))\n                return \"deviceIds: array expected\";\n            for (var i = 0; i < message.deviceIds.length; ++i)\n                if (!$util.isString(message.deviceIds[i]))\n                    return \"deviceIds: string[] expected\";\n        }\n        return null;\n    };\n\n    /**\n     * Creates a User message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof User\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {User} User\n     */\n    User.fromObject = function fromObject(object) {\n        if (object instanceof $root.User)\n            return object;\n        var message = new $root.User();\n        if (object.id != null)\n            message.id = String(object.id);\n        if (object.name != null)\n            message.name = String(object.name);\n        if (object.trophies) {\n            if (!Array.isArray(object.trophies))\n                throw TypeError(\".User.trophies: array expected\");\n            message.trophies = [];\n            for (var i = 0; i < object.trophies.length; ++i) {\n                if (typeof object.trophies[i] !== \"object\")\n                    throw TypeError(\".User.trophies: object expected\");\n                message.trophies[i] = $root.Trophy.fromObject(object.trophies[i]);\n            }\n        }\n        if (object.deviceIds) {\n            if (!Array.isArray(object.deviceIds))\n                throw TypeError(\".User.deviceIds: array expected\");\n            message.deviceIds = [];\n            for (var i = 0; i < object.deviceIds.length; ++i)\n                message.deviceIds[i] = String(object.deviceIds[i]);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a User message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof User\n     * @static\n     * @param {User} message User\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    User.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults) {\n            object.trophies = [];\n            object.deviceIds = [];\n        }\n        if (options.defaults) {\n            object.id = \"\";\n            object.name = \"\";\n        }\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            object.id = message.id;\n        if (message.name != null && message.hasOwnProperty(\"name\"))\n            object.name = message.name;\n        if (message.trophies && message.trophies.length) {\n            object.trophies = [];\n            for (var j = 0; j < message.trophies.length; ++j)\n                object.trophies[j] = $root.Trophy.toObject(message.trophies[j], options);\n        }\n        if (message.deviceIds && message.deviceIds.length) {\n            object.deviceIds = [];\n            for (var j = 0; j < message.deviceIds.length; ++j)\n                object.deviceIds[j] = message.deviceIds[j];\n        }\n        return object;\n    };\n\n    /**\n     * Converts this User to JSON.\n     * @function toJSON\n     * @memberof User\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    User.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return User;\n})();\n\n$root.Trophy = (function() {\n\n    /**\n     * Properties of a Trophy.\n     * @exports ITrophy\n     * @interface ITrophy\n     * @property {number|Long|null} [timestamp] Trophy timestamp\n     * @property {string|null} [type] Trophy type\n     */\n\n    /**\n     * Constructs a new Trophy.\n     * @exports Trophy\n     * @classdesc Represents a Trophy.\n     * @implements ITrophy\n     * @constructor\n     * @param {ITrophy=} [properties] Properties to set\n     */\n    function Trophy(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Trophy timestamp.\n     * @member {number|Long} timestamp\n     * @memberof Trophy\n     * @instance\n     */\n    Trophy.prototype.timestamp = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Trophy type.\n     * @member {string} type\n     * @memberof Trophy\n     * @instance\n     */\n    Trophy.prototype.type = \"\";\n\n    /**\n     * Creates a new Trophy instance using the specified properties.\n     * @function create\n     * @memberof Trophy\n     * @static\n     * @param {ITrophy=} [properties] Properties to set\n     * @returns {Trophy} Trophy instance\n     */\n    Trophy.create = function create(properties) {\n        return new Trophy(properties);\n    };\n\n    /**\n     * Encodes the specified Trophy message. Does not implicitly {@link Trophy.verify|verify} messages.\n     * @function encode\n     * @memberof Trophy\n     * @static\n     * @param {ITrophy} message Trophy message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Trophy.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.timestamp != null && Object.hasOwnProperty.call(message, \"timestamp\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.timestamp);\n        if (message.type != null && Object.hasOwnProperty.call(message, \"type\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.type);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified Trophy message, length delimited. Does not implicitly {@link Trophy.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof Trophy\n     * @static\n     * @param {ITrophy} message Trophy message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Trophy.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a Trophy message from the specified reader or buffer.\n     * @function decode\n     * @memberof Trophy\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {Trophy} Trophy\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Trophy.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Trophy();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.timestamp = reader.uint64();\n                break;\n            case 2:\n                message.type = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a Trophy message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof Trophy\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {Trophy} Trophy\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Trophy.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a Trophy message.\n     * @function verify\n     * @memberof Trophy\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    Trophy.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.timestamp != null && message.hasOwnProperty(\"timestamp\"))\n            if (!$util.isInteger(message.timestamp) && !(message.timestamp && $util.isInteger(message.timestamp.low) && $util.isInteger(message.timestamp.high)))\n                return \"timestamp: integer|Long expected\";\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            if (!$util.isString(message.type))\n                return \"type: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a Trophy message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Trophy\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {Trophy} Trophy\n     */\n    Trophy.fromObject = function fromObject(object) {\n        if (object instanceof $root.Trophy)\n            return object;\n        var message = new $root.Trophy();\n        if (object.timestamp != null)\n            if ($util.Long)\n                (message.timestamp = $util.Long.fromValue(object.timestamp)).unsigned = true;\n            else if (typeof object.timestamp === \"string\")\n                message.timestamp = parseInt(object.timestamp, 10);\n            else if (typeof object.timestamp === \"number\")\n                message.timestamp = object.timestamp;\n            else if (typeof object.timestamp === \"object\")\n                message.timestamp = new $util.LongBits(object.timestamp.low >>> 0, object.timestamp.high >>> 0).toNumber(true);\n        if (object.type != null)\n            message.type = String(object.type);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a Trophy message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Trophy\n     * @static\n     * @param {Trophy} message Trophy\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Trophy.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, true);\n                object.timestamp = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.timestamp = options.longs === String ? \"0\" : 0;\n            object.type = \"\";\n        }\n        if (message.timestamp != null && message.hasOwnProperty(\"timestamp\"))\n            if (typeof message.timestamp === \"number\")\n                object.timestamp = options.longs === String ? String(message.timestamp) : message.timestamp;\n            else\n                object.timestamp = options.longs === String ? $util.Long.prototype.toString.call(message.timestamp) : options.longs === Number ? new $util.LongBits(message.timestamp.low >>> 0, message.timestamp.high >>> 0).toNumber(true) : message.timestamp;\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            object.type = message.type;\n        return object;\n    };\n\n    /**\n     * Converts this Trophy to JSON.\n     * @function toJSON\n     * @memberof Trophy\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Trophy.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Trophy;\n})();\n\n$root.Device = (function() {\n\n    /**\n     * Properties of a Device.\n     * @exports IDevice\n     * @interface IDevice\n     * @property {string|null} [id] Device id\n     * @property {string|null} [userId] Device userId\n     * @property {string|null} [activityStreamId] Device activityStreamId\n     * @property {Array.<string>|null} [webRtcStreamIds] Device webRtcStreamIds\n     */\n\n    /**\n     * Constructs a new Device.\n     * @exports Device\n     * @classdesc Represents a Device.\n     * @implements IDevice\n     * @constructor\n     * @param {IDevice=} [properties] Properties to set\n     */\n    function Device(properties) {\n        this.webRtcStreamIds = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Device id.\n     * @member {string} id\n     * @memberof Device\n     * @instance\n     */\n    Device.prototype.id = \"\";\n\n    /**\n     * Device userId.\n     * @member {string} userId\n     * @memberof Device\n     * @instance\n     */\n    Device.prototype.userId = \"\";\n\n    /**\n     * Device activityStreamId.\n     * @member {string} activityStreamId\n     * @memberof Device\n     * @instance\n     */\n    Device.prototype.activityStreamId = \"\";\n\n    /**\n     * Device webRtcStreamIds.\n     * @member {Array.<string>} webRtcStreamIds\n     * @memberof Device\n     * @instance\n     */\n    Device.prototype.webRtcStreamIds = $util.emptyArray;\n\n    /**\n     * Creates a new Device instance using the specified properties.\n     * @function create\n     * @memberof Device\n     * @static\n     * @param {IDevice=} [properties] Properties to set\n     * @returns {Device} Device instance\n     */\n    Device.create = function create(properties) {\n        return new Device(properties);\n    };\n\n    /**\n     * Encodes the specified Device message. Does not implicitly {@link Device.verify|verify} messages.\n     * @function encode\n     * @memberof Device\n     * @static\n     * @param {IDevice} message Device message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Device.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.id != null && Object.hasOwnProperty.call(message, \"id\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);\n        if (message.userId != null && Object.hasOwnProperty.call(message, \"userId\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.userId);\n        if (message.activityStreamId != null && Object.hasOwnProperty.call(message, \"activityStreamId\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.activityStreamId);\n        if (message.webRtcStreamIds != null && message.webRtcStreamIds.length)\n            for (var i = 0; i < message.webRtcStreamIds.length; ++i)\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.webRtcStreamIds[i]);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified Device message, length delimited. Does not implicitly {@link Device.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof Device\n     * @static\n     * @param {IDevice} message Device message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Device.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a Device message from the specified reader or buffer.\n     * @function decode\n     * @memberof Device\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {Device} Device\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Device.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Device();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.id = reader.string();\n                break;\n            case 2:\n                message.userId = reader.string();\n                break;\n            case 3:\n                message.activityStreamId = reader.string();\n                break;\n            case 4:\n                if (!(message.webRtcStreamIds && message.webRtcStreamIds.length))\n                    message.webRtcStreamIds = [];\n                message.webRtcStreamIds.push(reader.string());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a Device message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof Device\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {Device} Device\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Device.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a Device message.\n     * @function verify\n     * @memberof Device\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    Device.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            if (!$util.isString(message.id))\n                return \"id: string expected\";\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            if (!$util.isString(message.userId))\n                return \"userId: string expected\";\n        if (message.activityStreamId != null && message.hasOwnProperty(\"activityStreamId\"))\n            if (!$util.isString(message.activityStreamId))\n                return \"activityStreamId: string expected\";\n        if (message.webRtcStreamIds != null && message.hasOwnProperty(\"webRtcStreamIds\")) {\n            if (!Array.isArray(message.webRtcStreamIds))\n                return \"webRtcStreamIds: array expected\";\n            for (var i = 0; i < message.webRtcStreamIds.length; ++i)\n                if (!$util.isString(message.webRtcStreamIds[i]))\n                    return \"webRtcStreamIds: string[] expected\";\n        }\n        return null;\n    };\n\n    /**\n     * Creates a Device message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Device\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {Device} Device\n     */\n    Device.fromObject = function fromObject(object) {\n        if (object instanceof $root.Device)\n            return object;\n        var message = new $root.Device();\n        if (object.id != null)\n            message.id = String(object.id);\n        if (object.userId != null)\n            message.userId = String(object.userId);\n        if (object.activityStreamId != null)\n            message.activityStreamId = String(object.activityStreamId);\n        if (object.webRtcStreamIds) {\n            if (!Array.isArray(object.webRtcStreamIds))\n                throw TypeError(\".Device.webRtcStreamIds: array expected\");\n            message.webRtcStreamIds = [];\n            for (var i = 0; i < object.webRtcStreamIds.length; ++i)\n                message.webRtcStreamIds[i] = String(object.webRtcStreamIds[i]);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a Device message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Device\n     * @static\n     * @param {Device} message Device\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Device.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.webRtcStreamIds = [];\n        if (options.defaults) {\n            object.id = \"\";\n            object.userId = \"\";\n            object.activityStreamId = \"\";\n        }\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            object.id = message.id;\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            object.userId = message.userId;\n        if (message.activityStreamId != null && message.hasOwnProperty(\"activityStreamId\"))\n            object.activityStreamId = message.activityStreamId;\n        if (message.webRtcStreamIds && message.webRtcStreamIds.length) {\n            object.webRtcStreamIds = [];\n            for (var j = 0; j < message.webRtcStreamIds.length; ++j)\n                object.webRtcStreamIds[j] = message.webRtcStreamIds[j];\n        }\n        return object;\n    };\n\n    /**\n     * Converts this Device to JSON.\n     * @function toJSON\n     * @memberof Device\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Device.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Device;\n})();\n\n$root.ChatMessage = (function() {\n\n    /**\n     * Properties of a ChatMessage.\n     * @exports IChatMessage\n     * @interface IChatMessage\n     * @property {string|null} [userId] ChatMessage userId\n     * @property {number|Long|null} [timestamp] ChatMessage timestamp\n     * @property {string|null} [text] ChatMessage text\n     */\n\n    /**\n     * Constructs a new ChatMessage.\n     * @exports ChatMessage\n     * @classdesc Represents a ChatMessage.\n     * @implements IChatMessage\n     * @constructor\n     * @param {IChatMessage=} [properties] Properties to set\n     */\n    function ChatMessage(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * ChatMessage userId.\n     * @member {string} userId\n     * @memberof ChatMessage\n     * @instance\n     */\n    ChatMessage.prototype.userId = \"\";\n\n    /**\n     * ChatMessage timestamp.\n     * @member {number|Long} timestamp\n     * @memberof ChatMessage\n     * @instance\n     */\n    ChatMessage.prototype.timestamp = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * ChatMessage text.\n     * @member {string} text\n     * @memberof ChatMessage\n     * @instance\n     */\n    ChatMessage.prototype.text = \"\";\n\n    /**\n     * Creates a new ChatMessage instance using the specified properties.\n     * @function create\n     * @memberof ChatMessage\n     * @static\n     * @param {IChatMessage=} [properties] Properties to set\n     * @returns {ChatMessage} ChatMessage instance\n     */\n    ChatMessage.create = function create(properties) {\n        return new ChatMessage(properties);\n    };\n\n    /**\n     * Encodes the specified ChatMessage message. Does not implicitly {@link ChatMessage.verify|verify} messages.\n     * @function encode\n     * @memberof ChatMessage\n     * @static\n     * @param {IChatMessage} message ChatMessage message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ChatMessage.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.userId != null && Object.hasOwnProperty.call(message, \"userId\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.userId);\n        if (message.timestamp != null && Object.hasOwnProperty.call(message, \"timestamp\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.timestamp);\n        if (message.text != null && Object.hasOwnProperty.call(message, \"text\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.text);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified ChatMessage message, length delimited. Does not implicitly {@link ChatMessage.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ChatMessage\n     * @static\n     * @param {IChatMessage} message ChatMessage message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ChatMessage.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a ChatMessage message from the specified reader or buffer.\n     * @function decode\n     * @memberof ChatMessage\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ChatMessage} ChatMessage\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ChatMessage.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ChatMessage();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.userId = reader.string();\n                break;\n            case 2:\n                message.timestamp = reader.uint64();\n                break;\n            case 3:\n                message.text = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a ChatMessage message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ChatMessage\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ChatMessage} ChatMessage\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ChatMessage.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a ChatMessage message.\n     * @function verify\n     * @memberof ChatMessage\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    ChatMessage.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            if (!$util.isString(message.userId))\n                return \"userId: string expected\";\n        if (message.timestamp != null && message.hasOwnProperty(\"timestamp\"))\n            if (!$util.isInteger(message.timestamp) && !(message.timestamp && $util.isInteger(message.timestamp.low) && $util.isInteger(message.timestamp.high)))\n                return \"timestamp: integer|Long expected\";\n        if (message.text != null && message.hasOwnProperty(\"text\"))\n            if (!$util.isString(message.text))\n                return \"text: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a ChatMessage message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ChatMessage\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ChatMessage} ChatMessage\n     */\n    ChatMessage.fromObject = function fromObject(object) {\n        if (object instanceof $root.ChatMessage)\n            return object;\n        var message = new $root.ChatMessage();\n        if (object.userId != null)\n            message.userId = String(object.userId);\n        if (object.timestamp != null)\n            if ($util.Long)\n                (message.timestamp = $util.Long.fromValue(object.timestamp)).unsigned = true;\n            else if (typeof object.timestamp === \"string\")\n                message.timestamp = parseInt(object.timestamp, 10);\n            else if (typeof object.timestamp === \"number\")\n                message.timestamp = object.timestamp;\n            else if (typeof object.timestamp === \"object\")\n                message.timestamp = new $util.LongBits(object.timestamp.low >>> 0, object.timestamp.high >>> 0).toNumber(true);\n        if (object.text != null)\n            message.text = String(object.text);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a ChatMessage message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ChatMessage\n     * @static\n     * @param {ChatMessage} message ChatMessage\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    ChatMessage.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.userId = \"\";\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, true);\n                object.timestamp = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.timestamp = options.longs === String ? \"0\" : 0;\n            object.text = \"\";\n        }\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            object.userId = message.userId;\n        if (message.timestamp != null && message.hasOwnProperty(\"timestamp\"))\n            if (typeof message.timestamp === \"number\")\n                object.timestamp = options.longs === String ? String(message.timestamp) : message.timestamp;\n            else\n                object.timestamp = options.longs === String ? $util.Long.prototype.toString.call(message.timestamp) : options.longs === Number ? new $util.LongBits(message.timestamp.low >>> 0, message.timestamp.high >>> 0).toNumber(true) : message.timestamp;\n        if (message.text != null && message.hasOwnProperty(\"text\"))\n            object.text = message.text;\n        return object;\n    };\n\n    /**\n     * Converts this ChatMessage to JSON.\n     * @function toJSON\n     * @memberof ChatMessage\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    ChatMessage.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ChatMessage;\n})();\n\n$root.Content = (function() {\n\n    /**\n     * Properties of a Content.\n     * @exports IContent\n     * @interface IContent\n     * @property {ContentType|null} [type] Content type\n     * @property {string|null} [contentLocation] Content contentLocation\n     */\n\n    /**\n     * Constructs a new Content.\n     * @exports Content\n     * @classdesc Represents a Content.\n     * @implements IContent\n     * @constructor\n     * @param {IContent=} [properties] Properties to set\n     */\n    function Content(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Content type.\n     * @member {ContentType} type\n     * @memberof Content\n     * @instance\n     */\n    Content.prototype.type = 0;\n\n    /**\n     * Content contentLocation.\n     * @member {string} contentLocation\n     * @memberof Content\n     * @instance\n     */\n    Content.prototype.contentLocation = \"\";\n\n    /**\n     * Creates a new Content instance using the specified properties.\n     * @function create\n     * @memberof Content\n     * @static\n     * @param {IContent=} [properties] Properties to set\n     * @returns {Content} Content instance\n     */\n    Content.create = function create(properties) {\n        return new Content(properties);\n    };\n\n    /**\n     * Encodes the specified Content message. Does not implicitly {@link Content.verify|verify} messages.\n     * @function encode\n     * @memberof Content\n     * @static\n     * @param {IContent} message Content message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Content.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.type != null && Object.hasOwnProperty.call(message, \"type\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);\n        if (message.contentLocation != null && Object.hasOwnProperty.call(message, \"contentLocation\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.contentLocation);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified Content message, length delimited. Does not implicitly {@link Content.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof Content\n     * @static\n     * @param {IContent} message Content message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Content.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a Content message from the specified reader or buffer.\n     * @function decode\n     * @memberof Content\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {Content} Content\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Content.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Content();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.type = reader.int32();\n                break;\n            case 2:\n                message.contentLocation = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a Content message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof Content\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {Content} Content\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Content.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a Content message.\n     * @function verify\n     * @memberof Content\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    Content.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            switch (message.type) {\n            default:\n                return \"type: enum value expected\";\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n                break;\n            }\n        if (message.contentLocation != null && message.hasOwnProperty(\"contentLocation\"))\n            if (!$util.isString(message.contentLocation))\n                return \"contentLocation: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a Content message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Content\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {Content} Content\n     */\n    Content.fromObject = function fromObject(object) {\n        if (object instanceof $root.Content)\n            return object;\n        var message = new $root.Content();\n        switch (object.type) {\n        case \"Blank\":\n        case 0:\n            message.type = 0;\n            break;\n        case \"Stream\":\n        case 1:\n            message.type = 1;\n            break;\n        case \"Activity\":\n        case 2:\n            message.type = 2;\n            break;\n        case \"Video\":\n        case 3:\n            message.type = 3;\n            break;\n        case \"Audio\":\n        case 4:\n            message.type = 4;\n            break;\n        case \"Image\":\n        case 5:\n            message.type = 5;\n            break;\n        case \"Camera\":\n        case 6:\n            message.type = 6;\n            break;\n        case \"Screen\":\n        case 7:\n            message.type = 7;\n            break;\n        }\n        if (object.contentLocation != null)\n            message.contentLocation = String(object.contentLocation);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a Content message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Content\n     * @static\n     * @param {Content} message Content\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Content.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.type = options.enums === String ? \"Blank\" : 0;\n            object.contentLocation = \"\";\n        }\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            object.type = options.enums === String ? $root.ContentType[message.type] : message.type;\n        if (message.contentLocation != null && message.hasOwnProperty(\"contentLocation\"))\n            object.contentLocation = message.contentLocation;\n        return object;\n    };\n\n    /**\n     * Converts this Content to JSON.\n     * @function toJSON\n     * @memberof Content\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Content.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Content;\n})();\n\n/**\n * ContentType enum.\n * @exports ContentType\n * @enum {number}\n * @property {number} Blank=0 Blank value\n * @property {number} Stream=1 Stream value\n * @property {number} Activity=2 Activity value\n * @property {number} Video=3 Video value\n * @property {number} Audio=4 Audio value\n * @property {number} Image=5 Image value\n * @property {number} Camera=6 Camera value\n * @property {number} Screen=7 Screen value\n */\n$root.ContentType = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[0] = \"Blank\"] = 0;\n    values[valuesById[1] = \"Stream\"] = 1;\n    values[valuesById[2] = \"Activity\"] = 2;\n    values[valuesById[3] = \"Video\"] = 3;\n    values[valuesById[4] = \"Audio\"] = 4;\n    values[valuesById[5] = \"Image\"] = 5;\n    values[valuesById[6] = \"Camera\"] = 6;\n    values[valuesById[7] = \"Screen\"] = 7;\n    return values;\n})();\n\nmodule.exports = $root;\n","/* eslint-disable @typescript-eslint/no-empty-interface */\n\nimport { NewType } from './types';\n\nexport enum FeedbackType {\n  END_CLASS,\n  LEAVE_CLASS,\n}\n\nexport enum QuickFeedbackType {\n  VIDEO,\n  AUDIO,\n  PRESENTATION,\n  OTHER,\n}\n\nexport interface QuickFeedback {\n  type: QuickFeedbackType;\n  stars: number | null;\n}\n\nexport interface PageEventIn {\n  sequenceNumber: number\n  isKeyframe: boolean\n  eventsSinceKeyframe: number\n  eventData: string\n}\n\nexport enum ContentType {\n  Blank = 'Blank',\n\n  // ActivityStreamID\n  Stream = 'Stream', // Consume a DOM (Activity) stream\n  // URLs\n  Activity = 'Activity', //Produce a DOM (Activity) Stream\n  Video = 'Video', // \n  Audio = 'Audio',\n  Image = 'Image',\n  //WebRTC Stream IDs\n  Camera = 'Camera',\n  Screen = 'Screen',\n}\n\nexport type UserID = NewType<string, 'UserID'>;\nexport const newUserId = (value?: string): UserID => (value || '') as UserID;\n\nexport type DeviceID = NewType<string, 'DeviceID'>\nexport const newDeviceId = (value?: string): DeviceID => (value || '') as DeviceID;\n\nexport type ActivityStreamID = NewType<string, 'ActivityStreamID'>\nexport const newActivityStreamId = (value?: string): ActivityStreamID => (value || '') as ActivityStreamID;\n\nexport type WebRTCStreamID = NewType<string, 'WebRTCStreamID'>\nexport const newWebRtcStreamId = (value?: string): WebRTCStreamID => (value || '') as WebRTCStreamID;\n\nexport type Timestamp = NewType<number, 'Timestamp'>\nexport const newTimestamp = (value?: number): Timestamp => (value || Date.now()) as Timestamp;\n\nexport type TrophyType = NewType<string, 'TrophyType'>\nexport const newTrophyType = (value?: string): TrophyType => (value || '') as TrophyType;\n\n\n// Class State\n// Change to Union\nexport interface Content {\n  type: ContentType\n  contentLocation?: string\n}\n\nexport interface Trophy {\n  timestamp: Timestamp\n  type: TrophyType\n}\n\nexport interface UserState {\n  id: UserID\n  name: string\n  trophies: Trophy[]\n  deviceIds: DeviceID[] \n}\n\nexport interface DeviceState {\n  id: DeviceID\n  userId: UserID\n  activityStreamID?: ActivityStreamID\n  webRTCStreamIDs: WebRTCStreamID[]\n}\n\nexport interface ChatMessageState {\n  userId: UserID\n  timestamp: Timestamp\n  text: string\n}\n\nexport interface ClassState {\n  users: Record<UserID, UserState>\n  devices: Record<DeviceID, DeviceState>\n\n  chatMessages: ChatMessageState[]\n  content: Content\n  hostUserId: UserID\n  classEndTime?: Timestamp\n}\n\nexport interface Session {\n  id: string,\n  name: string,\n  streamId: string\n  isTeacher: boolean\n  isHost: boolean\n  joinedAt: number\n}\n\nexport interface ChatMessageNotification {\n  id: string\n  session: Session\n  message: string\n}\n\nexport interface ContentNotification {\n  type: ContentType,\n  contentId: string\n}\n\nexport interface SessionNotification {\n  // webRTC: WebRTC\n}\n\nexport interface TrophyNotification {\n  from: string\n  user: string\n  kind: string\n}\n\nexport interface VideoSynchronize { }\nexport interface WhiteboardStateOut { }\nexport interface WhiteboardEventOut { }\nexport interface ClassNotification {\n  chatMessage: ChatMessageNotification\n  join: Session\n  leave: Session\n  content: ContentNotification\n  trophy: TrophyNotification\n\n  //webRTC deprecated?\n  sfu: string\n  session: SessionNotification\n}\n","export type ValueOf<T> = T[keyof T];\n\nexport type NewType<T, NewTypeName> = T & {\n  /**\n   * This is not available at runtime\n   */\n  __COMPILETIME_TYPE__: NewTypeName\n};\n\nexport const keys = <O>(o: O): (keyof O)[] => {\n  return Object.keys(o) as (keyof O)[];\n};\n\nexport const values = <O>(o: O): (ValueOf<O>)[] => {\n  return Object.values(o) as (ValueOf<O>)[];\n};\n\nexport const entries = <O>(o: O): ([keyof O, ValueOf<O>])[] => {\n  return Object.values(o) as ([keyof O, ValueOf<O>])[];\n};","import { CaseReducer, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { WritableDraft } from 'immer/dist/internal';\nimport { ContentType, ClassState, UserID, Content, ChatMessageState, newUserId, newTimestamp, DeviceID, ActivityStreamID, DeviceState, Trophy, newDeviceId, UserState } from '../../models';\nimport { keys, ValueOf } from '../../types';\n\ntype Reducer<T=undefined> = CaseReducer<ClassState, PayloadAction<T>>;\n\nexport const INITIAL_ROOM_STATE: ClassState = {\n  users: {},\n  devices: {},\n  chatMessages: [],\n  content: {\n    type: ContentType.Blank,\n  },\n  hostUserId: newUserId(),\n  classEndTime: newTimestamp(),\n};\n\nconst setState: Reducer<ClassState> = (state, action) => {\n  return action.payload;\n};\n\nconst endClass: Reducer = (state) => {\n  state.classEndTime = newTimestamp(Date.now());\n};\n\nconst deviceConnect: Reducer<{name: string, device: DeviceState}> = (\n  state,\n  action\n) => {\n  const { name, device } = action.payload;\n  //Device\n  state.devices[device.id] = device;\n  //User\n  const userId = device.userId;\n  if(userId in state.users) {\n    state.users[userId].deviceIds.push(device.id);\n  } else {\n    state.users[userId] = {\n      id: userId,\n      name,\n      deviceIds: [device.id],\n      trophies: [],\n    };\n  }\n\n};\n\nconst deviceDisconnect: Reducer<{deviceId: DeviceID}> = (\n  state,\n  action\n) => {\n  const { deviceId } = action.payload;\n  const device = state.devices[deviceId] as WritableDraft<DeviceState> | undefined;\n  delete state.devices[deviceId];\n  if(!device) { return; }\n  const user = state.users[device.userId] as WritableDraft<UserState> | undefined;\n  if(!user) { return; }\n  user.deviceIds = user.deviceIds.filter((id) => id !== deviceId);\n};\n\nconst setHost: Reducer<UserID> = (state, action) => {\n  state.hostUserId = action.payload;\n};\n\nconst setContent: Reducer<Content> = (state, action) => {\n  state.content = action.payload;\n};\n\nconst addChatMessage: Reducer<ChatMessageState> = (\n  state,\n  action\n) => {\n  const chatMessage = action.payload;\n  state.chatMessages.push(chatMessage);\n};\n\nconst setActivityStreamId: Reducer<{deviceId: DeviceID, activityStreamId: ActivityStreamID}> = (\n  state,\n  action\n) => {\n  const { deviceId, activityStreamId } = action.payload;\n  state.devices[deviceId].activityStreamID = activityStreamId;\n};\n\nconst rewardTrophyToUser: Reducer<{userId: UserID, trophy: Trophy}> = (\n  state,\n  action\n) => {\n  const { userId, trophy } = action.payload;\n  state.users[userId].trophies.push(trophy);\n};\n\nconst rewardTrophyToAll: Reducer<{trophy: Trophy}> = (\n  state,\n  action\n) => {\n  const { trophy } = action.payload;\n  keys(state.users).forEach((id) => {\n    state.users[id].trophies.push(trophy);\n  });\n};\n\nexport const classSlice = createSlice({\n  name: 'class',\n  initialState: INITIAL_ROOM_STATE,\n  reducers: {\n    setState,\n    endClass,\n    deviceConnect,\n    deviceDisconnect, \n    setHost,\n    setContent,\n    addChatMessage,\n    setActivityStreamId,\n    rewardTrophyToUser,\n    rewardTrophyToAll,\n  },\n});\n\nexport const classReducer = classSlice.reducer;\nexport const classActions = classSlice.actions;\nexport type ClassAction = ReturnType<ValueOf<typeof classActions>>","export * from './roomSlice';\nexport * from './network';\n\nimport { combineReducers } from 'redux';\nimport { networkReducer, NetworkAction } from './network';\nimport { classReducer, ClassAction } from './roomSlice';\n\nexport const reducer = combineReducers({\n    network: networkReducer,\n    room: classReducer,\n});\n\nexport type State = ReturnType<typeof reducer> \nexport type Action =  NetworkAction | ClassAction\n","import { ContentType as PBContentType, IChatMessage, IClassState, IContent, IDevice, ITrophy } from '.';\nimport { Content, ContentType, newDeviceId, DeviceState, Trophy, TrophyType, newUserId, newWebRtcStreamId, newActivityStreamId, newTimestamp, ChatMessageState, ClassState } from '../models';\n\n\nexport function validateChatMessage({text,timestamp,userId}: IChatMessage): ChatMessageState | undefined {\n    if(!text) { console.error('IChatMessage is missing text'); return; }\n    if(!timestamp) { console.error('IChatMessage is missing timestamp'); return; }\n    if(!userId) { console.error('IChatMessage is missing userId'); return; }\n\n    return {\n        userId: newUserId(userId),\n        timestamp: newTimestamp(timestamp),\n        text,\n    };\n}\n\nexport function validateContentType(content: PBContentType): ContentType | undefined {\n    switch (content) {\n        case PBContentType.Activity:\n            return ContentType.Activity;\n        case PBContentType.Audio:\n            return ContentType.Audio;\n        case PBContentType.Blank:\n            return ContentType.Blank;\n        case PBContentType.Camera:\n            return ContentType.Camera;\n        case PBContentType.Image:\n            return ContentType.Image;\n        case PBContentType.Screen:\n            return ContentType.Screen;\n        case PBContentType.Stream:\n            return ContentType.Stream;\n        case PBContentType.Video:\n            return ContentType.Video;\n        default:\n            console.error('Unkown ContentType');\n            return undefined;\n    }\n}\n\nexport function validateContent(content: IContent): Content | undefined {\n    if (!content.type) { console.error('IContent is missing type'); return; }\n    if (!content.contentLocation) { console.error('IContent is missing type'); return; }\n\n    const type = validateContentType(content.type);\n    if(!type) { return; }\n    const contentLocation = content.contentLocation;\n    return { type, contentLocation };\n}\n\nexport function validateState(classState: IClassState): ClassState | undefined {\n    throw new Error('Not implemented');\n    // if (!classState.chatMessages) { console.error('IClassState is missing chatMessages'); return; }\n    \n    // const chatMessages: ChatMessage[] = classState.chatMessages.flatMap((m) => {\n    //     const chatMessage = validateChatMessage(m);\n    //     return chatMessage ? chatMessages : [];\n    // });\n\n\n    // return {\n    //      chatMessages,\n    // };\n}\n\nexport function validateDevice({id, activityStreamId, userId, webRtcStreamIds}: IDevice): DeviceState | undefined {\n    if(!id) { console.error('IDevice is missing id'); return; }\n    if(!userId) { console.error('IDevice is missing userId'); return; }\n    return {\n        id: newDeviceId(userId),\n        userId: newUserId(userId),\n        activityStreamID: activityStreamId ? newActivityStreamId(activityStreamId) : undefined,\n        webRTCStreamIDs: webRtcStreamIds?.map((id) => newWebRtcStreamId(id)) || []\n    };\n}\n\nexport function validateTrophy(trophy: ITrophy): Trophy | undefined {\n    if (!trophy.timestamp) { console.error('ITrophy is missing trophy.timestamp'); return; }\n    if (!trophy.type) { console.error('ITrophy is missing trophy.type'); return; }\n    //TODO: Handle uint64\n    const timestamp = trophy.timestamp;\n    const type = trophy.type as TrophyType;\n    return { timestamp, type };\n}\n\n","import { IActivityStreamIdChangedEvent, IClassEndedEvent, IContentChangedEvent, IDeviceConnectedEvent, IDeviceDisconnectedEvent, IHostChangedEvent, INewChatMessageEvent, ISetClassStateEvent, ITrophyRewardedToAllEvent, ITrophyRewardedToUserEvent } from '.';\nimport { classActions } from '../client';\nimport { newActivityStreamId, newDeviceId, newUserId } from '../models';\nimport { validateChatMessage, validateContent, validateDevice, validateState, validateTrophy } from './state';\n\nexport function actvityStreamIdChangedAction(event: IActivityStreamIdChangedEvent): ReturnType<typeof classActions.setActivityStreamId> | undefined {\n    if(!event.deviceId) { console.error('IActivityStreamIdChangedEvent missing deviceId'); return; }\n    if(!event.activityStreamId) { console.error('IActivityStreamIdChangedEvent missing activityStreamId'); return; }\n    \n    return classActions.setActivityStreamId({\n        deviceId: newDeviceId(event.deviceId),\n        activityStreamId: newActivityStreamId(event.activityStreamId),\n    });    \n}\n\nexport function classEndedAction(event: IClassEndedEvent): ReturnType<typeof classActions.endClass> | undefined {\n    //TODO: Utilize event.timestamp\n    return classActions.endClass();\n}\n\nexport function contentChangedAction(event: IContentChangedEvent): ReturnType<typeof classActions.setContent> | undefined {\n    if(!event.content) { console.error('IContentChangedEvent is missing content'); return; }\n    \n    const content = validateContent(event.content);\n    if(!content) { return; }\n\n    return classActions.setContent(content);    \n}\n\nexport function deviceConnectedAction(event: IDeviceConnectedEvent): ReturnType<typeof classActions.deviceConnect> | undefined {\n    if(!event.name) { console.error('IDeviceConnectedEvent is missing name'); return; }\n    if(!event.device) { console.error('IDeviceConnectedEvent is missing device'); return; }\n    \n    const device = validateDevice(event.device);\n    if(!device) { return; }\n\n    return classActions.deviceConnect({\n        name: event.name,\n        device,\n    });\n}\n\nexport function deviceDisconnectedAction({deviceId}: IDeviceDisconnectedEvent): ReturnType<typeof classActions.deviceDisconnect> | undefined {\n    if(!deviceId) { console.error('IDeviceDisconnectedEvent is missing deviceId'); return; }\n\n    return classActions.deviceDisconnect({\n        deviceId: newDeviceId(deviceId),\n    });    \n}\n\nexport function hostChangedAction(event: IHostChangedEvent): ReturnType<typeof classActions.setHost> | undefined {\n    if(!event.hostUserId) { console.error('IHostChangedEvent is missing hostUserId'); return; }\n\n    const hostUserId = newUserId(event.hostUserId);\n\n    return classActions.setHost(hostUserId);\n}\n\nexport function newChatMessageAction(event: INewChatMessageEvent): ReturnType<typeof classActions.addChatMessage> | undefined {\n    if(!event.chatMessage) { console.error('INewChatMessageEvent is missing chatMessage'); return; }\n\n    const chatMessage = validateChatMessage(event.chatMessage);\n    if(!chatMessage) { return; }\n\n    return classActions.addChatMessage(chatMessage);    \n}\n\nexport function setRoomStateAction(event: ISetClassStateEvent): ReturnType<typeof classActions.setState> | undefined {\n    if(!event.state) { console.error('ISetClassStateEvent is missing state'); return; }\n    const state = validateState(event.state);\n    if(!state) { return; }\n    return classActions.setState(state);\n}\n\nexport function trophyRewardedToAllAction(event: ITrophyRewardedToAllEvent): ReturnType<typeof classActions.rewardTrophyToAll> | undefined {\n    if(!event.trophy) { console.error('ITrophyRewardedToAllEvent is missing trophy'); return; }\n\n    const trophy = validateTrophy(event.trophy);\n    if(!trophy) { return; }\n\n    return classActions.rewardTrophyToAll({ trophy });\n}\n\nexport function trophyRewardedToUserAction(event: ITrophyRewardedToUserEvent): ReturnType<typeof classActions.rewardTrophyToUser> | undefined {\n    if(!event.userId) { console.error('ITrophyRewardedToAllEvent is missing userId'); return; }\n    if(!event.trophy) { console.error('ITrophyRewardedToAllEvent is missing trophy'); return; }\n    \n    const trophy = validateTrophy(event.trophy);\n    if(!trophy) { return; }\n\n    return classActions.rewardTrophyToUser({\n        userId: newUserId(event.userId),\n        trophy,\n    });\n}","import { combineReducers, createAction, createReducer, Dispatch } from '@reduxjs/toolkit';\nimport { DefaultRootState } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { Action, State } from '.';\nimport { NewType, ValueOf } from '../types';\nimport { ClassRequest, ClassEvent, IClassRequest, IClassResponse, IActivityStreamIdChangedEvent, ITrophyRewardedToUserEvent, ITrophyRewardedToAllEvent, ISetClassStateEvent, INewChatMessageEvent, IHostChangedEvent, IDeviceDisconnectedEvent, IDeviceConnectedEvent, IContentChangedEvent, IClassEndedEvent } from '../protobuf';\nimport { actvityStreamIdChangedAction, classEndedAction, contentChangedAction, deviceConnectedAction, deviceDisconnectedAction, hostChangedAction, newChatMessageAction, setRoomStateAction, trophyRewardedToAllAction, trophyRewardedToUserAction } from '../protobuf/actions';\nimport { EventEmitter } from 'eventemitter3';\n\ntype RequestID = NewType<string, 'RequestID'>\ninterface NetworkPromise {\n    resolve:() => unknown,\n    reject: (reason?: string) => unknown\n}\nexport class Network {\n    private emitter = new EventEmitter();\n    // Maintains a map of promises to be resolved/rejected on receipt of a future network message\n    private pendingRequests = new Map<RequestID, NetworkPromise>()\n    //Stores the return value of setTimeout for next keepalive messages\n    private keepAliveTimeout?: number\n\n    constructor (\n        /* eslint-disable no-unused-vars */\n        public readonly dispatch: Dispatch<Action>,\n        public readonly selector: (s: DefaultRootState) => State,\n        private ws?: Promise<WebSocket>,\n        /* eslint-enable no-unused-vars */\n    ) {}\n\n    public async initWs (url: string): Promise<WebSocket> {\n        if(this.ws) { return this.ws; }\n        this.ws = new Promise<WebSocket>((resolve, reject) => {\n            this.dispatch(setConnectionStatus(ConnectionStatus.Connecting));\n\n            const ws = new WebSocket(url, [ 'live' ]);\n            ws.binaryType = 'arraybuffer';\n            ws.addEventListener('open', (e) => {\n                resolve(ws);\n                this.dispatch(setConnectionError(false));\n                this.dispatch(setConnectionStatus(ConnectionStatus.Connected));\n                this.resetKeepAliveTimeout(ws);\n            });\n            ws.addEventListener('close', (e) => {\n                this.ws = undefined;\n                reject(e);\n                this.dispatch(setConnectionStatus(ConnectionStatus.Disconnected));\n            });\n            ws.addEventListener('error', (e) => {\n                reject(e);\n                this.dispatch(setConnectionError(true));\n            });\n            ws.addEventListener('message', ({ data }) => this.onNetworkMessage(ws, data));\n        });\n        return this.ws;\n    }\n\n    public async close(reason?: string): Promise<void> {\n        (await this.ws)?.close(200, reason);\n    }\n\n    private async send(command: IClassRequest): Promise<void> {\n        if (!this.ws) {\n            throw Error('websocket has not been initialised');\n        }\n        const id = nanoid() as RequestID;\n        const bytes = ClassRequest.encode({id, ...command}).finish();\n        const ws = await this.ws;\n        ws.send(bytes);\n        this.resetKeepAliveTimeout(ws);\n        return new Promise<void>((resolve, reject) => this.pendingRequests.set(id, {resolve, reject}));\n    }\n\n    private onNetworkMessage(ws: WebSocket, data: unknown) {\n        if (!(data instanceof ArrayBuffer)) {\n            ws.close(4401, 'Binary only protocol');\n            return;\n        }\n        try {\n            const event = ClassEvent.decode(new Uint8Array(data));\n            if(event.acknowledge) { this.acknowledge(event.acknowledge); }\n            if(event.actvityStreamIdChanged) {\n                this.dispatchEvent('actvityStreamIdChanged', actvityStreamIdChangedAction(event.actvityStreamIdChanged));\n            }\n            if(event.classEnded) {\n                this.dispatchEvent('classEnded', classEndedAction(event.classEnded));\n            }\n            if(event.contentChanged) {\n                this.dispatchEvent('contentChanged', contentChangedAction(event.contentChanged));\n            }\n            if(event.deviceConnected) {\n                this.dispatchEvent('deviceConnected', deviceConnectedAction(event.deviceConnected));\n            }\n            if(event.deviceDisconnected) {\n                this.dispatchEvent('deviceDisconnected', deviceDisconnectedAction(event.deviceDisconnected));\n            }\n            if(event.hostChanged) {\n                this.dispatchEvent('hostChanged', hostChangedAction(event.hostChanged));\n            }\n            if(event.newChatMessage) {\n                this.dispatchEvent('newChatMessage', newChatMessageAction(event.newChatMessage));\n            }\n            if(event.setRoomState) {\n                this.dispatchEvent('setRoomState', setRoomStateAction(event.setRoomState));\n            }\n            if(event.trophyRewardedToAll) {\n                this.dispatchEvent('trophyRewardedToAll', trophyRewardedToAllAction(event.trophyRewardedToAll));\n            }\n            if(event.trophyRewardedToUser) {\n                this.dispatchEvent('trophyRewardedToUser', trophyRewardedToUserAction(event.trophyRewardedToUser));\n            }\n        } catch (e) {\n            ws.close(4400, 'Parse error');\n        }\n    }\n\n    private dispatchEvent(key: string, action?: Action) {\n        if(!action) { return; }\n        this.emitter.emit('actvityStreamIdChanged', action);\n        this.dispatch(action);\n    }\n\n    private acknowledge(event: IClassResponse) {\n        if(!event.id) { return; }\n\n        const id = event.id as RequestID;\n        const pendingPromise = this.pendingRequests.get(id);\n        if(!pendingPromise) { console.error(`Recieved aknowledge(${id}) for unknown request`); return; }\n        \n        this.pendingRequests.delete(id);\n        if(event.error) {\n            pendingPromise.reject(event.error);\n        } else {\n            pendingPromise.resolve();\n        }\n    }\n\n    private actvityStreamIdChanged(event: IActivityStreamIdChangedEvent) {\n        const action = actvityStreamIdChangedAction(event);\n        if(!action) { return; }\n        this.emitter.emit('actvityStreamIdChanged', action);\n        this.dispatch(action);\n    }\n    private classEnded(event: IClassEndedEvent) {\n        const action = classEndedAction(event);\n        if(!action) { return; }\n        this.dispatch(action);\n    }\n    private contentChanged(event: IContentChangedEvent) {\n        const action = contentChangedAction(event);\n        if(!action) { return; }\n        this.dispatch(action);\n    }\n    private deviceConnected(event: IDeviceConnectedEvent) {\n        const action = deviceConnectedAction(event);\n        if(!action) { return; }\n        this.dispatch(action);\n    }\n    private deviceDisconnected(event: IDeviceDisconnectedEvent) {\n        const action = deviceDisconnectedAction(event);\n        if(!action) { return; }\n        this.dispatch(action);\n    }\n    private hostChanged(event: IHostChangedEvent) {\n        const action = hostChangedAction(event);\n        if(!action) { return; }\n        this.dispatch(action);\n    }\n    private newChatMessage(event: INewChatMessageEvent) {\n        const action = newChatMessageAction(event);\n        if(!action) { return; }\n        this.dispatch(action);\n    }\n    private setRoomState(event: ISetClassStateEvent) {\n        // TODO\n        throw new Error('Method not implemented.');\n    }\n    private trophyRewardedToAll(event: ITrophyRewardedToAllEvent) {\n        const action = trophyRewardedToAllAction(event);\n        if(!action) { return; }\n        this.dispatch(action);\n    }\n    private trophyRewardedToUser(event: ITrophyRewardedToUserEvent) {\n        const action = trophyRewardedToUserAction(event);\n        if(!action) { return; }\n        this.dispatch(action);\n    }\n\n    private resetKeepAliveTimeout(ws: WebSocket, milliseconds = 1000)  {\n        if(this.keepAliveTimeout) { clearTimeout(this.keepAliveTimeout); }\n        this.keepAliveTimeout = setTimeout(() => this.sendHeartbeat(ws, milliseconds), milliseconds);\n    }\n\n    private sendHeartbeat(ws: WebSocket, milliseconds?: number) {\n        if(ws.readyState !== WebSocket.OPEN) { return; }\n        const message = new Uint8Array(0); //Heartbeat.encode({}).finish()\n        ws.send(message);\n        this.resetKeepAliveTimeout(ws, milliseconds);\n    }\n}\n\n/* eslint-disable no-unused-vars */\nexport enum ConnectionStatus {\n    Connecting,\n    Connected,\n    Disconnected,\n}\n/* eslint-enable no-unused-vars */\n\nexport const setConnectionError = createAction<boolean>('setConnectionError');\nexport const connectionError = createReducer<boolean>(\n    false, (builder) => builder.addCase(setConnectionError, (_, {payload}) => payload)\n);\n\nexport const setConnectionStatus = createAction<ConnectionStatus>('setConnectionState');\nexport const connectionStatus = createReducer<ConnectionStatus>(\n    ConnectionStatus.Disconnected,\n    (builder) => builder.addCase(setConnectionStatus, (_, {payload}) => payload)\n);\n\nexport const networkReducer = combineReducers({\n    connectionStatus,\n    connectionError,\n});\n\nconst networkActions = {\n    setConnectionError,\n    setConnectionState: setConnectionStatus\n};\n\nexport type NetworkAction = ReturnType<ValueOf<typeof networkActions>>","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","import * as pb from '../../protobuf';\nimport { ID } from '../../';\n\n/**\n * Fetches the devices for a given user\n */\nexport function getDevices(\n  userId: ID,\n  participants: { [k: string]: pb.IParticipant }\n): { [k: string]: pb.IDevice } {\n  const user = participants[userId];\n  if (!user) {\n    throw new Error(\n      `Unable to find user with ID: ${userId} in the class participant list`\n    );\n  }\n  if (!user.devices) {\n    user.devices = {};\n  }\n\n  return user.devices;\n}\n\n/**\n * Attempts to find the device with the given DeviceID for that user\n */\nexport function getDevice(\n  userId: ID,\n  deviceId: string | null | undefined,\n  participants: { [k: string]: pb.IParticipant }\n): pb.IDevice {\n  if (!deviceId) throw new Error('No device ID was provided');\n\n  const devices = getDevices(userId, participants);\n\n  const device = devices[deviceId];\n  if (!device) {\n    throw new Error(\n      `Unable to find Device ID: '${deviceId}' in registered devices for user ${userId}`\n    );\n  }\n  return device;\n}\n","import * as pb from '../../protobuf';\n\ntype ParticipantMap = { [k: string]: pb.IParticipant };\n\nexport function generateStateDiff(\n  old: pb.IState,\n  latest: pb.IState\n): pb.IStateDiff[] {\n  const differences = parseParticipants(\n    old.participants || {},\n    latest.participants || {},\n  );\n\n  if ((old.chatMessages || []).length < (latest.chatMessages || []).length) {\n    differences.push({\n      appendChatMessage: {\n        messages: (latest.chatMessages || []).slice(\n          Math.max((old.chatMessages || []).length, 0)\n        ),\n      },\n    });\n  }\n  if (old.host !== latest.host) {\n    differences.push({ changeHost: { hostId: latest.host } });\n  }\n  if (old.content !== latest.content) {\n    differences.push({ changeContent: { content: latest.content } });\n  }\n  if (latest.endTimestamp || 0 > 0) {\n    differences.push({ classEnded: {} });\n  }\n  return differences;\n}\n\nfunction parseParticipants(\n  old: ParticipantMap,\n  latest: ParticipantMap\n): pb.IStateDiff[] {\n  const differences = [];\n  const oldKeys = new Set(Object.keys(old));\n  const newKeys = Object.keys(latest);\n  const addParticipants: ParticipantMap = {};\n\n  for (const userId of newKeys) {\n    if (!oldKeys.has(userId)) {\n      addParticipants[userId] = latest[userId];\n      continue;\n    }\n    if (old[userId] !== latest[userId]) {\n      addParticipants[userId] = latest[userId];\n    }\n    oldKeys.delete(userId);\n  }\n\n  if (Object.keys(addParticipants).length > 0) {\n    differences.push({ addParticipants: { participants: addParticipants } });\n  }\n  if (oldKeys.size > 0) {\n    differences.push({ removeParticipants: { participants: [...oldKeys] } });\n  }\n\n  return differences;\n}\n","import { CaseReducer, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport * as pb from '../../protobuf';\nimport { ContextPayload } from '../../';\nimport { getDevice, getDevices } from './util';\n\ntype Reducer<T> = CaseReducer<pb.IState, PayloadAction<ContextPayload<T>>>;\n\nconst initialState: pb.IState = {\n  roomId: null,\n  participants: {},\n  host: null,\n  chatMessages: [],\n  content: pb.ContentType.Blank,\n  endTimestamp: null,\n};\n\nconst userJoinReducer: Reducer<pb.IUserJoin> = (state, action) => {\n  const {\n    context: { userId, name },\n  } = action.payload;\n  let { participants } = state;\n\n  if (!participants) {\n    participants = {};\n  }\n\n  const participant: pb.IParticipant = {\n    name,\n    devices: {},\n    trophies: [],\n  };\n\n  participants[userId] = participant;\n  return state;\n};\n\nconst userLeaveReducer: Reducer<pb.IUserLeave> = (state, action) => {\n  const {\n    context: { userId },\n  } = action.payload;\n\n  let { participants } = state;\n\n  if (!participants) {\n    participants = {};\n  }\n\n  delete participants[userId];\n\n  return state;\n};\n\nconst sendChatMessageReducer: Reducer<pb.ISendChatMessage> = (\n  state,\n  action\n) => {\n  const {\n    context: { userId },\n    payload: { message },\n  } = action.payload;\n  if (!message || message.length === 0) return state;\n\n  const msg: pb.IChatMessage = {\n    fromUser: userId,\n    message,\n    timestamp: Date.now(),\n  };\n  if (!state.chatMessages) {\n    state.chatMessages = [];\n  }\n  state.chatMessages.push(msg);\n\n  return state;\n};\n\n// @TODO - Probably want to make it so only teacher/internal server can set host?\nconst setHostReducer: Reducer<pb.ISetHost> = (state, action) => {\n  const {\n    payload: { id },\n  } = action.payload;\n\n  state.host = id;\n\n  return state;\n};\n\nconst addTrophyReducer: CaseReducer<\n  pb.IState,\n  PayloadAction<ContextPayload<pb.IAddTrophy>>\n> = (state, action) => {\n  const participants = state.participants || {};\n  const trophy = action.payload.payload;\n\n  let idsToProcess: string[];\n\n  if (trophy.userId) {\n    idsToProcess = [trophy.userId];\n  } else {\n    idsToProcess = Object.keys(participants);\n  }\n\n  idsToProcess.forEach((id) => {\n    const user = participants[id];\n    if (!user) {\n      throw new Error(\n        `Unable to find user with ID: ${id} in the class participant list`\n      );\n    }\n    const trophies = user.trophies || [];\n    if (trophies.length === 0) {\n      user.trophies = trophies;\n    }\n    trophies.push(trophy);\n  });\n\n  return state;\n};\n\nconst setDeviceReducer: Reducer<pb.ISetDevice> = (state, action) => {\n  const {\n    context: { userId },\n    payload: { device, deviceId },\n  } = action.payload;\n  if (!device) throw new Error('No device was provided');\n  if (!deviceId) throw new Error('No device id was provided');\n  const { participants } = state;\n  const devices = getDevices(userId, participants || {});\n  devices[deviceId] = device;\n\n  return state;\n};\n\nconst removeDeviceReducer: Reducer<pb.IRemoveDevice> = (state, action) => {\n  const {\n    context: { userId },\n    payload: { id },\n  } = action.payload;\n  if (!id) throw new Error('No device id was provided');\n\n  const { participants } = state;\n  const devices = getDevices(userId, participants || {});\n  delete devices[id];\n\n  return state;\n};\n\nconst setWebRtcStreamReducer: Reducer<pb.ISetWebRTCStream> = (\n  state,\n  action\n) => {\n  const {\n    context: { userId },\n    payload: { deviceId, streams },\n  } = action.payload;\n\n  const { participants } = state;\n  const device = getDevice(userId, deviceId, participants || {});\n  device.webRTCStreams = streams;\n\n  return state;\n};\n\nconst setActivityReducer: Reducer<pb.ISetActivity> = (state, action) => {\n  const {\n    context: { userId },\n    payload: { deviceId, activity },\n  } = action.payload;\n  const { participants } = state;\n\n  const device = getDevice(userId, deviceId, participants || {});\n  device.activity = activity;\n\n  return state;\n};\n\nconst setContentReducer: Reducer<pb.ISetContent> = (state, action) => {\n  const {\n    payload: { content },\n  } = action.payload;\n  state.content = content;\n\n  return state;\n};\n\nexport const roomSlice = createSlice({\n  name: 'room',\n  initialState,\n  reducers: {\n    userJoin: userJoinReducer,\n    userLeave: userLeaveReducer,\n    sendChatMessage: sendChatMessageReducer,\n    setHost: setHostReducer,\n    addTrophy: addTrophyReducer,\n    setDevice: setDeviceReducer,\n    removeDevice: removeDeviceReducer,\n    setWebRtcStream: setWebRtcStreamReducer,\n    setActivity: setActivityReducer,\n    setContent: setContentReducer,\n  },\n});\n\nexport const {\n  userJoin,\n  userLeave,\n  sendChatMessage,\n  setHost,\n  addTrophy,\n  setDevice,\n  removeDevice,\n  setWebRtcStream,\n  setActivity,\n  setContent,\n} = roomSlice.actions;\n\nexport const Actions = roomSlice.actions;\nexport const roomReducer = roomSlice.reducer;\nexport const INITIAL_ROOM_STATE = initialState;\nexport { generateStateDiff } from './diff';\n","import React from 'react';\nimport { Network } from '../client/network';\n\nexport const NetworkContext = React.createContext<Network>(null as any);\nNetworkContext.displayName = 'KidsloopLiveNetwork';\n\nexport default NetworkContext;\n","import React, { FC, useMemo, ReactNode } from 'react';\nimport { DefaultRootState, useDispatch } from 'react-redux';\nimport { Network } from '../client/network';\nimport { State } from '../client';\nimport NetworkContext from './context';\n\n\nexport interface NetworkProviderProps {\n    children?: ReactNode\n    selector: (state: DefaultRootState) => State\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const NetworkProvider: FC<NetworkProviderProps> = ({children, selector}) => {\n    const dispatch = useDispatch();\n    const value = useMemo(() => new Network(dispatch, selector), []);\n    return (\n        <NetworkContext.Provider value={value}>\n            {children}\n        </NetworkContext.Provider>\n    );\n};\n","import { useContext, useState } from 'react';\nimport NetworkContext from '../../context';\n\nexport interface SendChatMessageHook {\n    sendChatMessage: (message: string) => Promise<void>\n    result: boolean,\n    loading: boolean,\n    error: unknown,\n};\n\nexport function useSendChatMessage(): SendChatMessageHook {\n    const network = useContext(NetworkContext);\n    const [result, setResult] = useState(false);\n    const [error, setError] = useState<unknown>();\n    const [loading, setLoading] = useState(false);\n\n    const sendChatMessage = async (message: string) => {\n        try {\n            setLoading(true);\n            // await network.send();\n            setResult(true);\n        } catch(e) {\n            setError(e);\n        } finally {\n            setLoading(false);\n        }\n    };\n    return { sendChatMessage, result, loading, error };\n};\n","import { useContext, useState } from 'react';\nimport NetworkContext from '../../context';\n\nexport interface JoinClassHook {\n    joinClass: (url: string) => Promise<void>\n    result: boolean,\n    loading: boolean,\n    error: unknown,\n};\n\nexport function useJoinClass(): JoinClassHook {\n    const network = useContext(NetworkContext);\n    const [result, setResult] = useState(false);\n    const [error, setError] = useState<unknown>();\n    const [loading, setLoading] = useState(false);\n\n    const joinClass = async (url:string) => {\n        try {\n            setLoading(true);\n            await network.initWs(url);\n            setResult(true);\n        } catch(e) {\n            setError(e);\n        } finally {\n            setLoading(false);\n        }\n    };\n    return { joinClass, result, loading, error };\n};\n","\nimport { useContext, useState } from 'react';\nimport NetworkContext from '../../context';\n\nexport interface LeaveClassHook {\n    leaveClass: () => Promise<void>\n    result: boolean,\n    loading: boolean,\n    error: unknown,\n};\n\nexport function useLeaveClass(): LeaveClassHook {\n    const network = useContext(NetworkContext);\n    const [result, setResult] = useState(false);\n    const [error, setError] = useState<unknown>();\n    const [loading, setLoading] = useState(false);\n\n    const leaveClass = async (reason?: string) => {\n        try {\n            setLoading(true);\n            await network.close(reason);\n            setResult(true);\n        } catch(e) {\n            setError(e);\n        } finally {\n            setLoading(false);\n        }\n    };\n    return { leaveClass, result, loading, error };\n};\n","import { useContext, useState } from 'react';\nimport { Content } from '../../../models';\nimport NetworkContext from '../../context';\n\nexport interface SetContentHook {\n    setContent: (content: Content) => Promise<void>\n    result: boolean,\n    loading: boolean,\n    error: unknown,\n};\n\nexport function useSetContent(): SetContentHook {\n    const network = useContext(NetworkContext);\n    const [result, setResult] = useState(false);\n    const [error, setError] = useState<unknown>();\n    const [loading, setLoading] = useState(false);\n\n    const setContent = async (content: Content) => {\n        try {\n            setLoading(true);\n            // await network.send({\n            //   setContent: {\n            //     content\n            //   }\n            // });\n            setResult(true);\n        } catch(e) {\n            setError(e);\n        } finally {\n            setLoading(false);\n        }\n    };\n    return { setContent, result, loading, error };\n};\n","\nimport { useContext } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ConnectionStatus } from '../../../client/network';\nimport NetworkContext from '../../context';\n\n\nexport interface ConnectionState {\n    connectionStatus: ConnectionStatus,\n    connectionError: boolean,\n}\n\nexport function useConnectionState(autoConnectUrl?: string): ConnectionState {\n    const network = useContext(NetworkContext);\n    \n    const connectionStatus = useSelector((s) => network.selector(s).network.connectionStatus);\n    const connectionError = useSelector((s) => network.selector(s).network.connectionError);\n    \n    if(connectionStatus === ConnectionStatus.Disconnected && autoConnectUrl) {\n        network.initWs(autoConnectUrl);\n    }\n\n    return {\n        connectionStatus,\n        connectionError,\n    };\n};\n","import React, { useContext } from 'react';\nimport NetworkContext from '../context';\n\nexport function useNetwork() {\n  return useContext(NetworkContext);\n}","import { useSelector } from 'react-redux';\nimport { useNetwork } from '../useNetwork';\n\nexport function useMessages(): string[] {\n  const network = useNetwork();\n  // casting as any is temporary to make TS happy in WIP branch\n  return useSelector((state) => (network.selector(state).network as any).messages || []);\n}"],"names":["n","t","arguments","length","r","Array","e","process","env","NODE_ENV","i","Y","o","apply","Error","map","join","Q","Object","getPrototypeOf","hasOwnProperty","call","constructor","Function","toString","Z","isArray","L","s","v","keys","nn","forEach","u","has","prototype","a","get","f","set","delete","add","c","X","Map","q","Set","p","l","slice","tn","writable","configurable","enumerable","value","create","d","y","clear","h","freeze","isFrozen","b","rn","m","_","U","j","O","g","S","w","P","M","x","H","A","I","k","R","D","concat","F","z","getOwnPropertyDescriptor","E","N","T","C","en","on","Proxy","revocable","revoke","proxy","J","push","K","from","this","JSON","stringify","defineProperty","Math","min","G","W","Symbol","B","Reflect","for","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","getOwnPropertyDescriptors","deleteProperty","setPrototypeOf","isNaN","parseInt","un","produce","Promise","then","produceWithPatches","useProxies","setUseProxies","autoFreeze","setAutoFreeze","createDraft","finishDraft","applyPatches","path","op","$","an","fn","bind","formatProdErrorMessage","code","randomString","random","substring","split","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","isPlainObject","obj","proto","miniKindOf","val","type","isDate","isError","constructorName","ctorName","toLowerCase","replace","name","message","stackTraceLimit","Date","toDateString","getDate","setDate","kindOf","typeOfVal","warning","console","error","getUnexpectedStateShapeWarningMessage","inputState","reducers","action","unexpectedKeyCache","reducerKeys","argumentName","unexpectedKeys","filter","key","assertReducerShape","reducer","undefined","combineReducers","finalReducers","shapeAssertionError","finalReducerKeys","state","warningMessage","hasChanged","nextState","_i","_key","previousStateForKey","nextStateForKey","actionType","String","isCrushed","defaultEqualityCheck","areArgumentsShallowlyEqual","equalityCheck","prev","next","defaultMemoize","func","lastArgs","lastResult","getDependencies","funcs","dependencies","every","dep","dependencyTypes","createSelectorCreator","memoize","_len","memoizeOptions","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","selector","params","resetRecomputations","__extends","extendStatics","__proto__","TypeError","__","__spreadArray","to","il","__defProp","__getOwnPropSymbols","__hasOwnProp","__propIsEnum","propertyIsEnumerable","__defNormalProp","__spreadValues","prop","_b","createAction","prepareAction","actionCreator","args","prepared","payload","meta","match","executeReducerBuilderCallback","builderCallback","defaultCaseReducer","actionsMap","actionMatchers","builder","addCase","typeOrActionCreator","addMatcher","matcher","addDefaultCase","createReducer","initialState","mapOrBuilderCallback","finalActionMatchers","finalDefaultCaseReducer","frozenInitialState","createNextState","caseReducers","cr","reduce","previousState","caseReducer","result","isDraft2","isDraftable","draft","getType2","actionKey","createSlice","options","extraReducers","_c","_d","_e","reducerNames","sliceCaseReducersByName","sliceCaseReducersByType","actionCreators","reducerName","prepareCallback","maybeReducerWithPrepare","prepare","actions","_super","MiddlewareArray","_this","species","arr","prepend","enableES5","nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toUpperCase","aspromise","asPromise","ctx","offset","index","pending","resolve","reject","err","base64","string","charAt","ceil","b64","s64","encode","buffer","start","end","parts","chunk","fromCharCode","invalidEncoding","decode","charCodeAt","test","eventemitter","EventEmitter","_listeners","evt","off","listeners","splice","emit","float","factory","exports","Float32Array","f32","f8b","le","writeFloat_f32_cpy","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","round","exponent","floor","log","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","inquire_1","inquire","moduleName","mod","eval","utf8","len","read","write","c1","c2","pool_1","pool","alloc","SIZE","MAX","slab","longbits","LongBits","util","require$$0","zero","toNumber","zzEncode","zzDecode","zeroHash","fromNumber","isString","Long","fromString","low","high","unsigned","toLong","Boolean","fromHash","hash","toHash","mask","part0","part1","part2","merge","dst","src","ifNotSet","newError","CustomError","properties","captureStackTrace","stack","require$$1","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","isNode","global","versions","node","window","self","emptyArray","emptyObject","isInteger","Number","isFinite","isObject","isset","isSet","Buffer","utf8Write","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","bits","fromBits","lcFirst","str","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","json","_configure","encoding","allocUnsafe","writer","Writer","BufferWriter","Op","noop","State","head","tail","states","writeByte","writeVarint32","VarintOp","writeVarint64","writeFixed32","subarray","_push","uint32","int32","sint32","uint64","int64","sint64","bool","fixed32","sfixed32","fixed64","sfixed64","double","writeBytes","fork","reset","ldelim","finish","BufferWriter_","writer_buffer","writeStringBuffer","writeBytesBuffer","copy","byteLength","reader","Reader","BufferReader","indexOutOfRange","writeLength","RangeError","create_array","isBuffer","readLongVarint","readFixed32_end","readFixed64","_slice","skip","skipType","wireType","BufferReader_","reader_buffer","utf8Slice","service","Service","rpcImpl","requestDelimited","responseDelimited","rpcCall","method","requestCtor","responseCtor","request","callback","response","setTimeout","endedByRPC","roots","protobuf","configure","build","rpc","minimal","$protobuf","$Reader","$Writer","$util","$root","valuesById","values","ClassRequest","$oneOfFields","endClass","setHost","setContent","setActvityStreamId","rewardTrophyToUser","rewardTrophyToAll","sendChatMessage","EndClassRequest","SetHostRequest","SetContentRequest","SetActivityStreamIdRequest","RewardTrophyToUserRequest","RewardTrophyToAllRequest","SendChatMessageRequest","encodeDelimited","tag","decodeDelimited","verify","fromObject","object","toObject","defaults","oneofs","toJSON","ClassEvent","actionResponse","setRoomState","classEnded","deviceConnected","deviceDisconnected","hostChanged","contentChanged","newChatMessage","actvityStreamIdChanged","trophyRewardedToUser","trophyRewardedToAll","ClassResponseEvent","SetClassStateEvent","ClassEndedEvent","DeviceConnectedEvent","DeviceDisconnectedEvent","HostChangedEvent","ContentChangedEvent","NewChatMessageEvent","ActivityStreamIdChangedEvent","TrophyRewardedToUserEvent","TrophyRewardedToAllEvent","hostUserId","content","Content","deviceId","activityStreamId","userId","trophy","Trophy","ClassState","timestamp","fromValue","long","device","Device","chatMessage","ChatMessage","users","devices","chatMessages","classEndedTime","User","end2","tag2","keys2","arrays","objects","trophies","deviceIds","webRtcStreamIds","text","contentLocation","ContentType","FeedbackType","QuickFeedbackType","newUserId","newDeviceId","newActivityStreamId","newWebRtcStreamId","newTimestamp","now","INITIAL_ROOM_STATE","Blank","classEndTime","setState","deviceConnect","deviceDisconnect","user","addChatMessage","setActivityStreamId","activityStreamID","classSlice","classReducer","classActions","network","networkReducer","room","validateChatMessage","validateContentType","PBContentType","Activity","Audio","Camera","Image","Screen","Stream","Video","validateContent","validateState","classState","validateDevice","webRTCStreamIDs","validateTrophy","actvityStreamIdChangedAction","event","classEndedAction","contentChangedAction","deviceConnectedAction","deviceDisconnectedAction","hostChangedAction","newChatMessageAction","setRoomStateAction","trophyRewardedToAllAction","trophyRewardedToUserAction","ConnectionStatus","prefix","Events","EE","context","once","addListener","emitter","listener","_events","_eventsCount","clearEvent","eventNames","events","names","handlers","ee","listenerCount","a1","a2","a3","a4","a5","removeListener","removeAllListeners","prefixed","module","Network","dispatch","ws","initWs","url","setConnectionStatus","Connecting","WebSocket","binaryType","addEventListener","setConnectionError","Connected","resetKeepAliveTimeout","Disconnected","data","onNetworkMessage","close","reason","send","command","pendingRequests","ArrayBuffer","acknowledge","dispatchEvent","pendingPromise","milliseconds","keepAliveTimeout","clearTimeout","sendHeartbeat","readyState","OPEN","connectionError","connectionStatus","getDevices","participants","getDevice","generateStateDiff","old","latest","differences","parseParticipants","appendChatMessage","messages","max","host","changeHost","hostId","changeContent","endTimestamp","oldKeys","newKeys","addParticipants","removeParticipants","roomId","pb.ContentType","userJoinReducer","participant","userLeaveReducer","sendChatMessageReducer","msg","fromUser","setHostReducer","addTrophyReducer","idsToProcess","setDeviceReducer","removeDeviceReducer","setWebRtcStreamReducer","streams","webRTCStreams","setActivityReducer","activity","setContentReducer","roomSlice","userJoin","userLeave","addTrophy","setDevice","removeDevice","setWebRtcStream","setActivity","Actions","roomReducer","NetworkContext","React","createContext","displayName","NetworkProvider","children","useDispatch","useMemo","Provider","useSendChatMessage","useContext","setResult","useState","setError","loading","setLoading","async","useJoinClass","joinClass","useLeaveClass","leaveClass","useSetContent","useConnectionState","autoConnectUrl","useSelector","useNetwork","useMessages"],"mappings":"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"}