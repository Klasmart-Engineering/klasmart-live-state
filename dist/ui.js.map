{"version":3,"file":"ui.js","sources":["../src/models.ts","../src/types.ts","../src/redux/authorization.ts","../src/redux/class.ts","../src/protobuf/state.ts","../src/protobuf/actions.ts","../src/react/networkContext.ts","../src/react/hooks/actions.ts","../src/react/hooks/handler.ts","../src/react/hooks/state.ts","../src/react/hooks/userDevice.ts","../node_modules/eventemitter3/index.js","../src/network/trackSender.ts","../node_modules/ms/index.js","../node_modules/debug/src/common.js","../node_modules/debug/src/browser.js","../node_modules/bowser/es5.js","../node_modules/mediasoup-client/lib/Logger.js","../node_modules/mediasoup-client/lib/EnhancedEventEmitter.js","../node_modules/mediasoup-client/lib/errors.js","../node_modules/mediasoup-client/lib/utils.js","../node_modules/h264-profile-level-id/index.js","../node_modules/mediasoup-client/lib/ortc.js","../node_modules/awaitqueue/lib/index.js","../node_modules/mediasoup-client/lib/Producer.js","../node_modules/mediasoup-client/lib/Consumer.js","../node_modules/mediasoup-client/lib/DataProducer.js","../node_modules/mediasoup-client/lib/DataConsumer.js","../node_modules/mediasoup-client/lib/Transport.js","../node_modules/sdp-transform/lib/grammar.js","../node_modules/sdp-transform/lib/parser.js","../node_modules/sdp-transform/lib/writer.js","../node_modules/sdp-transform/lib/index.js","../node_modules/mediasoup-client/lib/handlers/sdp/commonUtils.js","../node_modules/mediasoup-client/lib/handlers/sdp/unifiedPlanUtils.js","../node_modules/mediasoup-client/lib/handlers/HandlerInterface.js","../node_modules/mediasoup-client/lib/handlers/sdp/MediaSection.js","../node_modules/mediasoup-client/lib/handlers/sdp/RemoteSdp.js","../node_modules/mediasoup-client/lib/scalabilityModes.js","../node_modules/mediasoup-client/lib/handlers/Chrome74.js","../node_modules/mediasoup-client/lib/handlers/Chrome70.js","../node_modules/mediasoup-client/lib/handlers/sdp/planBUtils.js","../node_modules/mediasoup-client/lib/handlers/Chrome67.js","../node_modules/mediasoup-client/lib/handlers/Chrome55.js","../node_modules/mediasoup-client/lib/handlers/Firefox60.js","../node_modules/mediasoup-client/lib/handlers/Safari12.js","../node_modules/mediasoup-client/lib/handlers/Safari11.js","../node_modules/mediasoup-client/lib/handlers/ortc/edgeUtils.js","../node_modules/mediasoup-client/lib/handlers/Edge11.js","../node_modules/mediasoup-client/lib/handlers/ReactNative.js","../node_modules/mediasoup-client/lib/Device.js","../node_modules/mediasoup-client/lib/RtpParameters.js","../node_modules/mediasoup-client/lib/SctpParameters.js","../node_modules/mediasoup-client/lib/types.js","../node_modules/mediasoup-client/lib/index.js","../src/network/websocketTransport.ts","../src/network/promiseCompleter.ts","../src/memoize.ts","../src/network/sfu.ts","../src/network/room.ts","../src/react/rtcContext.tsx","../src/react/hooks/webrtc.ts","../node_modules/nanoid/index.prod.js","../node_modules/@protobufjs/aspromise/index.js","../node_modules/@protobufjs/base64/index.js","../node_modules/@protobufjs/eventemitter/index.js","../node_modules/@protobufjs/float/index.js","../node_modules/@protobufjs/inquire/index.js","../node_modules/@protobufjs/utf8/index.js","../node_modules/@protobufjs/pool/index.js","../node_modules/protobufjs/src/util/longbits.js","../node_modules/protobufjs/src/util/minimal.js","../node_modules/protobufjs/src/writer.js","../node_modules/protobufjs/src/writer_buffer.js","../node_modules/protobufjs/src/reader.js","../node_modules/protobufjs/src/reader_buffer.js","../node_modules/protobufjs/src/rpc/service.js","../node_modules/protobufjs/src/rpc.js","../node_modules/protobufjs/src/roots.js","../node_modules/protobufjs/src/index-minimal.js","../node_modules/protobufjs/minimal.js","../src/protobuf/index.js","../node_modules/redux/es/redux.js","../src/redux/network.ts","../src/network/network.ts","../src/react/networkProvider.tsx","../src/react/rtcProvider.tsx","../src/redux/reducer.ts","../src/roles.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-empty-interface */\n\nimport { NewType } from \"./types\";\n\nexport enum FeedbackType {\n  END_CLASS,\n  LEAVE_CLASS,\n}\n\nexport enum QuickFeedbackType {\n  VIDEO,\n  AUDIO,\n  PRESENTATION,\n  OTHER,\n}\n\nexport interface QuickFeedback {\n  type: QuickFeedbackType;\n  stars: number | null;\n}\n\nexport interface PageEventIn {\n  sequenceNumber: number;\n  isKeyframe: boolean;\n  eventsSinceKeyframe: number;\n  eventData: string;\n}\n\nexport enum ContentType {\n  Blank = \"Blank\",\n\n  // ActivityStreamID\n  Stream = \"Stream\", // Consume a DOM (Activity) stream\n  // URLs\n  Activity = \"Activity\", //Produce a DOM (Activity) Stream\n  Video = \"Video\", //\n  Audio = \"Audio\",\n  Image = \"Image\",\n  //WebRTC Stream IDs\n  Camera = \"Camera\",\n  Screen = \"Screen\",\n}\n\nexport type UserID = NewType<string, \"UserID\">;\nexport const newUserId = (value: string): UserID => value as UserID;\n\nexport type DeviceID = NewType<string, \"DeviceID\">;\nexport const newDeviceId = (value: string): DeviceID => value as DeviceID;\n\nexport type ActivityStreamID = NewType<string, \"ActivityStreamID\">;\nexport const newActivityStreamId = (value: string): ActivityStreamID =>\n  value as ActivityStreamID;\n\nexport type WebRTCStreamID = NewType<string, \"WebRTCStreamID\">;\nexport const newWebRtcStreamId = (value: string): WebRTCStreamID =>\n  value as WebRTCStreamID;\n\nexport type Timestamp = NewType<number, \"Timestamp\">;\nexport const newTimestamp = (value: number): Timestamp => value as Timestamp;\n\nexport type TrophyType = NewType<string, \"TrophyType\">;\nexport const newTrophyType = (value: string): TrophyType => value as TrophyType;\n\nexport type UserRole = NewType<string, \"UserRole\">;\nexport const newUserRole = (role: string): UserRole =>\n  role.toLowerCase() as UserRole;\n\n// Class State\n// Change to Union\nexport interface Content {\n  type: ContentType;\n  contentLocation: string;\n}\n\nexport interface Trophy {\n  timestamp: Timestamp;\n  type: TrophyType;\n  from: UserID;\n}\n\nexport interface UserState {\n  id: UserID;\n  name: string;\n  role: UserRole;\n  trophies: Trophy[];\n  deviceIds: DeviceID[];\n}\n\nexport interface DeviceState {\n  id: DeviceID;\n  userId: UserID;\n  activityStreamID?: ActivityStreamID;\n  webRTCStreamIDs: WebRTCStreamID[];\n}\n\nexport interface ChatMessageState {\n  userId: UserID;\n  timestamp: Timestamp;\n  text: string;\n}\n\nexport interface ClassState {\n  users: Record<UserID, UserState>;\n  devices: Record<DeviceID, DeviceState>;\n\n  chatMessages: ChatMessageState[];\n  content: Content;\n  hostDeviceId?: DeviceID;\n  classEndTime?: Timestamp;\n}\n\nexport interface ChatMessageNotification {\n  id: string;\n  user: UserState;\n  message: string;\n}\n\nexport interface ContentNotification {\n  type: ContentType;\n  contentId: string;\n}\n\nexport interface SessionNotification {\n  // webRTC: WebRTC\n}\n\nexport interface TrophyNotification {\n  from: string;\n  user: string;\n  kind: string;\n}\n\nexport interface VideoSynchronize {}\nexport interface WhiteboardStateOut {}\nexport interface WhiteboardEventOut {}\nexport interface ClassNotification {\n  chatMessage: ChatMessageNotification;\n  join: DeviceState;\n  leave: DeviceState;\n  content: ContentNotification;\n  trophy: TrophyNotification;\n\n  //webRTC deprecated?\n  sfu: string;\n  session: SessionNotification;\n}\n","export type ValueOf<T> = T[keyof T];\n\nexport type NewType<T, NewTypeName> = T & {\n  /**\n   * This is not available at runtime\n   */\n  readonly __COMPILETIME_TYPE__: NewTypeName;\n};\n\nexport const keys = <O>(o: O): (keyof O)[] => {\n    return Object.keys(o) as (keyof O)[];\n};\n\nexport const values = <O>(o: O): ValueOf<O>[] => {\n    return Object.values(o) as ValueOf<O>[];\n};\n\nexport const entries = <O>(o: O): [keyof O, ValueOf<O>][] => {\n    return Object.entries(o) as [keyof O, ValueOf<O>][];\n};\n","import { UserRole } from \"../models\";\n\nexport function isAllowedToBecomeHost(role: UserRole): boolean {\n    switch (role.toLowerCase()) {\n    case \"teacher\":\n        return true;\n    default:\n        return false;\n    }\n}\n","import { CaseReducer, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { WritableDraft } from \"immer/dist/internal\";\nimport {\n    ContentType,\n    ClassState,\n    UserID,\n    Content,\n    ChatMessageState,\n    DeviceID,\n    ActivityStreamID,\n    DeviceState,\n    Trophy,\n    UserRole,\n    Timestamp,\n} from \"../models\";\nimport { ValueOf, values } from \"../types\";\nimport { isAllowedToBecomeHost } from \"./authorization\";\n\ntype Reducer<P = void, T extends string = string> = CaseReducer<\n  ClassState,\n  PayloadAction<P, T>\n>;\n\nexport const INITIAL_ROOM_STATE: ClassState = {\n    users: {},\n    devices: {},\n    chatMessages: [],\n    content: {\n        type: ContentType.Blank,\n        contentLocation: \"\",\n    },\n    hostDeviceId: undefined,\n    classEndTime: undefined,\n};\n\nconst join: Reducer<{ state: ClassState; deviceId: DeviceID }> = (\n    _state,\n    action\n) => action.payload.state;\n\nconst endClass: Reducer<{ timestamp: Timestamp }> = (state, action) => {\n    state.classEndTime = action.payload.timestamp;\n};\n\nconst deviceConnect: Reducer<{\n  name: string;\n  device: DeviceState;\n  role: UserRole;\n}> = (state, action) => {\n    const { name, device, role } = action.payload;\n    //Device\n    state.devices[device.id] = device;\n    //User\n    const userId = device.userId;\n    const user = state.users[userId];\n    if (user) {\n        user.deviceIds.push(device.id);\n    } else {\n        state.users[userId] = {\n            id: userId,\n            name,\n            role,\n            deviceIds: [device.id],\n            trophies: [],\n        };\n    }\n    if (!state.hostDeviceId && isAllowedToBecomeHost(role)) {\n        state.hostDeviceId = device.id;\n    }\n};\n\nconst deviceDisconnect: Reducer<{ deviceId: DeviceID }> = (state, action) => {\n    const { deviceId } = action.payload;\n    const device = state.devices[deviceId] as\n    | WritableDraft<DeviceState>\n    | undefined;\n    delete state.devices[deviceId];\n    if (!device) {\n        return;\n    }\n\n    if (state.hostDeviceId === device.id) {\n        state.hostDeviceId = undefined;\n        const userIds = Object.keys(state.users) as UserID[];\n        // userIds.sort(); sort may be unecessary\n        // It ensures deterministic evaluation on all clients, regardless of the keys array ordering\n        // Which could be affected by serialization and deserialization during network messages\n        userIds.sort();\n        for (const userId of userIds) {\n            const user = state.users[userId];\n            if (!user) {\n                continue;\n            }\n            const deviceId = user.deviceIds[0];\n            if (!deviceId) {\n                continue;\n            }\n            if (isAllowedToBecomeHost(user.role)) {\n                state.hostDeviceId = deviceId;\n                break;\n            }\n        }\n    }\n};\n\nconst setHost: Reducer<DeviceID> = (state, action) => {\n    state.hostDeviceId = action.payload;\n};\n\nconst setContent: Reducer<Content> = (state, action) => {\n    state.content = action.payload;\n};\n\nconst addChatMessage: Reducer<ChatMessageState> = (state, action) => {\n    const chatMessage = action.payload;\n    state.chatMessages.push(chatMessage);\n};\n\nconst setActivityStreamId: Reducer<{\n  deviceId: DeviceID;\n  activityStreamId?: ActivityStreamID;\n}> = (state, action) => {\n    const { deviceId, activityStreamId } = action.payload;\n    const device = state.devices[deviceId];\n    if (!device) {\n        return;\n    }\n    device.activityStreamID = activityStreamId;\n};\n\nconst rewardTrophyToUser: Reducer<{ to: UserID; trophy: Trophy }> = (\n    state,\n    action\n) => {\n    const { to, trophy } = action.payload;\n    state.users[to]?.trophies.push(trophy);\n};\n\nconst rewardTrophyToAll: Reducer<{ trophy: Trophy }> = (state, action) => {\n    const { trophy } = action.payload;\n    values(state.users).forEach((user) => user.trophies.push(trophy));\n};\n\nexport const classSliceActionPrefix = \"class\";\nexport const classSlice = createSlice({\n    name: classSliceActionPrefix,\n    initialState: INITIAL_ROOM_STATE,\n    reducers: {\n        join,\n        endClass,\n        deviceConnect,\n        deviceDisconnect,\n        setHost,\n        setContent,\n        addChatMessage,\n        setActivityStreamId,\n        rewardTrophyToUser,\n        rewardTrophyToAll,\n    },\n});\n\nexport const classReducer = classSlice.reducer;\nexport const classActions = classSlice.actions;\nexport type ClassActionType = keyof typeof classActions;\nexport type ClassAction = ReturnType<ValueOf<typeof classActions>>;\n\nexport type ClassActionTypeToPayload = {\n  [K in keyof typeof classActions]: ReturnType<\n    typeof classActions[K]\n  >[\"payload\"];\n};\n","import { IChatMessage, IClassState, IContent, IDevice, ITrophy, IUser } from \".\";\nimport { Content, ContentType, newDeviceId, DeviceState, Trophy, newUserId, newWebRtcStreamId, newActivityStreamId, newTimestamp, ChatMessageState, ClassState, DeviceID, UserState, newUserRole, UserID, newTrophyType } from \"../models\";\nimport { values } from \"../types\";\n\n\nexport function validateChatMessage({text,timestamp,userId}: IChatMessage): ChatMessageState | undefined {\n    if(!text) { console.error(\"IChatMessage is missing text\"); return; }\n    if(!timestamp) { console.error(\"IChatMessage is missing timestamp\"); return; }\n    if(!userId) { console.error(\"IChatMessage is missing userId\"); return; }\n\n    return {\n        userId: newUserId(userId),\n        timestamp: newTimestamp(timestamp),\n        text,\n    };\n}\n\nexport function validateContentType(content: string): ContentType | undefined {\n    // In the case that string is not a member of the enum,\n    // this function will return undefined\n    // Due to casting content to 'as keyof typeof ContentType'\n    // the contentType variable has been explicitly defined as Optional\n    const contentType: ContentType | undefined = ContentType[content as keyof typeof ContentType];\n    return contentType;\n}\n\nexport function validateContent(content: IContent): Content | undefined {\n    if (!content.type) { console.error(\"IContent is missing type\"); return; }\n    if (!content.contentLocation) { console.error(\"IContent is missing type\"); return; }\n\n    const type = validateContentType(content.type);\n    if(!type) { console.error(`IContent has an invalid type '${content.type}'`); return; }\n    const contentLocation = content.contentLocation;\n    return { type, contentLocation };\n}\n\n/**\n * This function attempts to return a valid ClassState\n * In the case that it recieves an invalid state it prints an error describing the error\n * and then attempts to let provide a sensible default to allow the user to proceed despite the malformed state message\n *\n * @param classState\n * @returns\n */\nexport function validateState(classState: IClassState): ClassState | undefined {\n\n    const chatMessages: ChatMessageState[] = [];\n    if(classState.chatMessages) {\n        classState.chatMessages.forEach((m) => {\n            const validChatMessage = validateChatMessage(m);\n            if(!validChatMessage) { console.error(\"IClassState has an invalid chatMessage\"); return; }\n            chatMessages.push(validChatMessage);\n        });\n    } else {\n        console.error(\"IClassState is missing chatMessages\");\n    }\n\n    let content = { type: ContentType.Blank, contentLocation: \"\" };\n    if(classState.content) {\n        const validContent = validateContent(classState.content);\n        if(validContent) {\n            content = validContent;\n        } else {\n            console.error(\"IClassState has an invalid content\");\n        }\n    } else {\n        console.error(\"IClassState is missing content\");\n    }\n\n    const devices: Record<DeviceID, DeviceState> = {};\n    if (classState.devices) {\n        Object.values(classState.devices).forEach((device) => {\n            const validatedDevice = validateDevice(device);\n            if(!validatedDevice) { console.error(\"IClassState has invalid device\"); return; }\n            devices[validatedDevice.id] = validatedDevice;\n        });\n    } else {\n        console.error(\"IClassState is missing devices\");\n    }\n\n\n    const users: Record<UserID, UserState> = {};\n    if (classState.users) {\n        Object.values(classState.users).forEach((user) => {\n            const validUser = validateUser(user);\n            if(!validUser) { console.error(\"IClassState has invalid user\"); return; }\n            const priorDeviceCount = validUser.deviceIds.length;\n            validUser.deviceIds = validUser.deviceIds.filter((deviceId) => (deviceId in devices));\n            if(validUser.deviceIds.length !== priorDeviceCount) { console.error(\"Removed unknown DeviceID from IUser\"); }\n            users[validUser.id] = validUser;\n        });\n    } else {\n        console.error(\"IClassState is missing users\");\n    }\n\n\n    for(const device of values(devices)) {\n        if(!users.hasOwnProperty(device.userId)) {\n            console.error(`Device(${device.id}) references unknown User(${device.userId})`);\n        }\n    }\n\n    return {\n        chatMessages,\n        content,\n        devices,\n        users,\n        classEndTime: classState.classEndedTime ? newTimestamp(classState.classEndedTime) : undefined,\n        hostDeviceId: classState.hostDeviceId ? newDeviceId(classState.hostDeviceId) : undefined,\n    };\n}\n\nexport function validateUser(user: IUser): UserState | undefined {\n    if(!user.id) { console.error(\"IUser is missing id\"); return; }\n    if(!user.deviceIds) { console.error(\"IUser is missing deviceIds\"); return; }\n    if(!user.name) { console.error(\"IUser is missing name\"); return; }\n    if(!user.role) { console.error(\"IUser is missing role\"); return; }\n\n    const trophies: Trophy[] = [];\n    for(const trophy of trophies) {\n        const validTrophy = validateTrophy(trophy);\n        if(validTrophy) { trophies.push(validTrophy); }\n    }\n\n    return {\n        id: newUserId(user.id),\n        deviceIds: user.deviceIds.map((id) => newDeviceId(id)),\n        name: user.name,\n        role: newUserRole(user.role),\n        trophies,\n    };\n}\n\nexport function validateDevice({id, activityStreamId, userId, webRtcStreamIds}: IDevice): DeviceState | undefined {\n    if(!id) { console.error(\"IDevice is missing id\"); return; }\n    if(!userId) { console.error(\"IDevice is missing userId\"); return; }\n    return {\n        id: newDeviceId(id),\n        userId: newUserId(userId),\n        activityStreamID: activityStreamId ? newActivityStreamId(activityStreamId) : undefined,\n        webRTCStreamIDs: webRtcStreamIds?.map((id) => newWebRtcStreamId(id)) || []\n    };\n}\n\nexport function validateTrophy(trophy: ITrophy): Trophy | undefined {\n    if (!trophy.timestamp) { console.error(\"ITrophy is missing trophy.timestamp\"); return; }\n    if (!trophy.type) { console.error(\"ITrophy is missing trophy.type\"); return; }\n    if (!trophy.fromUserId) { console.error(\"ITrophy is missing trophy.fromUserId\"); return; }\n    //TODO: Handle uint64\n    const timestamp = trophy.timestamp;\n    const type = newTrophyType(trophy.type);\n    const from = newUserId(trophy.fromUserId);\n    return { timestamp, type, from };\n}\n\n","import { IActivityStreamIdChangedEvent, IClassEndedEvent, IClassMessage, IContentChangedEvent, IDeviceConnectedEvent, IDeviceDisconnectedEvent, IHostChangedEvent, IJoinEvent, INewChatMessageEvent, ITrophyRewardedToAllEvent, ITrophyRewardedToUserEvent } from \".\";\nimport { newActivityStreamId, newDeviceId, newTimestamp, newUserId, newUserRole } from \"../models\";\nimport { ClassAction, classActions } from \"../redux/class\";\nimport { validateChatMessage, validateContent, validateDevice, validateState, validateTrophy } from \"./state\";\n\n\nexport function messageToClassAction(message: IClassMessage): ClassAction | undefined {\n    if(message.activityStreamIdChanged) {\n        return activityStreamIdChangedAction(message.activityStreamIdChanged);\n    }\n    if(message.classEnded) {\n        return classEndedAction(message.classEnded);\n    }\n    if(message.contentChanged) {\n        return contentChangedAction(message.contentChanged);\n    }\n    if(message.deviceConnected) {\n        return deviceConnectedAction(message.deviceConnected);\n    }\n    if(message.deviceDisconnected) {\n        return deviceDisconnectedAction(message.deviceDisconnected);\n    }\n    if(message.hostChanged) {\n        return hostChangedAction(message.hostChanged);\n    }\n    if(message.newChatMessage) {\n        return newChatMessageAction(message.newChatMessage);\n    }\n    if(message.joinEvent) {\n        return joinAction(message.joinEvent);\n    }\n    if(message.trophyRewardedToAll) {\n        return trophyRewardedToAllAction(message.trophyRewardedToAll);\n    }\n    if(message.trophyRewardedToUser) {\n        return trophyRewardedToUserAction(message.trophyRewardedToUser);\n    }\n    return undefined;\n}\n\nexport function activityStreamIdChangedAction(event: IActivityStreamIdChangedEvent): ReturnType<typeof classActions.setActivityStreamId> | undefined {\n    if(!event.deviceId) { console.error(\"IActivityStreamIdChangedEvent missing deviceId\"); return; }\n\n    return classActions.setActivityStreamId({\n        deviceId: newDeviceId(event.deviceId),\n        activityStreamId: event.activityStreamId ? newActivityStreamId(event.activityStreamId) : undefined,\n    });\n}\n\nexport function classEndedAction(event: IClassEndedEvent): ReturnType<typeof classActions.endClass> | undefined {\n    if(!event.timestamp) { console.error(\"IClassEndedEvent is missing timestamp\"); return; }\n    const timestamp = newTimestamp(event.timestamp);\n    return classActions.endClass({timestamp});\n}\n\nexport function contentChangedAction(event: IContentChangedEvent): ReturnType<typeof classActions.setContent> | undefined {\n    if(!event.content) { console.error(\"IContentChangedEvent is missing content\"); return; }\n\n    const content = validateContent(event.content);\n    if(!content) { return; }\n\n    return classActions.setContent(content);\n}\n\nexport function deviceConnectedAction(event: IDeviceConnectedEvent): ReturnType<typeof classActions.deviceConnect> | undefined {\n    if(!event.name) { console.error(\"IDeviceConnectedEvent is missing name\"); return; }\n    if(!event.role) { console.error(\"IDeviceConnectedEvent is missing role\"); return; }\n    if(!event.device) { console.error(\"IDeviceConnectedEvent is missing device\"); return; }\n\n    const device = validateDevice(event.device);\n    if(!device) { return; }\n\n    return classActions.deviceConnect({\n        name: event.name,\n        role: newUserRole(event.role),\n        device,\n    });\n}\n\nexport function deviceDisconnectedAction({deviceId}: IDeviceDisconnectedEvent): ReturnType<typeof classActions.deviceDisconnect> | undefined {\n    if(!deviceId) { console.error(\"IDeviceDisconnectedEvent is missing deviceId\"); return; }\n\n    return classActions.deviceDisconnect({\n        deviceId: newDeviceId(deviceId),\n    });\n}\n\nexport function hostChangedAction(event: IHostChangedEvent): ReturnType<typeof classActions.setHost> | undefined {\n    if(!event.hostDeviceId) { console.error(\"IHostChangedEvent is missing hostDeviceId\"); return; }\n\n    const hostDeviceId = newDeviceId(event.hostDeviceId);\n\n    return classActions.setHost(hostDeviceId);\n}\n\nexport function newChatMessageAction(event: INewChatMessageEvent): ReturnType<typeof classActions.addChatMessage> | undefined {\n    if(!event.chatMessage) { console.error(\"INewChatMessageEvent is missing chatMessage\"); return; }\n\n    const chatMessage = validateChatMessage(event.chatMessage);\n    if(!chatMessage) { return; }\n\n    return classActions.addChatMessage(chatMessage);\n}\n\nexport function joinAction(event: IJoinEvent): ReturnType<typeof classActions.join> | undefined {\n    if(!event.state) { console.error(\"ISetClassStateEvent is missing state\"); return; }\n    if(!event.deviceId) { console.error(\"ISetClassStateEvent is missing deviceId\"); return; }\n    const state = validateState(event.state);\n    if(!state) { return; }\n    return classActions.join({\n        state,\n        deviceId: newDeviceId(event.deviceId),\n    });\n}\n\nexport function trophyRewardedToAllAction(event: ITrophyRewardedToAllEvent): ReturnType<typeof classActions.rewardTrophyToAll> | undefined {\n    if(!event.trophy) { console.error(\"ITrophyRewardedToAllEvent is missing trophy\"); return; }\n\n    const trophy = validateTrophy(event.trophy);\n    if(!trophy) { return; }\n\n    return classActions.rewardTrophyToAll({ trophy });\n}\n\nexport function trophyRewardedToUserAction(event: ITrophyRewardedToUserEvent): ReturnType<typeof classActions.rewardTrophyToUser> | undefined {\n    if(!event.toUserId) { console.error(\"ITrophyRewardedToAllEvent is missing toUserId\"); return; }\n    if(!event.trophy) { console.error(\"ITrophyRewardedToAllEvent is missing trophy\"); return; }\n\n    const trophy = validateTrophy(event.trophy);\n    if(!trophy) { return; }\n\n    return classActions.rewardTrophyToUser({\n        to: newUserId(event.toUserId),\n        trophy,\n    });\n}\n","import React from \"react\";\nimport { Network } from \"../network/network\";\n\nexport const NetworkContext = React.createContext<Network<unknown>>(\n  null as any\n);\nNetworkContext.displayName = \"KidsloopLiveNetwork\";\n\nexport default NetworkContext;\n","import { useContext } from \"react\";\nimport { useAsyncCallback } from \"react-async-hook\";\nimport {\n    ActivityStreamID,\n    Content,\n    DeviceID,\n    TrophyType,\n    UserID,\n} from \"../../models\";\nimport { IClassRequest } from \"../../protobuf\";\nimport NetworkContext from \"../networkContext\";\n\nexport function useJoinClass() {\n    const network = useContext(NetworkContext);\n    const initWs = (url: string) => network.connect(url);\n    const { execute: joinClass, status } = useAsyncCallback(initWs, {\n        onError: (e) => console.error(e),\n    });\n    return { joinClass, status };\n}\n\nexport function useLeaveClass() {\n    const network = useContext(NetworkContext);\n    const close = (reason?: string) => network.disconnect(4200, reason);\n    const { execute: leaveClass, status } = useAsyncCallback(close);\n    return { leaveClass, status };\n}\n\nexport function useEndClass() {\n    const { execute, status } = useNetworkAction(() => ({ endClass: {} }));\n    return { endClass: execute, status };\n}\n\nexport function useRewardTrophyToAll() {\n    const { execute, status } = useNetworkAction((trophyType: TrophyType) => ({\n        rewardTrophyToAll: {\n            trophyType,\n        },\n    }));\n    return { rewardTrophyToAll: execute, status };\n}\n\nexport function useRewardTrophyToUser() {\n    const { execute, status } = useNetworkAction(\n        (trophyType: TrophyType, toUserId: UserID) => ({\n            rewardTrophyToUser: {\n                trophyType,\n                toUserId,\n            },\n        })\n    );\n    return { rewardTrophyToUser: execute, status };\n}\n\nexport function useSendChatMessage() {\n    const { execute, status } = useNetworkAction((text: string) => ({\n        sendChatMessage: {\n            text,\n        },\n    }));\n    return { sendChatMessage: execute, status };\n}\n\nexport function useSetActivityStreamId() {\n    const { execute, status } = useNetworkAction(\n        (activityStreamId?: ActivityStreamID) => ({\n            setActivityStreamId: {\n                activityStreamId,\n            },\n        })\n    );\n    return { setActivityStreamId: execute, status };\n}\n\nexport function useSetContent() {\n    const { execute, status } = useNetworkAction((content: Content) => ({\n        setContent: {\n            content,\n        },\n    }));\n    return { setContent: execute, status };\n}\n\nexport function useSetHost() {\n    const { execute, status } = useNetworkAction((hostDeviceId: DeviceID) => ({\n        setHost: { hostDeviceId },\n    }));\n    return { setHost: execute, status };\n}\n\nfunction useNetworkAction<Args extends any[] = any[]>(\n    buildRequest: (...args: Args) => IClassRequest\n) {\n    const network = useContext(NetworkContext);\n    const sendRequest = async (...args: Args) => {\n        const request = buildRequest(...args);\n        await network.send(request);\n    };\n    return useAsyncCallback(sendRequest);\n}\n","import { useContext, useEffect } from \"react\";\nimport {\n    ClassActionType,\n    ClassActionTypeToPayload,\n    NetworkContext,\n    State,\n} from \"../../ui\";\n\nexport type NetworkHandlerCallback<T extends ClassActionType> = (\n  payload: ClassActionTypeToPayload[T],\n  state: State\n) => unknown;\n\nexport function useNetworkHandler<T extends ClassActionType = ClassActionType>(\n    actionType: T,\n    callback: NetworkHandlerCallback<T>\n) {\n    const network = useContext(NetworkContext);\n    // TODO: How to accommodate additional Action types, other than ClassAction\n    useEffect(() => network.onClassAction(actionType, callback), [network]);\n}\n","import { useContext } from \"react\";\nimport NetworkContext from \"../networkContext\";\nimport { useSelector } from \"react-redux\";\nimport { State } from \"../../redux/reducer\";\n\nexport function useNetworkState<T = unknown>(\n    selector: (state: State) => T,\n    equalityCheck?: (left: T, right: T) => boolean\n) {\n    const network = useContext(NetworkContext);\n    return useSelector(\n        (state) => selector(network.selector(state)),\n        equalityCheck\n    );\n}\n","import {\n    DeviceID,\n    DeviceState,\n    UserID,\n    UserRole,\n    UserState,\n} from \"../../models\";\nimport { NewType } from \"../../types\";\nimport { State } from \"../../ui\";\nimport { useNetworkState } from \"./state\";\n\nexport type UserDeviceID = NewType<string, \"UserDeviceID\">;\n\n// TODO: Consider changing this to a hash\nexport const newUserDeviceId = (\n    userId: UserID,\n    deviceId: DeviceID\n): UserDeviceID => JSON.stringify([userId, deviceId]) as UserDeviceID;\n\nexport interface UserDevice {\n  id: UserDeviceID;\n  user: UserState;\n  device: DeviceState;\n}\n\nexport const useUserDevices = (filterRole?: UserRole) =>\n    useNetworkState((state) => {\n        const userDevices: UserDevice[] = [];\n        for (const user of Object.values(state.class.users)) {\n            if (filterRole !== undefined && user.role !== filterRole) {\n                continue;\n            }\n\n            for (const deviceId of user.deviceIds) {\n                const device = state.class.devices[deviceId];\n                if (!device) {\n                    continue;\n                }\n                const id = newUserDeviceId(user.id, device.id);\n                userDevices.push({ id, user, device });\n            }\n        }\n        return userDevices;\n    });\n\nconst resolveUserDevice = (state: State, deviceId: DeviceID) => {\n    const device = state.class.devices[deviceId];\n    if (!device) {\n        return;\n    }\n\n    const user = state.class.users[device.userId];\n    if (!user) {\n        return;\n    }\n\n    return {\n        id: newUserDeviceId(user.id, device.id),\n        device,\n        user,\n    };\n};\n\nexport const useHostUserDevice = () =>\n    useNetworkState((state) => {\n        if (!state.class.hostDeviceId) {\n            return;\n        }\n        return resolveUserDevice(state, state.class.hostDeviceId);\n    });\n\nexport const useLocalUserDevice = () =>\n    useNetworkState((state) => {\n        if (!state.network.myDeviceId) {\n            return;\n        }\n        return resolveUserDevice(state, state.network.myDeviceId);\n    });\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","import { Producer, SFU } from \"./sfu\";\nimport {EventEmitter} from \"eventemitter3\";\n\nexport type TrackSenderState = \"sending\" | \"not-sending\"\n\nexport class TrackSender {\n    public on: TrackSender[\"emitter\"][\"on\"] = (event, callback) => this.emitter.on(event, callback);\n    public off: TrackSender[\"emitter\"][\"off\"] = (event, callback) => this.emitter.off(event, callback);\n    public once: TrackSender[\"emitter\"][\"once\"] = (event, callback) => this.emitter.once(event, callback);\n\n    public get producer() { return this._producer; }\n\n    public async changeState(state: \"sending\" | \"not-sending\" | \"switching-sfu\") {\n        while(this.stateChange) { await this.stateChange; }\n        return this.stateChange = new Promise<void>(r => {\n            let promise: Promise<unknown> | undefined;\n            switch(state) {\n            case \"sending\":\n                promise = this.stateSending();\n                break;\n            case \"not-sending\":\n                promise = this.stateNotSending();\n                break;\n            case \"switching-sfu\":\n                promise = this.stateSwitchSfu();\n                break;\n            default:\n                console.error(`Unhandled TrackSenderState(${state})`);\n                promise = Promise.resolve();\n            }\n            promise.finally(() => {\n                this.stateChange = undefined;\n                r();\n            });\n        });\n    }\n\n\n    public get sfuId() {\n        return this.sfu?.id;\n    }\n\n    public constructor (\n        private readonly getSfu: () => Promise<SFU>,\n        private readonly getTrack: () => Promise<MediaStreamTrack>,\n        private readonly name: string,\n        private readonly sessionId?: string,\n    ) {}\n\n    private async stateSending() {\n        try {\n\n            if(this._producer) { return await this._producer.start(); }\n            if(!this.sfu) { this.sfu = await this.getSfu(); }\n            this._producer = await this.sfu.produceTrack(\n                this.getTrack,\n                this.name,\n                this.sessionId,\n            );\n        } finally {\n            this.emitter.emit(\"statechange\", \"sending\");\n        }\n    }\n\n    private async stateNotSending() {\n        if(this._producer) { await this._producer.stop(); }\n        this.emitter.emit(\"statechange\", \"not-sending\");\n    }\n\n    private async stateSwitchSfu() {\n        if(!this._producer) { return; }\n\n        await this._producer.close();\n        this._producer = undefined;\n        if(this.sfu) { this.sfu = undefined; }\n        this.emitter.emit(\"statechange\", \"not-sending\");\n\n        await this.stateSending();\n\n    }\n\n    private stateChange?: Promise<unknown>;\n\n    private _producer?: Producer;\n    private sfu?: SFU;\n    private emitter = new EventEmitter<{\n        statechange: [TrackSenderState]\n    }>();\n}\n\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.bowser=t():e.bowser=t()}(this,(function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=90)}({17:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n=r(18),i=function(){function e(){}return e.getFirstMatch=function(e,t){var r=t.match(e);return r&&r.length>0&&r[1]||\"\"},e.getSecondMatch=function(e,t){var r=t.match(e);return r&&r.length>1&&r[2]||\"\"},e.matchAndReturnConst=function(e,t,r){if(e.test(t))return r},e.getWindowsVersionName=function(e){switch(e){case\"NT\":return\"NT\";case\"XP\":return\"XP\";case\"NT 5.0\":return\"2000\";case\"NT 5.1\":return\"XP\";case\"NT 5.2\":return\"2003\";case\"NT 6.0\":return\"Vista\";case\"NT 6.1\":return\"7\";case\"NT 6.2\":return\"8\";case\"NT 6.3\":return\"8.1\";case\"NT 10.0\":return\"10\";default:return}},e.getMacOSVersionName=function(e){var t=e.split(\".\").splice(0,2).map((function(e){return parseInt(e,10)||0}));if(t.push(0),10===t[0])switch(t[1]){case 5:return\"Leopard\";case 6:return\"Snow Leopard\";case 7:return\"Lion\";case 8:return\"Mountain Lion\";case 9:return\"Mavericks\";case 10:return\"Yosemite\";case 11:return\"El Capitan\";case 12:return\"Sierra\";case 13:return\"High Sierra\";case 14:return\"Mojave\";case 15:return\"Catalina\";default:return}},e.getAndroidVersionName=function(e){var t=e.split(\".\").splice(0,2).map((function(e){return parseInt(e,10)||0}));if(t.push(0),!(1===t[0]&&t[1]<5))return 1===t[0]&&t[1]<6?\"Cupcake\":1===t[0]&&t[1]>=6?\"Donut\":2===t[0]&&t[1]<2?\"Eclair\":2===t[0]&&2===t[1]?\"Froyo\":2===t[0]&&t[1]>2?\"Gingerbread\":3===t[0]?\"Honeycomb\":4===t[0]&&t[1]<1?\"Ice Cream Sandwich\":4===t[0]&&t[1]<4?\"Jelly Bean\":4===t[0]&&t[1]>=4?\"KitKat\":5===t[0]?\"Lollipop\":6===t[0]?\"Marshmallow\":7===t[0]?\"Nougat\":8===t[0]?\"Oreo\":9===t[0]?\"Pie\":void 0},e.getVersionPrecision=function(e){return e.split(\".\").length},e.compareVersions=function(t,r,n){void 0===n&&(n=!1);var i=e.getVersionPrecision(t),s=e.getVersionPrecision(r),a=Math.max(i,s),o=0,u=e.map([t,r],(function(t){var r=a-e.getVersionPrecision(t),n=t+new Array(r+1).join(\".0\");return e.map(n.split(\".\"),(function(e){return new Array(20-e.length).join(\"0\")+e})).reverse()}));for(n&&(o=a-Math.min(i,s)),a-=1;a>=o;){if(u[0][a]>u[1][a])return 1;if(u[0][a]===u[1][a]){if(a===o)return 0;a-=1}else if(u[0][a]<u[1][a])return-1}},e.map=function(e,t){var r,n=[];if(Array.prototype.map)return Array.prototype.map.call(e,t);for(r=0;r<e.length;r+=1)n.push(t(e[r]));return n},e.find=function(e,t){var r,n;if(Array.prototype.find)return Array.prototype.find.call(e,t);for(r=0,n=e.length;r<n;r+=1){var i=e[r];if(t(i,r))return i}},e.assign=function(e){for(var t,r,n=e,i=arguments.length,s=new Array(i>1?i-1:0),a=1;a<i;a++)s[a-1]=arguments[a];if(Object.assign)return Object.assign.apply(Object,[e].concat(s));var o=function(){var e=s[t];\"object\"==typeof e&&null!==e&&Object.keys(e).forEach((function(t){n[t]=e[t]}))};for(t=0,r=s.length;t<r;t+=1)o();return e},e.getBrowserAlias=function(e){return n.BROWSER_ALIASES_MAP[e]},e.getBrowserTypeByAlias=function(e){return n.BROWSER_MAP[e]||\"\"},e}();t.default=i,e.exports=t.default},18:function(e,t,r){\"use strict\";t.__esModule=!0,t.ENGINE_MAP=t.OS_MAP=t.PLATFORMS_MAP=t.BROWSER_MAP=t.BROWSER_ALIASES_MAP=void 0;t.BROWSER_ALIASES_MAP={\"Amazon Silk\":\"amazon_silk\",\"Android Browser\":\"android\",Bada:\"bada\",BlackBerry:\"blackberry\",Chrome:\"chrome\",Chromium:\"chromium\",Electron:\"electron\",Epiphany:\"epiphany\",Firefox:\"firefox\",Focus:\"focus\",Generic:\"generic\",\"Google Search\":\"google_search\",Googlebot:\"googlebot\",\"Internet Explorer\":\"ie\",\"K-Meleon\":\"k_meleon\",Maxthon:\"maxthon\",\"Microsoft Edge\":\"edge\",\"MZ Browser\":\"mz\",\"NAVER Whale Browser\":\"naver\",Opera:\"opera\",\"Opera Coast\":\"opera_coast\",PhantomJS:\"phantomjs\",Puffin:\"puffin\",QupZilla:\"qupzilla\",QQ:\"qq\",QQLite:\"qqlite\",Safari:\"safari\",Sailfish:\"sailfish\",\"Samsung Internet for Android\":\"samsung_internet\",SeaMonkey:\"seamonkey\",Sleipnir:\"sleipnir\",Swing:\"swing\",Tizen:\"tizen\",\"UC Browser\":\"uc\",Vivaldi:\"vivaldi\",\"WebOS Browser\":\"webos\",WeChat:\"wechat\",\"Yandex Browser\":\"yandex\",Roku:\"roku\"};t.BROWSER_MAP={amazon_silk:\"Amazon Silk\",android:\"Android Browser\",bada:\"Bada\",blackberry:\"BlackBerry\",chrome:\"Chrome\",chromium:\"Chromium\",electron:\"Electron\",epiphany:\"Epiphany\",firefox:\"Firefox\",focus:\"Focus\",generic:\"Generic\",googlebot:\"Googlebot\",google_search:\"Google Search\",ie:\"Internet Explorer\",k_meleon:\"K-Meleon\",maxthon:\"Maxthon\",edge:\"Microsoft Edge\",mz:\"MZ Browser\",naver:\"NAVER Whale Browser\",opera:\"Opera\",opera_coast:\"Opera Coast\",phantomjs:\"PhantomJS\",puffin:\"Puffin\",qupzilla:\"QupZilla\",qq:\"QQ Browser\",qqlite:\"QQ Browser Lite\",safari:\"Safari\",sailfish:\"Sailfish\",samsung_internet:\"Samsung Internet for Android\",seamonkey:\"SeaMonkey\",sleipnir:\"Sleipnir\",swing:\"Swing\",tizen:\"Tizen\",uc:\"UC Browser\",vivaldi:\"Vivaldi\",webos:\"WebOS Browser\",wechat:\"WeChat\",yandex:\"Yandex Browser\"};t.PLATFORMS_MAP={tablet:\"tablet\",mobile:\"mobile\",desktop:\"desktop\",tv:\"tv\"};t.OS_MAP={WindowsPhone:\"Windows Phone\",Windows:\"Windows\",MacOS:\"macOS\",iOS:\"iOS\",Android:\"Android\",WebOS:\"WebOS\",BlackBerry:\"BlackBerry\",Bada:\"Bada\",Tizen:\"Tizen\",Linux:\"Linux\",ChromeOS:\"Chrome OS\",PlayStation4:\"PlayStation 4\",Roku:\"Roku\"};t.ENGINE_MAP={EdgeHTML:\"EdgeHTML\",Blink:\"Blink\",Trident:\"Trident\",Presto:\"Presto\",Gecko:\"Gecko\",WebKit:\"WebKit\"}},90:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(91))&&n.__esModule?n:{default:n},s=r(18);function a(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var o=function(){function e(){}var t,r,n;return e.getParser=function(e,t){if(void 0===t&&(t=!1),\"string\"!=typeof e)throw new Error(\"UserAgent should be a string\");return new i.default(e,t)},e.parse=function(e){return new i.default(e).getResult()},t=e,n=[{key:\"BROWSER_MAP\",get:function(){return s.BROWSER_MAP}},{key:\"ENGINE_MAP\",get:function(){return s.ENGINE_MAP}},{key:\"OS_MAP\",get:function(){return s.OS_MAP}},{key:\"PLATFORMS_MAP\",get:function(){return s.PLATFORMS_MAP}}],(r=null)&&a(t.prototype,r),n&&a(t,n),e}();t.default=o,e.exports=t.default},91:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n=u(r(92)),i=u(r(93)),s=u(r(94)),a=u(r(95)),o=u(r(17));function u(e){return e&&e.__esModule?e:{default:e}}var d=function(){function e(e,t){if(void 0===t&&(t=!1),null==e||\"\"===e)throw new Error(\"UserAgent parameter can't be empty\");this._ua=e,this.parsedResult={},!0!==t&&this.parse()}var t=e.prototype;return t.getUA=function(){return this._ua},t.test=function(e){return e.test(this._ua)},t.parseBrowser=function(){var e=this;this.parsedResult.browser={};var t=o.default.find(n.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.browser=t.describe(this.getUA())),this.parsedResult.browser},t.getBrowser=function(){return this.parsedResult.browser?this.parsedResult.browser:this.parseBrowser()},t.getBrowserName=function(e){return e?String(this.getBrowser().name).toLowerCase()||\"\":this.getBrowser().name||\"\"},t.getBrowserVersion=function(){return this.getBrowser().version},t.getOS=function(){return this.parsedResult.os?this.parsedResult.os:this.parseOS()},t.parseOS=function(){var e=this;this.parsedResult.os={};var t=o.default.find(i.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.os=t.describe(this.getUA())),this.parsedResult.os},t.getOSName=function(e){var t=this.getOS().name;return e?String(t).toLowerCase()||\"\":t||\"\"},t.getOSVersion=function(){return this.getOS().version},t.getPlatform=function(){return this.parsedResult.platform?this.parsedResult.platform:this.parsePlatform()},t.getPlatformType=function(e){void 0===e&&(e=!1);var t=this.getPlatform().type;return e?String(t).toLowerCase()||\"\":t||\"\"},t.parsePlatform=function(){var e=this;this.parsedResult.platform={};var t=o.default.find(s.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.platform=t.describe(this.getUA())),this.parsedResult.platform},t.getEngine=function(){return this.parsedResult.engine?this.parsedResult.engine:this.parseEngine()},t.getEngineName=function(e){return e?String(this.getEngine().name).toLowerCase()||\"\":this.getEngine().name||\"\"},t.parseEngine=function(){var e=this;this.parsedResult.engine={};var t=o.default.find(a.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.engine=t.describe(this.getUA())),this.parsedResult.engine},t.parse=function(){return this.parseBrowser(),this.parseOS(),this.parsePlatform(),this.parseEngine(),this},t.getResult=function(){return o.default.assign({},this.parsedResult)},t.satisfies=function(e){var t=this,r={},n=0,i={},s=0;if(Object.keys(e).forEach((function(t){var a=e[t];\"string\"==typeof a?(i[t]=a,s+=1):\"object\"==typeof a&&(r[t]=a,n+=1)})),n>0){var a=Object.keys(r),u=o.default.find(a,(function(e){return t.isOS(e)}));if(u){var d=this.satisfies(r[u]);if(void 0!==d)return d}var c=o.default.find(a,(function(e){return t.isPlatform(e)}));if(c){var f=this.satisfies(r[c]);if(void 0!==f)return f}}if(s>0){var l=Object.keys(i),h=o.default.find(l,(function(e){return t.isBrowser(e,!0)}));if(void 0!==h)return this.compareVersion(i[h])}},t.isBrowser=function(e,t){void 0===t&&(t=!1);var r=this.getBrowserName().toLowerCase(),n=e.toLowerCase(),i=o.default.getBrowserTypeByAlias(n);return t&&i&&(n=i.toLowerCase()),n===r},t.compareVersion=function(e){var t=[0],r=e,n=!1,i=this.getBrowserVersion();if(\"string\"==typeof i)return\">\"===e[0]||\"<\"===e[0]?(r=e.substr(1),\"=\"===e[1]?(n=!0,r=e.substr(2)):t=[],\">\"===e[0]?t.push(1):t.push(-1)):\"=\"===e[0]?r=e.substr(1):\"~\"===e[0]&&(n=!0,r=e.substr(1)),t.indexOf(o.default.compareVersions(i,r,n))>-1},t.isOS=function(e){return this.getOSName(!0)===String(e).toLowerCase()},t.isPlatform=function(e){return this.getPlatformType(!0)===String(e).toLowerCase()},t.isEngine=function(e){return this.getEngineName(!0)===String(e).toLowerCase()},t.is=function(e,t){return void 0===t&&(t=!1),this.isBrowser(e,t)||this.isOS(e)||this.isPlatform(e)},t.some=function(e){var t=this;return void 0===e&&(e=[]),e.some((function(e){return t.is(e)}))},e}();t.default=d,e.exports=t.default},92:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n};var s=/version\\/(\\d+(\\.?_?\\d+)+)/i,a=[{test:[/googlebot/i],describe:function(e){var t={name:\"Googlebot\"},r=i.default.getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/opera/i],describe:function(e){var t={name:\"Opera\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:opera)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/opr\\/|opios/i],describe:function(e){var t={name:\"Opera\"},r=i.default.getFirstMatch(/(?:opr|opios)[\\s/](\\S+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/SamsungBrowser/i],describe:function(e){var t={name:\"Samsung Internet for Android\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:SamsungBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/Whale/i],describe:function(e){var t={name:\"NAVER Whale Browser\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:whale)[\\s/](\\d+(?:\\.\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/MZBrowser/i],describe:function(e){var t={name:\"MZ Browser\"},r=i.default.getFirstMatch(/(?:MZBrowser)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/focus/i],describe:function(e){var t={name:\"Focus\"},r=i.default.getFirstMatch(/(?:focus)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/swing/i],describe:function(e){var t={name:\"Swing\"},r=i.default.getFirstMatch(/(?:swing)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/coast/i],describe:function(e){var t={name:\"Opera Coast\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:coast)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/opt\\/\\d+(?:.?_?\\d+)+/i],describe:function(e){var t={name:\"Opera Touch\"},r=i.default.getFirstMatch(/(?:opt)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/yabrowser/i],describe:function(e){var t={name:\"Yandex Browser\"},r=i.default.getFirstMatch(/(?:yabrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/ucbrowser/i],describe:function(e){var t={name:\"UC Browser\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:ucbrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/Maxthon|mxios/i],describe:function(e){var t={name:\"Maxthon\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:Maxthon|mxios)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/epiphany/i],describe:function(e){var t={name:\"Epiphany\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:epiphany)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/puffin/i],describe:function(e){var t={name:\"Puffin\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:puffin)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/sleipnir/i],describe:function(e){var t={name:\"Sleipnir\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:sleipnir)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/k-meleon/i],describe:function(e){var t={name:\"K-Meleon\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:k-meleon)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/micromessenger/i],describe:function(e){var t={name:\"WeChat\"},r=i.default.getFirstMatch(/(?:micromessenger)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/qqbrowser/i],describe:function(e){var t={name:/qqbrowserlite/i.test(e)?\"QQ Browser Lite\":\"QQ Browser\"},r=i.default.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/msie|trident/i],describe:function(e){var t={name:\"Internet Explorer\"},r=i.default.getFirstMatch(/(?:msie |rv:)(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/\\sedg\\//i],describe:function(e){var t={name:\"Microsoft Edge\"},r=i.default.getFirstMatch(/\\sedg\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/edg([ea]|ios)/i],describe:function(e){var t={name:\"Microsoft Edge\"},r=i.default.getSecondMatch(/edg([ea]|ios)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/vivaldi/i],describe:function(e){var t={name:\"Vivaldi\"},r=i.default.getFirstMatch(/vivaldi\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/seamonkey/i],describe:function(e){var t={name:\"SeaMonkey\"},r=i.default.getFirstMatch(/seamonkey\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/sailfish/i],describe:function(e){var t={name:\"Sailfish\"},r=i.default.getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i,e);return r&&(t.version=r),t}},{test:[/silk/i],describe:function(e){var t={name:\"Amazon Silk\"},r=i.default.getFirstMatch(/silk\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/phantom/i],describe:function(e){var t={name:\"PhantomJS\"},r=i.default.getFirstMatch(/phantomjs\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/slimerjs/i],describe:function(e){var t={name:\"SlimerJS\"},r=i.default.getFirstMatch(/slimerjs\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/blackberry|\\bbb\\d+/i,/rim\\stablet/i],describe:function(e){var t={name:\"BlackBerry\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/(web|hpw)[o0]s/i],describe:function(e){var t={name:\"WebOS Browser\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/w(?:eb)?[o0]sbrowser\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/bada/i],describe:function(e){var t={name:\"Bada\"},r=i.default.getFirstMatch(/dolfin\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/tizen/i],describe:function(e){var t={name:\"Tizen\"},r=i.default.getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/qupzilla/i],describe:function(e){var t={name:\"QupZilla\"},r=i.default.getFirstMatch(/(?:qupzilla)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/firefox|iceweasel|fxios/i],describe:function(e){var t={name:\"Firefox\"},r=i.default.getFirstMatch(/(?:firefox|iceweasel|fxios)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/electron/i],describe:function(e){var t={name:\"Electron\"},r=i.default.getFirstMatch(/(?:electron)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/MiuiBrowser/i],describe:function(e){var t={name:\"Miui\"},r=i.default.getFirstMatch(/(?:MiuiBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/chromium/i],describe:function(e){var t={name:\"Chromium\"},r=i.default.getFirstMatch(/(?:chromium)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/chrome|crios|crmo/i],describe:function(e){var t={name:\"Chrome\"},r=i.default.getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/GSA/i],describe:function(e){var t={name:\"Google Search\"},r=i.default.getFirstMatch(/(?:GSA)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){var t=!e.test(/like android/i),r=e.test(/android/i);return t&&r},describe:function(e){var t={name:\"Android Browser\"},r=i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/playstation 4/i],describe:function(e){var t={name:\"PlayStation 4\"},r=i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/safari|applewebkit/i],describe:function(e){var t={name:\"Safari\"},r=i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/.*/i],describe:function(e){var t=-1!==e.search(\"\\\\(\")?/^(.*)\\/(.*)[ \\t]\\((.*)/:/^(.*)\\/(.*) /;return{name:i.default.getFirstMatch(t,e),version:i.default.getSecondMatch(t,e)}}}];t.default=a,e.exports=t.default},93:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n},s=r(18);var a=[{test:[/Roku\\/DVP/],describe:function(e){var t=i.default.getFirstMatch(/Roku\\/DVP-(\\d+\\.\\d+)/i,e);return{name:s.OS_MAP.Roku,version:t}}},{test:[/windows phone/i],describe:function(e){var t=i.default.getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.WindowsPhone,version:t}}},{test:[/windows /i],describe:function(e){var t=i.default.getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i,e),r=i.default.getWindowsVersionName(t);return{name:s.OS_MAP.Windows,version:t,versionName:r}}},{test:[/Macintosh(.*?) FxiOS(.*?)\\//],describe:function(e){var t={name:s.OS_MAP.iOS},r=i.default.getSecondMatch(/(Version\\/)(\\d[\\d.]+)/,e);return r&&(t.version=r),t}},{test:[/macintosh/i],describe:function(e){var t=i.default.getFirstMatch(/mac os x (\\d+(\\.?_?\\d+)+)/i,e).replace(/[_\\s]/g,\".\"),r=i.default.getMacOSVersionName(t),n={name:s.OS_MAP.MacOS,version:t};return r&&(n.versionName=r),n}},{test:[/(ipod|iphone|ipad)/i],describe:function(e){var t=i.default.getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i,e).replace(/[_\\s]/g,\".\");return{name:s.OS_MAP.iOS,version:t}}},{test:function(e){var t=!e.test(/like android/i),r=e.test(/android/i);return t&&r},describe:function(e){var t=i.default.getFirstMatch(/android[\\s/-](\\d+(\\.\\d+)*)/i,e),r=i.default.getAndroidVersionName(t),n={name:s.OS_MAP.Android,version:t};return r&&(n.versionName=r),n}},{test:[/(web|hpw)[o0]s/i],describe:function(e){var t=i.default.getFirstMatch(/(?:web|hpw)[o0]s\\/(\\d+(\\.\\d+)*)/i,e),r={name:s.OS_MAP.WebOS};return t&&t.length&&(r.version=t),r}},{test:[/blackberry|\\bbb\\d+/i,/rim\\stablet/i],describe:function(e){var t=i.default.getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i,e)||i.default.getFirstMatch(/blackberry\\d+\\/(\\d+([_\\s]\\d+)*)/i,e)||i.default.getFirstMatch(/\\bbb(\\d+)/i,e);return{name:s.OS_MAP.BlackBerry,version:t}}},{test:[/bada/i],describe:function(e){var t=i.default.getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.Bada,version:t}}},{test:[/tizen/i],describe:function(e){var t=i.default.getFirstMatch(/tizen[/\\s](\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.Tizen,version:t}}},{test:[/linux/i],describe:function(){return{name:s.OS_MAP.Linux}}},{test:[/CrOS/],describe:function(){return{name:s.OS_MAP.ChromeOS}}},{test:[/PlayStation 4/],describe:function(e){var t=i.default.getFirstMatch(/PlayStation 4[/\\s](\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.PlayStation4,version:t}}}];t.default=a,e.exports=t.default},94:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n},s=r(18);var a=[{test:[/googlebot/i],describe:function(){return{type:\"bot\",vendor:\"Google\"}}},{test:[/huawei/i],describe:function(e){var t=i.default.getFirstMatch(/(can-l01)/i,e)&&\"Nova\",r={type:s.PLATFORMS_MAP.mobile,vendor:\"Huawei\"};return t&&(r.model=t),r}},{test:[/nexus\\s*(?:7|8|9|10).*/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Nexus\"}}},{test:[/ipad/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Apple\",model:\"iPad\"}}},{test:[/Macintosh(.*?) FxiOS(.*?)\\//],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Apple\",model:\"iPad\"}}},{test:[/kftt build/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Amazon\",model:\"Kindle Fire HD 7\"}}},{test:[/silk/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Amazon\"}}},{test:[/tablet(?! pc)/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet}}},{test:function(e){var t=e.test(/ipod|iphone/i),r=e.test(/like (ipod|iphone)/i);return t&&!r},describe:function(e){var t=i.default.getFirstMatch(/(ipod|iphone)/i,e);return{type:s.PLATFORMS_MAP.mobile,vendor:\"Apple\",model:t}}},{test:[/nexus\\s*[0-6].*/i,/galaxy nexus/i],describe:function(){return{type:s.PLATFORMS_MAP.mobile,vendor:\"Nexus\"}}},{test:[/[^-]mobi/i],describe:function(){return{type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return\"blackberry\"===e.getBrowserName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.mobile,vendor:\"BlackBerry\"}}},{test:function(e){return\"bada\"===e.getBrowserName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return\"windows phone\"===e.getBrowserName()},describe:function(){return{type:s.PLATFORMS_MAP.mobile,vendor:\"Microsoft\"}}},{test:function(e){var t=Number(String(e.getOSVersion()).split(\".\")[0]);return\"android\"===e.getOSName(!0)&&t>=3},describe:function(){return{type:s.PLATFORMS_MAP.tablet}}},{test:function(e){return\"android\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return\"macos\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.desktop,vendor:\"Apple\"}}},{test:function(e){return\"windows\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.desktop}}},{test:function(e){return\"linux\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.desktop}}},{test:function(e){return\"playstation 4\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.tv}}},{test:function(e){return\"roku\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.tv}}}];t.default=a,e.exports=t.default},95:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n},s=r(18);var a=[{test:function(e){return\"microsoft edge\"===e.getBrowserName(!0)},describe:function(e){if(/\\sedg\\//i.test(e))return{name:s.ENGINE_MAP.Blink};var t=i.default.getFirstMatch(/edge\\/(\\d+(\\.?_?\\d+)+)/i,e);return{name:s.ENGINE_MAP.EdgeHTML,version:t}}},{test:[/trident/i],describe:function(e){var t={name:s.ENGINE_MAP.Trident},r=i.default.getFirstMatch(/trident\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){return e.test(/presto/i)},describe:function(e){var t={name:s.ENGINE_MAP.Presto},r=i.default.getFirstMatch(/presto\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){var t=e.test(/gecko/i),r=e.test(/like gecko/i);return t&&!r},describe:function(e){var t={name:s.ENGINE_MAP.Gecko},r=i.default.getFirstMatch(/gecko\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/(apple)?webkit\\/537\\.36/i],describe:function(){return{name:s.ENGINE_MAP.Blink}}},{test:[/(apple)?webkit/i],describe:function(e){var t={name:s.ENGINE_MAP.WebKit},r=i.default.getFirstMatch(/webkit\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}}];t.default=a,e.exports=t.default}})}));","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Logger = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst APP_NAME = 'mediasoup-client';\nclass Logger {\n    constructor(prefix) {\n        if (prefix) {\n            this._debug = (0, debug_1.default)(`${APP_NAME}:${prefix}`);\n            this._warn = (0, debug_1.default)(`${APP_NAME}:WARN:${prefix}`);\n            this._error = (0, debug_1.default)(`${APP_NAME}:ERROR:${prefix}`);\n        }\n        else {\n            this._debug = (0, debug_1.default)(APP_NAME);\n            this._warn = (0, debug_1.default)(`${APP_NAME}:WARN`);\n            this._error = (0, debug_1.default)(`${APP_NAME}:ERROR`);\n        }\n        /* eslint-disable no-console */\n        this._debug.log = console.info.bind(console);\n        this._warn.log = console.warn.bind(console);\n        this._error.log = console.error.bind(console);\n        /* eslint-enable no-console */\n    }\n    get debug() {\n        return this._debug;\n    }\n    get warn() {\n        return this._warn;\n    }\n    get error() {\n        return this._error;\n    }\n}\nexports.Logger = Logger;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EnhancedEventEmitter = void 0;\nconst events_1 = require(\"events\");\nconst Logger_1 = require(\"./Logger\");\nconst logger = new Logger_1.Logger('EnhancedEventEmitter');\nclass EnhancedEventEmitter extends events_1.EventEmitter {\n    constructor() {\n        super();\n        this.setMaxListeners(Infinity);\n    }\n    safeEmit(event, ...args) {\n        const numListeners = this.listenerCount(event);\n        try {\n            return this.emit(event, ...args);\n        }\n        catch (error) {\n            logger.error('safeEmit() | event listener threw an error [event:%s]:%o', event, error);\n            return Boolean(numListeners);\n        }\n    }\n    async safeEmitAsPromise(event, ...args) {\n        return new Promise((resolve, reject) => {\n            try {\n                this.emit(event, ...args, resolve, reject);\n            }\n            catch (error) {\n                logger.error('safeEmitAsPromise() | event listener threw an error [event:%s]:%o', event, error);\n                reject(error);\n            }\n        });\n    }\n}\nexports.EnhancedEventEmitter = EnhancedEventEmitter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InvalidStateError = exports.UnsupportedError = void 0;\n/**\n * Error indicating not support for something.\n */\nclass UnsupportedError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'UnsupportedError';\n        if (Error.hasOwnProperty('captureStackTrace')) // Just in V8.\n         {\n            // @ts-ignore\n            Error.captureStackTrace(this, UnsupportedError);\n        }\n        else {\n            this.stack = (new Error(message)).stack;\n        }\n    }\n}\nexports.UnsupportedError = UnsupportedError;\n/**\n * Error produced when calling a method in an invalid state.\n */\nclass InvalidStateError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'InvalidStateError';\n        if (Error.hasOwnProperty('captureStackTrace')) // Just in V8.\n         {\n            // @ts-ignore\n            Error.captureStackTrace(this, InvalidStateError);\n        }\n        else {\n            this.stack = (new Error(message)).stack;\n        }\n    }\n}\nexports.InvalidStateError = InvalidStateError;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateRandomNumber = exports.clone = void 0;\n/**\n * Clones the given data.\n */\nfunction clone(data, defaultValue) {\n    if (typeof data === 'undefined')\n        return defaultValue;\n    return JSON.parse(JSON.stringify(data));\n}\nexports.clone = clone;\n/**\n * Generates a random positive integer.\n */\nfunction generateRandomNumber() {\n    return Math.round(Math.random() * 10000000);\n}\nexports.generateRandomNumber = generateRandomNumber;\n","const debug = require('debug')('h264-profile-level-id');\n\n/* eslint-disable no-console */\ndebug.log = console.info.bind(console);\n/* eslint-enable no-console */\n\nconst ProfileConstrainedBaseline = 1;\nconst ProfileBaseline = 2;\nconst ProfileMain = 3;\nconst ProfileConstrainedHigh = 4;\nconst ProfileHigh = 5;\n\nexports.ProfileConstrainedBaseline = ProfileConstrainedBaseline;\nexports.ProfileBaseline = ProfileBaseline;\nexports.ProfileMain = ProfileMain;\nexports.ProfileConstrainedHigh = ProfileConstrainedHigh;\nexports.ProfileHigh = ProfileHigh;\n\n// All values are equal to ten times the level number, except level 1b which is\n// special.\nconst Level1_b = 0;\nconst Level1 = 10;\nconst Level1_1 = 11;\nconst Level1_2 = 12;\nconst Level1_3 = 13;\nconst Level2 = 20;\nconst Level2_1 = 21;\nconst Level2_2 = 22;\nconst Level3 = 30;\nconst Level3_1 = 31;\nconst Level3_2 = 32;\nconst Level4 = 40;\nconst Level4_1 = 41;\nconst Level4_2 = 42;\nconst Level5 = 50;\nconst Level5_1 = 51;\nconst Level5_2 = 52;\n\nexports.Level1_b = Level1_b;\nexports.Level1 = Level1;\nexports.Level1_1 = Level1_1;\nexports.Level1_2 = Level1_2;\nexports.Level1_3 = Level1_3;\nexports.Level2 = Level2;\nexports.Level2_1 = Level2_1;\nexports.Level2_2 = Level2_2;\nexports.Level3 = Level3;\nexports.Level3_1 = Level3_1;\nexports.Level3_2 = Level3_2;\nexports.Level4 = Level4;\nexports.Level4_1 = Level4_1;\nexports.Level4_2 = Level4_2;\nexports.Level5 = Level5;\nexports.Level5_1 = Level5_1;\nexports.Level5_2 = Level5_2;\n\nclass ProfileLevelId\n{\n\tconstructor(profile, level)\n\t{\n\t\tthis.profile = profile;\n\t\tthis.level = level;\n\t}\n}\n\nexports.ProfileLevelId = ProfileLevelId;\n\n// Default ProfileLevelId.\n//\n// TODO: The default should really be profile Baseline and level 1 according to\n// the spec: https://tools.ietf.org/html/rfc6184#section-8.1. In order to not\n// break backwards compatibility with older versions of WebRTC where external\n// codecs don't have any parameters, use profile ConstrainedBaseline level 3_1\n// instead. This workaround will only be done in an interim period to allow\n// external clients to update their code.\n//\n// http://crbug/webrtc/6337.\nconst DefaultProfileLevelId =\n\tnew ProfileLevelId(ProfileConstrainedBaseline, Level3_1);\n\n// For level_idc=11 and profile_idc=0x42, 0x4D, or 0x58, the constraint set3\n// flag specifies if level 1b or level 1.1 is used.\nconst ConstraintSet3Flag = 0x10;\n\n// Class for matching bit patterns such as \"x1xx0000\" where 'x' is allowed to be\n// either 0 or 1.\nclass BitPattern\n{\n\tconstructor(str)\n\t{\n\t\tthis._mask = ~byteMaskString('x', str);\n\t\tthis._maskedValue = byteMaskString('1', str);\n\t}\n\n\tisMatch(value)\n\t{\n\t\treturn this._maskedValue === (value & this._mask);\n\t}\n}\n\n// Class for converting between profile_idc/profile_iop to Profile.\nclass ProfilePattern\n{\n\tconstructor(profile_idc, profile_iop, profile)\n\t{\n\t\tthis.profile_idc = profile_idc;\n\t\tthis.profile_iop = profile_iop;\n\t\tthis.profile = profile;\n\t}\n}\n\n// This is from https://tools.ietf.org/html/rfc6184#section-8.1.\nconst ProfilePatterns =\n[\n\tnew ProfilePattern(0x42, new BitPattern('x1xx0000'), ProfileConstrainedBaseline),\n\tnew ProfilePattern(0x4D, new BitPattern('1xxx0000'), ProfileConstrainedBaseline),\n\tnew ProfilePattern(0x58, new BitPattern('11xx0000'), ProfileConstrainedBaseline),\n\tnew ProfilePattern(0x42, new BitPattern('x0xx0000'), ProfileBaseline),\n\tnew ProfilePattern(0x58, new BitPattern('10xx0000'), ProfileBaseline),\n\tnew ProfilePattern(0x4D, new BitPattern('0x0x0000'), ProfileMain),\n\tnew ProfilePattern(0x64, new BitPattern('00000000'), ProfileHigh),\n\tnew ProfilePattern(0x64, new BitPattern('00001100'), ProfileConstrainedHigh)\n];\n\n/**\n * Parse profile level id that is represented as a string of 3 hex bytes.\n * Nothing will be returned if the string is not a recognized H264 profile\n * level id.\n *\n * @param {String} str - profile-level-id value as a string of 3 hex bytes.\n *\n * @returns {ProfileLevelId}\n */\nexports.parseProfileLevelId = function(str)\n{\n\t// The string should consist of 3 bytes in hexadecimal format.\n\tif (typeof str !== 'string' || str.length !== 6)\n\t\treturn null;\n\n\tconst profile_level_id_numeric = parseInt(str, 16);\n\n\tif (profile_level_id_numeric === 0)\n\t\treturn null;\n\n\t// Separate into three bytes.\n\tconst level_idc = profile_level_id_numeric & 0xFF;\n\tconst profile_iop = (profile_level_id_numeric >> 8) & 0xFF;\n\tconst profile_idc = (profile_level_id_numeric >> 16) & 0xFF;\n\n\t// Parse level based on level_idc and constraint set 3 flag.\n\tlet level;\n\n\tswitch (level_idc)\n\t{\n\t\tcase Level1_1:\n\t\t{\n\t\t\tlevel = (profile_iop & ConstraintSet3Flag) !== 0 ? Level1_b : Level1_1;\n\t\t\tbreak;\n\t\t}\n\t\tcase Level1:\n\t\tcase Level1_2:\n\t\tcase Level1_3:\n\t\tcase Level2:\n\t\tcase Level2_1:\n\t\tcase Level2_2:\n\t\tcase Level3:\n\t\tcase Level3_1:\n\t\tcase Level3_2:\n\t\tcase Level4:\n\t\tcase Level4_1:\n\t\tcase Level4_2:\n\t\tcase Level5:\n\t\tcase Level5_1:\n\t\tcase Level5_2:\n\t\t{\n\t\t\tlevel = level_idc;\n\t\t\tbreak;\n\t\t}\n\t\t// Unrecognized level_idc.\n\t\tdefault:\n\t\t{\n\t\t\tdebug('parseProfileLevelId() | unrecognized level_idc:%s', level_idc);\n\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// Parse profile_idc/profile_iop into a Profile enum.\n\tfor (const pattern of ProfilePatterns)\n\t{\n\t\tif (\n\t\t\tprofile_idc === pattern.profile_idc &&\n\t\t\tpattern.profile_iop.isMatch(profile_iop)\n\t\t)\n\t\t{\n\t\t\treturn new ProfileLevelId(pattern.profile, level);\n\t\t}\n\t}\n\n\tdebug('parseProfileLevelId() | unrecognized profile_idc/profile_iop combination');\n\n\treturn null;\n};\n\n/**\n * Returns canonical string representation as three hex bytes of the profile\n * level id, or returns nothing for invalid profile level ids.\n *\n * @param {ProfileLevelId} profile_level_id\n *\n * @returns {String}\n */\nexports.profileLevelIdToString = function(profile_level_id)\n{\n\t// Handle special case level == 1b.\n\tif (profile_level_id.level == Level1_b)\n\t{\n\t\tswitch (profile_level_id.profile)\n\t\t{\n\t\t\tcase ProfileConstrainedBaseline:\n\t\t\t{\n\t\t\t\treturn '42f00b';\n\t\t\t}\n\t\t\tcase ProfileBaseline:\n\t\t\t{\n\t\t\t\treturn '42100b';\n\t\t\t}\n\t\t\tcase ProfileMain:\n\t\t\t{\n\t\t\t\treturn '4d100b';\n\t\t\t}\n\t\t\t// Level 1_b is not allowed for other profiles.\n\t\t\tdefault:\n\t\t\t{\n\t\t\t\tdebug(\n\t\t\t\t\t'profileLevelIdToString() | Level 1_b not is allowed for profile:%s',\n\t\t\t\t\tprofile_level_id.profile);\n\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\tlet profile_idc_iop_string;\n\n\tswitch (profile_level_id.profile)\n\t{\n\t\tcase ProfileConstrainedBaseline:\n\t\t{\n\t\t\tprofile_idc_iop_string = '42e0';\n\t\t\tbreak;\n\t\t}\n\t\tcase ProfileBaseline:\n\t\t{\n\t\t\tprofile_idc_iop_string = '4200';\n\t\t\tbreak;\n\t\t}\n\t\tcase ProfileMain:\n\t\t{\n\t\t\tprofile_idc_iop_string = '4d00';\n\t\t\tbreak;\n\t\t}\n\t\tcase ProfileConstrainedHigh:\n\t\t{\n\t\t\tprofile_idc_iop_string = '640c';\n\t\t\tbreak;\n\t\t}\n\t\tcase ProfileHigh:\n\t\t{\n\t\t\tprofile_idc_iop_string = '6400';\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t{\n\t\t\tdebug(\n\t\t\t\t'profileLevelIdToString() | unrecognized profile:%s',\n\t\t\t\tprofile_level_id.profile);\n\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tlet levelStr = (profile_level_id.level).toString(16);\n\n\tif (levelStr.length === 1)\n\t\tlevelStr = `0${levelStr}`;\n\n\treturn `${profile_idc_iop_string}${levelStr}`;\n};\n\n/**\n * Parse profile level id that is represented as a string of 3 hex bytes\n * contained in an SDP key-value map. A default profile level id will be\n * returned if the profile-level-id key is missing. Nothing will be returned if\n * the key is present but the string is invalid.\n *\n * @param {Object} [params={}] - Codec parameters object.\n *\n * @returns {ProfileLevelId}\n */\nexports.parseSdpProfileLevelId = function(params = {})\n{\n\tconst profile_level_id = params['profile-level-id'];\n\n\treturn !profile_level_id\n\t\t? DefaultProfileLevelId\n\t\t: exports.parseProfileLevelId(profile_level_id);\n};\n\n/**\n * Returns true if the parameters have the same H264 profile, i.e. the same\n * H264 profile (Baseline, High, etc).\n *\n * @param {Object} [params1={}] - Codec parameters object.\n * @param {Object} [params2={}] - Codec parameters object.\n *\n * @returns {Boolean}\n */\nexports.isSameProfile = function(params1 = {}, params2 = {})\n{\n\tconst profile_level_id_1 = exports.parseSdpProfileLevelId(params1);\n\tconst profile_level_id_2 = exports.parseSdpProfileLevelId(params2);\n\n\t// Compare H264 profiles, but not levels.\n\treturn Boolean(\n\t\tprofile_level_id_1 &&\n\t\tprofile_level_id_2 &&\n\t\tprofile_level_id_1.profile === profile_level_id_2.profile\n\t);\n};\n\n/**\n * Generate codec parameters that will be used as answer in an SDP negotiation\n * based on local supported parameters and remote offered parameters. Both\n * local_supported_params and remote_offered_params represent sendrecv media\n * descriptions, i.e they are a mix of both encode and decode capabilities. In\n * theory, when the profile in local_supported_params represent a strict superset\n * of the profile in remote_offered_params, we could limit the profile in the\n * answer to the profile in remote_offered_params.\n *\n * However, to simplify the code, each supported H264 profile should be listed\n * explicitly in the list of local supported codecs, even if they are redundant.\n * Then each local codec in the list should be tested one at a time against the\n * remote codec, and only when the profiles are equal should this function be\n * called. Therefore, this function does not need to handle profile intersection,\n * and the profile of local_supported_params and remote_offered_params must be\n * equal before calling this function. The parameters that are used when\n * negotiating are the level part of profile-level-id and level-asymmetry-allowed.\n *\n * @param {Object} [local_supported_params={}]\n * @param {Object} [remote_offered_params={}]\n *\n * @returns {String} Canonical string representation as three hex bytes of the\n *   profile level id, or null if no one of the params have profile-level-id.\n *\n * @throws {TypeError} If Profile mismatch or invalid params.\n */\nexports.generateProfileLevelIdForAnswer = function(\n\tlocal_supported_params = {},\n\tremote_offered_params = {}\n)\n{\n\t// If both local and remote params do not contain profile-level-id, they are\n\t// both using the default profile. In this case, don't return anything.\n\tif (\n\t\t!local_supported_params['profile-level-id'] &&\n\t\t!remote_offered_params['profile-level-id']\n\t)\n\t{\n\t\tdebug(\n\t\t\t'generateProfileLevelIdForAnswer() | no profile-level-id in local and remote params');\n\n\t\treturn null;\n\t}\n\n\t// Parse profile-level-ids.\n\tconst local_profile_level_id =\n\t\texports.parseSdpProfileLevelId(local_supported_params);\n\tconst remote_profile_level_id =\n\t\texports.parseSdpProfileLevelId(remote_offered_params);\n\n\t// The local and remote codec must have valid and equal H264 Profiles.\n\tif (!local_profile_level_id)\n\t\tthrow new TypeError('invalid local_profile_level_id');\n\n\tif (!remote_profile_level_id)\n\t\tthrow new TypeError('invalid remote_profile_level_id');\n\n\tif (local_profile_level_id.profile !== remote_profile_level_id.profile)\n\t\tthrow new TypeError('H264 Profile mismatch');\n\n\t// Parse level information.\n\tconst level_asymmetry_allowed = (\n\t\tisLevelAsymmetryAllowed(local_supported_params) &&\n\t\tisLevelAsymmetryAllowed(remote_offered_params)\n\t);\n\n\tconst local_level = local_profile_level_id.level;\n\tconst remote_level = remote_profile_level_id.level;\n\tconst min_level = minLevel(local_level, remote_level);\n\n\t// Determine answer level. When level asymmetry is not allowed, level upgrade\n\t// is not allowed, i.e., the level in the answer must be equal to or lower\n\t// than the level in the offer.\n\tconst answer_level = level_asymmetry_allowed ? local_level : min_level;\n\n\tdebug(\n\t\t'generateProfileLevelIdForAnswer() | result: [profile:%s, level:%s]',\n\t\tlocal_profile_level_id.profile, answer_level);\n\n\t// Return the resulting profile-level-id for the answer parameters.\n\treturn exports.profileLevelIdToString(\n\t\tnew ProfileLevelId(local_profile_level_id.profile, answer_level));\n};\n\n// Convert a string of 8 characters into a byte where the positions containing\n// character c will have their bit set. For example, c = 'x', str = \"x1xx0000\"\n// will return 0b10110000.\nfunction byteMaskString(c, str)\n{\n\treturn (\n\t\t((str[0] === c) << 7) | ((str[1] === c) << 6) | ((str[2] === c) << 5) |\n\t\t((str[3] === c) << 4)\t| ((str[4] === c) << 3)\t| ((str[5] === c) << 2)\t|\n\t\t((str[6] === c) << 1)\t| ((str[7] === c) << 0)\n\t);\n}\n\n// Compare H264 levels and handle the level 1b case.\nfunction isLessLevel(a, b)\n{\n\tif (a === Level1_b)\n\t\treturn b !== Level1 && b !== Level1_b;\n\n\tif (b === Level1_b)\n\t\treturn a !== Level1;\n\n\treturn a < b;\n}\n\nfunction minLevel(a, b)\n{\n\treturn isLessLevel(a, b) ? a : b;\n}\n\nfunction isLevelAsymmetryAllowed(params = {})\n{\n\tconst level_asymmetry_allowed = params['level-asymmetry-allowed'];\n\n\treturn (\n\t\tlevel_asymmetry_allowed === 1 ||\n\t\tlevel_asymmetry_allowed === '1'\n\t);\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.canReceive = exports.canSend = exports.generateProbatorRtpParameters = exports.reduceCodecs = exports.getSendingRemoteRtpParameters = exports.getSendingRtpParameters = exports.getRecvRtpCapabilities = exports.getExtendedRtpCapabilities = exports.validateSctpStreamParameters = exports.validateSctpParameters = exports.validateNumSctpStreams = exports.validateSctpCapabilities = exports.validateRtcpParameters = exports.validateRtpEncodingParameters = exports.validateRtpHeaderExtensionParameters = exports.validateRtpCodecParameters = exports.validateRtpParameters = exports.validateRtpHeaderExtension = exports.validateRtcpFeedback = exports.validateRtpCodecCapability = exports.validateRtpCapabilities = void 0;\nconst h264 = __importStar(require(\"h264-profile-level-id\"));\nconst utils = __importStar(require(\"./utils\"));\nconst RTP_PROBATOR_MID = 'probator';\nconst RTP_PROBATOR_SSRC = 1234;\nconst RTP_PROBATOR_CODEC_PAYLOAD_TYPE = 127;\n/**\n * Validates RtpCapabilities. It may modify given data by adding missing\n * fields with default values.\n * It throws if invalid.\n */\nfunction validateRtpCapabilities(caps) {\n    if (typeof caps !== 'object')\n        throw new TypeError('caps is not an object');\n    // codecs is optional. If unset, fill with an empty array.\n    if (caps.codecs && !Array.isArray(caps.codecs))\n        throw new TypeError('caps.codecs is not an array');\n    else if (!caps.codecs)\n        caps.codecs = [];\n    for (const codec of caps.codecs) {\n        validateRtpCodecCapability(codec);\n    }\n    // headerExtensions is optional. If unset, fill with an empty array.\n    if (caps.headerExtensions && !Array.isArray(caps.headerExtensions))\n        throw new TypeError('caps.headerExtensions is not an array');\n    else if (!caps.headerExtensions)\n        caps.headerExtensions = [];\n    for (const ext of caps.headerExtensions) {\n        validateRtpHeaderExtension(ext);\n    }\n}\nexports.validateRtpCapabilities = validateRtpCapabilities;\n/**\n * Validates RtpCodecCapability. It may modify given data by adding missing\n * fields with default values.\n * It throws if invalid.\n */\nfunction validateRtpCodecCapability(codec) {\n    const MimeTypeRegex = new RegExp('^(audio|video)/(.+)', 'i');\n    if (typeof codec !== 'object')\n        throw new TypeError('codec is not an object');\n    // mimeType is mandatory.\n    if (!codec.mimeType || typeof codec.mimeType !== 'string')\n        throw new TypeError('missing codec.mimeType');\n    const mimeTypeMatch = MimeTypeRegex.exec(codec.mimeType);\n    if (!mimeTypeMatch)\n        throw new TypeError('invalid codec.mimeType');\n    // Just override kind with media component of mimeType.\n    codec.kind = mimeTypeMatch[1].toLowerCase();\n    // preferredPayloadType is optional.\n    if (codec.preferredPayloadType && typeof codec.preferredPayloadType !== 'number')\n        throw new TypeError('invalid codec.preferredPayloadType');\n    // clockRate is mandatory.\n    if (typeof codec.clockRate !== 'number')\n        throw new TypeError('missing codec.clockRate');\n    // channels is optional. If unset, set it to 1 (just if audio).\n    if (codec.kind === 'audio') {\n        if (typeof codec.channels !== 'number')\n            codec.channels = 1;\n    }\n    else {\n        delete codec.channels;\n    }\n    // parameters is optional. If unset, set it to an empty object.\n    if (!codec.parameters || typeof codec.parameters !== 'object')\n        codec.parameters = {};\n    for (const key of Object.keys(codec.parameters)) {\n        let value = codec.parameters[key];\n        if (value === undefined) {\n            codec.parameters[key] = '';\n            value = '';\n        }\n        if (typeof value !== 'string' && typeof value !== 'number') {\n            throw new TypeError(`invalid codec parameter [key:${key}s, value:${value}]`);\n        }\n        // Specific parameters validation.\n        if (key === 'apt') {\n            if (typeof value !== 'number')\n                throw new TypeError('invalid codec apt parameter');\n        }\n    }\n    // rtcpFeedback is optional. If unset, set it to an empty array.\n    if (!codec.rtcpFeedback || !Array.isArray(codec.rtcpFeedback))\n        codec.rtcpFeedback = [];\n    for (const fb of codec.rtcpFeedback) {\n        validateRtcpFeedback(fb);\n    }\n}\nexports.validateRtpCodecCapability = validateRtpCodecCapability;\n/**\n * Validates RtcpFeedback. It may modify given data by adding missing\n * fields with default values.\n * It throws if invalid.\n */\nfunction validateRtcpFeedback(fb) {\n    if (typeof fb !== 'object')\n        throw new TypeError('fb is not an object');\n    // type is mandatory.\n    if (!fb.type || typeof fb.type !== 'string')\n        throw new TypeError('missing fb.type');\n    // parameter is optional. If unset set it to an empty string.\n    if (!fb.parameter || typeof fb.parameter !== 'string')\n        fb.parameter = '';\n}\nexports.validateRtcpFeedback = validateRtcpFeedback;\n/**\n * Validates RtpHeaderExtension. It may modify given data by adding missing\n * fields with default values.\n * It throws if invalid.\n */\nfunction validateRtpHeaderExtension(ext) {\n    if (typeof ext !== 'object')\n        throw new TypeError('ext is not an object');\n    // kind is mandatory.\n    if (ext.kind !== 'audio' && ext.kind !== 'video')\n        throw new TypeError('invalid ext.kind');\n    // uri is mandatory.\n    if (!ext.uri || typeof ext.uri !== 'string')\n        throw new TypeError('missing ext.uri');\n    // preferredId is mandatory.\n    if (typeof ext.preferredId !== 'number')\n        throw new TypeError('missing ext.preferredId');\n    // preferredEncrypt is optional. If unset set it to false.\n    if (ext.preferredEncrypt && typeof ext.preferredEncrypt !== 'boolean')\n        throw new TypeError('invalid ext.preferredEncrypt');\n    else if (!ext.preferredEncrypt)\n        ext.preferredEncrypt = false;\n    // direction is optional. If unset set it to sendrecv.\n    if (ext.direction && typeof ext.direction !== 'string')\n        throw new TypeError('invalid ext.direction');\n    else if (!ext.direction)\n        ext.direction = 'sendrecv';\n}\nexports.validateRtpHeaderExtension = validateRtpHeaderExtension;\n/**\n * Validates RtpParameters. It may modify given data by adding missing\n * fields with default values.\n * It throws if invalid.\n */\nfunction validateRtpParameters(params) {\n    if (typeof params !== 'object')\n        throw new TypeError('params is not an object');\n    // mid is optional.\n    if (params.mid && typeof params.mid !== 'string')\n        throw new TypeError('params.mid is not a string');\n    // codecs is mandatory.\n    if (!Array.isArray(params.codecs))\n        throw new TypeError('missing params.codecs');\n    for (const codec of params.codecs) {\n        validateRtpCodecParameters(codec);\n    }\n    // headerExtensions is optional. If unset, fill with an empty array.\n    if (params.headerExtensions && !Array.isArray(params.headerExtensions))\n        throw new TypeError('params.headerExtensions is not an array');\n    else if (!params.headerExtensions)\n        params.headerExtensions = [];\n    for (const ext of params.headerExtensions) {\n        validateRtpHeaderExtensionParameters(ext);\n    }\n    // encodings is optional. If unset, fill with an empty array.\n    if (params.encodings && !Array.isArray(params.encodings))\n        throw new TypeError('params.encodings is not an array');\n    else if (!params.encodings)\n        params.encodings = [];\n    for (const encoding of params.encodings) {\n        validateRtpEncodingParameters(encoding);\n    }\n    // rtcp is optional. If unset, fill with an empty object.\n    if (params.rtcp && typeof params.rtcp !== 'object')\n        throw new TypeError('params.rtcp is not an object');\n    else if (!params.rtcp)\n        params.rtcp = {};\n    validateRtcpParameters(params.rtcp);\n}\nexports.validateRtpParameters = validateRtpParameters;\n/**\n * Validates RtpCodecParameters. It may modify given data by adding missing\n * fields with default values.\n * It throws if invalid.\n */\nfunction validateRtpCodecParameters(codec) {\n    const MimeTypeRegex = new RegExp('^(audio|video)/(.+)', 'i');\n    if (typeof codec !== 'object')\n        throw new TypeError('codec is not an object');\n    // mimeType is mandatory.\n    if (!codec.mimeType || typeof codec.mimeType !== 'string')\n        throw new TypeError('missing codec.mimeType');\n    const mimeTypeMatch = MimeTypeRegex.exec(codec.mimeType);\n    if (!mimeTypeMatch)\n        throw new TypeError('invalid codec.mimeType');\n    // payloadType is mandatory.\n    if (typeof codec.payloadType !== 'number')\n        throw new TypeError('missing codec.payloadType');\n    // clockRate is mandatory.\n    if (typeof codec.clockRate !== 'number')\n        throw new TypeError('missing codec.clockRate');\n    const kind = mimeTypeMatch[1].toLowerCase();\n    // channels is optional. If unset, set it to 1 (just if audio).\n    if (kind === 'audio') {\n        if (typeof codec.channels !== 'number')\n            codec.channels = 1;\n    }\n    else {\n        delete codec.channels;\n    }\n    // parameters is optional. If unset, set it to an empty object.\n    if (!codec.parameters || typeof codec.parameters !== 'object')\n        codec.parameters = {};\n    for (const key of Object.keys(codec.parameters)) {\n        let value = codec.parameters[key];\n        if (value === undefined) {\n            codec.parameters[key] = '';\n            value = '';\n        }\n        if (typeof value !== 'string' && typeof value !== 'number') {\n            throw new TypeError(`invalid codec parameter [key:${key}s, value:${value}]`);\n        }\n        // Specific parameters validation.\n        if (key === 'apt') {\n            if (typeof value !== 'number')\n                throw new TypeError('invalid codec apt parameter');\n        }\n    }\n    // rtcpFeedback is optional. If unset, set it to an empty array.\n    if (!codec.rtcpFeedback || !Array.isArray(codec.rtcpFeedback))\n        codec.rtcpFeedback = [];\n    for (const fb of codec.rtcpFeedback) {\n        validateRtcpFeedback(fb);\n    }\n}\nexports.validateRtpCodecParameters = validateRtpCodecParameters;\n/**\n * Validates RtpHeaderExtensionParameteters. It may modify given data by adding missing\n * fields with default values.\n * It throws if invalid.\n */\nfunction validateRtpHeaderExtensionParameters(ext) {\n    if (typeof ext !== 'object')\n        throw new TypeError('ext is not an object');\n    // uri is mandatory.\n    if (!ext.uri || typeof ext.uri !== 'string')\n        throw new TypeError('missing ext.uri');\n    // id is mandatory.\n    if (typeof ext.id !== 'number')\n        throw new TypeError('missing ext.id');\n    // encrypt is optional. If unset set it to false.\n    if (ext.encrypt && typeof ext.encrypt !== 'boolean')\n        throw new TypeError('invalid ext.encrypt');\n    else if (!ext.encrypt)\n        ext.encrypt = false;\n    // parameters is optional. If unset, set it to an empty object.\n    if (!ext.parameters || typeof ext.parameters !== 'object')\n        ext.parameters = {};\n    for (const key of Object.keys(ext.parameters)) {\n        let value = ext.parameters[key];\n        if (value === undefined) {\n            ext.parameters[key] = '';\n            value = '';\n        }\n        if (typeof value !== 'string' && typeof value !== 'number')\n            throw new TypeError('invalid header extension parameter');\n    }\n}\nexports.validateRtpHeaderExtensionParameters = validateRtpHeaderExtensionParameters;\n/**\n * Validates RtpEncodingParameters. It may modify given data by adding missing\n * fields with default values.\n * It throws if invalid.\n */\nfunction validateRtpEncodingParameters(encoding) {\n    if (typeof encoding !== 'object')\n        throw new TypeError('encoding is not an object');\n    // ssrc is optional.\n    if (encoding.ssrc && typeof encoding.ssrc !== 'number')\n        throw new TypeError('invalid encoding.ssrc');\n    // rid is optional.\n    if (encoding.rid && typeof encoding.rid !== 'string')\n        throw new TypeError('invalid encoding.rid');\n    // rtx is optional.\n    if (encoding.rtx && typeof encoding.rtx !== 'object') {\n        throw new TypeError('invalid encoding.rtx');\n    }\n    else if (encoding.rtx) {\n        // RTX ssrc is mandatory if rtx is present.\n        if (typeof encoding.rtx.ssrc !== 'number')\n            throw new TypeError('missing encoding.rtx.ssrc');\n    }\n    // dtx is optional. If unset set it to false.\n    if (!encoding.dtx || typeof encoding.dtx !== 'boolean')\n        encoding.dtx = false;\n    // scalabilityMode is optional.\n    if (encoding.scalabilityMode && typeof encoding.scalabilityMode !== 'string')\n        throw new TypeError('invalid encoding.scalabilityMode');\n}\nexports.validateRtpEncodingParameters = validateRtpEncodingParameters;\n/**\n * Validates RtcpParameters. It may modify given data by adding missing\n * fields with default values.\n * It throws if invalid.\n */\nfunction validateRtcpParameters(rtcp) {\n    if (typeof rtcp !== 'object')\n        throw new TypeError('rtcp is not an object');\n    // cname is optional.\n    if (rtcp.cname && typeof rtcp.cname !== 'string')\n        throw new TypeError('invalid rtcp.cname');\n    // reducedSize is optional. If unset set it to true.\n    if (!rtcp.reducedSize || typeof rtcp.reducedSize !== 'boolean')\n        rtcp.reducedSize = true;\n}\nexports.validateRtcpParameters = validateRtcpParameters;\n/**\n * Validates SctpCapabilities. It may modify given data by adding missing\n * fields with default values.\n * It throws if invalid.\n */\nfunction validateSctpCapabilities(caps) {\n    if (typeof caps !== 'object')\n        throw new TypeError('caps is not an object');\n    // numStreams is mandatory.\n    if (!caps.numStreams || typeof caps.numStreams !== 'object')\n        throw new TypeError('missing caps.numStreams');\n    validateNumSctpStreams(caps.numStreams);\n}\nexports.validateSctpCapabilities = validateSctpCapabilities;\n/**\n * Validates NumSctpStreams. It may modify given data by adding missing\n * fields with default values.\n * It throws if invalid.\n */\nfunction validateNumSctpStreams(numStreams) {\n    if (typeof numStreams !== 'object')\n        throw new TypeError('numStreams is not an object');\n    // OS is mandatory.\n    if (typeof numStreams.OS !== 'number')\n        throw new TypeError('missing numStreams.OS');\n    // MIS is mandatory.\n    if (typeof numStreams.MIS !== 'number')\n        throw new TypeError('missing numStreams.MIS');\n}\nexports.validateNumSctpStreams = validateNumSctpStreams;\n/**\n * Validates SctpParameters. It may modify given data by adding missing\n * fields with default values.\n * It throws if invalid.\n */\nfunction validateSctpParameters(params) {\n    if (typeof params !== 'object')\n        throw new TypeError('params is not an object');\n    // port is mandatory.\n    if (typeof params.port !== 'number')\n        throw new TypeError('missing params.port');\n    // OS is mandatory.\n    if (typeof params.OS !== 'number')\n        throw new TypeError('missing params.OS');\n    // MIS is mandatory.\n    if (typeof params.MIS !== 'number')\n        throw new TypeError('missing params.MIS');\n    // maxMessageSize is mandatory.\n    if (typeof params.maxMessageSize !== 'number')\n        throw new TypeError('missing params.maxMessageSize');\n}\nexports.validateSctpParameters = validateSctpParameters;\n/**\n * Validates SctpStreamParameters. It may modify given data by adding missing\n * fields with default values.\n * It throws if invalid.\n */\nfunction validateSctpStreamParameters(params) {\n    if (typeof params !== 'object')\n        throw new TypeError('params is not an object');\n    // streamId is mandatory.\n    if (typeof params.streamId !== 'number')\n        throw new TypeError('missing params.streamId');\n    // ordered is optional.\n    let orderedGiven = false;\n    if (typeof params.ordered === 'boolean')\n        orderedGiven = true;\n    else\n        params.ordered = true;\n    // maxPacketLifeTime is optional.\n    if (params.maxPacketLifeTime && typeof params.maxPacketLifeTime !== 'number')\n        throw new TypeError('invalid params.maxPacketLifeTime');\n    // maxRetransmits is optional.\n    if (params.maxRetransmits && typeof params.maxRetransmits !== 'number')\n        throw new TypeError('invalid params.maxRetransmits');\n    if (params.maxPacketLifeTime && params.maxRetransmits)\n        throw new TypeError('cannot provide both maxPacketLifeTime and maxRetransmits');\n    if (orderedGiven &&\n        params.ordered &&\n        (params.maxPacketLifeTime || params.maxRetransmits)) {\n        throw new TypeError('cannot be ordered with maxPacketLifeTime or maxRetransmits');\n    }\n    else if (!orderedGiven && (params.maxPacketLifeTime || params.maxRetransmits)) {\n        params.ordered = false;\n    }\n    // label is optional.\n    if (params.label && typeof params.label !== 'string')\n        throw new TypeError('invalid params.label');\n    // protocol is optional.\n    if (params.protocol && typeof params.protocol !== 'string')\n        throw new TypeError('invalid params.protocol');\n}\nexports.validateSctpStreamParameters = validateSctpStreamParameters;\n/**\n * Generate extended RTP capabilities for sending and receiving.\n */\nfunction getExtendedRtpCapabilities(localCaps, remoteCaps) {\n    const extendedRtpCapabilities = {\n        codecs: [],\n        headerExtensions: []\n    };\n    // Match media codecs and keep the order preferred by remoteCaps.\n    for (const remoteCodec of remoteCaps.codecs || []) {\n        if (isRtxCodec(remoteCodec))\n            continue;\n        const matchingLocalCodec = (localCaps.codecs || [])\n            .find((localCodec) => (matchCodecs(localCodec, remoteCodec, { strict: true, modify: true })));\n        if (!matchingLocalCodec)\n            continue;\n        const extendedCodec = {\n            mimeType: matchingLocalCodec.mimeType,\n            kind: matchingLocalCodec.kind,\n            clockRate: matchingLocalCodec.clockRate,\n            channels: matchingLocalCodec.channels,\n            localPayloadType: matchingLocalCodec.preferredPayloadType,\n            localRtxPayloadType: undefined,\n            remotePayloadType: remoteCodec.preferredPayloadType,\n            remoteRtxPayloadType: undefined,\n            localParameters: matchingLocalCodec.parameters,\n            remoteParameters: remoteCodec.parameters,\n            rtcpFeedback: reduceRtcpFeedback(matchingLocalCodec, remoteCodec)\n        };\n        extendedRtpCapabilities.codecs.push(extendedCodec);\n    }\n    // Match RTX codecs.\n    for (const extendedCodec of extendedRtpCapabilities.codecs) {\n        const matchingLocalRtxCodec = localCaps.codecs\n            .find((localCodec) => (isRtxCodec(localCodec) &&\n            localCodec.parameters.apt === extendedCodec.localPayloadType));\n        const matchingRemoteRtxCodec = remoteCaps.codecs\n            .find((remoteCodec) => (isRtxCodec(remoteCodec) &&\n            remoteCodec.parameters.apt === extendedCodec.remotePayloadType));\n        if (matchingLocalRtxCodec && matchingRemoteRtxCodec) {\n            extendedCodec.localRtxPayloadType = matchingLocalRtxCodec.preferredPayloadType;\n            extendedCodec.remoteRtxPayloadType = matchingRemoteRtxCodec.preferredPayloadType;\n        }\n    }\n    // Match header extensions.\n    for (const remoteExt of remoteCaps.headerExtensions) {\n        const matchingLocalExt = localCaps.headerExtensions\n            .find((localExt) => (matchHeaderExtensions(localExt, remoteExt)));\n        if (!matchingLocalExt)\n            continue;\n        const extendedExt = {\n            kind: remoteExt.kind,\n            uri: remoteExt.uri,\n            sendId: matchingLocalExt.preferredId,\n            recvId: remoteExt.preferredId,\n            encrypt: matchingLocalExt.preferredEncrypt,\n            direction: 'sendrecv'\n        };\n        switch (remoteExt.direction) {\n            case 'sendrecv':\n                extendedExt.direction = 'sendrecv';\n                break;\n            case 'recvonly':\n                extendedExt.direction = 'sendonly';\n                break;\n            case 'sendonly':\n                extendedExt.direction = 'recvonly';\n                break;\n            case 'inactive':\n                extendedExt.direction = 'inactive';\n                break;\n        }\n        extendedRtpCapabilities.headerExtensions.push(extendedExt);\n    }\n    return extendedRtpCapabilities;\n}\nexports.getExtendedRtpCapabilities = getExtendedRtpCapabilities;\n/**\n * Generate RTP capabilities for receiving media based on the given extended\n * RTP capabilities.\n */\nfunction getRecvRtpCapabilities(extendedRtpCapabilities) {\n    const rtpCapabilities = {\n        codecs: [],\n        headerExtensions: []\n    };\n    for (const extendedCodec of extendedRtpCapabilities.codecs) {\n        const codec = {\n            mimeType: extendedCodec.mimeType,\n            kind: extendedCodec.kind,\n            preferredPayloadType: extendedCodec.remotePayloadType,\n            clockRate: extendedCodec.clockRate,\n            channels: extendedCodec.channels,\n            parameters: extendedCodec.localParameters,\n            rtcpFeedback: extendedCodec.rtcpFeedback\n        };\n        rtpCapabilities.codecs.push(codec);\n        // Add RTX codec.\n        if (!extendedCodec.remoteRtxPayloadType)\n            continue;\n        const rtxCodec = {\n            mimeType: `${extendedCodec.kind}/rtx`,\n            kind: extendedCodec.kind,\n            preferredPayloadType: extendedCodec.remoteRtxPayloadType,\n            clockRate: extendedCodec.clockRate,\n            parameters: {\n                apt: extendedCodec.remotePayloadType\n            },\n            rtcpFeedback: []\n        };\n        rtpCapabilities.codecs.push(rtxCodec);\n        // TODO: In the future, we need to add FEC, CN, etc, codecs.\n    }\n    for (const extendedExtension of extendedRtpCapabilities.headerExtensions) {\n        // Ignore RTP extensions not valid for receiving.\n        if (extendedExtension.direction !== 'sendrecv' &&\n            extendedExtension.direction !== 'recvonly') {\n            continue;\n        }\n        const ext = {\n            kind: extendedExtension.kind,\n            uri: extendedExtension.uri,\n            preferredId: extendedExtension.recvId,\n            preferredEncrypt: extendedExtension.encrypt,\n            direction: extendedExtension.direction\n        };\n        rtpCapabilities.headerExtensions.push(ext);\n    }\n    return rtpCapabilities;\n}\nexports.getRecvRtpCapabilities = getRecvRtpCapabilities;\n/**\n * Generate RTP parameters of the given kind for sending media.\n * NOTE: mid, encodings and rtcp fields are left empty.\n */\nfunction getSendingRtpParameters(kind, extendedRtpCapabilities) {\n    const rtpParameters = {\n        mid: undefined,\n        codecs: [],\n        headerExtensions: [],\n        encodings: [],\n        rtcp: {}\n    };\n    for (const extendedCodec of extendedRtpCapabilities.codecs) {\n        if (extendedCodec.kind !== kind)\n            continue;\n        const codec = {\n            mimeType: extendedCodec.mimeType,\n            payloadType: extendedCodec.localPayloadType,\n            clockRate: extendedCodec.clockRate,\n            channels: extendedCodec.channels,\n            parameters: extendedCodec.localParameters,\n            rtcpFeedback: extendedCodec.rtcpFeedback\n        };\n        rtpParameters.codecs.push(codec);\n        // Add RTX codec.\n        if (extendedCodec.localRtxPayloadType) {\n            const rtxCodec = {\n                mimeType: `${extendedCodec.kind}/rtx`,\n                payloadType: extendedCodec.localRtxPayloadType,\n                clockRate: extendedCodec.clockRate,\n                parameters: {\n                    apt: extendedCodec.localPayloadType\n                },\n                rtcpFeedback: []\n            };\n            rtpParameters.codecs.push(rtxCodec);\n        }\n    }\n    for (const extendedExtension of extendedRtpCapabilities.headerExtensions) {\n        // Ignore RTP extensions of a different kind and those not valid for sending.\n        if ((extendedExtension.kind && extendedExtension.kind !== kind) ||\n            (extendedExtension.direction !== 'sendrecv' &&\n                extendedExtension.direction !== 'sendonly')) {\n            continue;\n        }\n        const ext = {\n            uri: extendedExtension.uri,\n            id: extendedExtension.sendId,\n            encrypt: extendedExtension.encrypt,\n            parameters: {}\n        };\n        rtpParameters.headerExtensions.push(ext);\n    }\n    return rtpParameters;\n}\nexports.getSendingRtpParameters = getSendingRtpParameters;\n/**\n * Generate RTP parameters of the given kind suitable for the remote SDP answer.\n */\nfunction getSendingRemoteRtpParameters(kind, extendedRtpCapabilities) {\n    const rtpParameters = {\n        mid: undefined,\n        codecs: [],\n        headerExtensions: [],\n        encodings: [],\n        rtcp: {}\n    };\n    for (const extendedCodec of extendedRtpCapabilities.codecs) {\n        if (extendedCodec.kind !== kind)\n            continue;\n        const codec = {\n            mimeType: extendedCodec.mimeType,\n            payloadType: extendedCodec.localPayloadType,\n            clockRate: extendedCodec.clockRate,\n            channels: extendedCodec.channels,\n            parameters: extendedCodec.remoteParameters,\n            rtcpFeedback: extendedCodec.rtcpFeedback\n        };\n        rtpParameters.codecs.push(codec);\n        // Add RTX codec.\n        if (extendedCodec.localRtxPayloadType) {\n            const rtxCodec = {\n                mimeType: `${extendedCodec.kind}/rtx`,\n                payloadType: extendedCodec.localRtxPayloadType,\n                clockRate: extendedCodec.clockRate,\n                parameters: {\n                    apt: extendedCodec.localPayloadType\n                },\n                rtcpFeedback: []\n            };\n            rtpParameters.codecs.push(rtxCodec);\n        }\n    }\n    for (const extendedExtension of extendedRtpCapabilities.headerExtensions) {\n        // Ignore RTP extensions of a different kind and those not valid for sending.\n        if ((extendedExtension.kind && extendedExtension.kind !== kind) ||\n            (extendedExtension.direction !== 'sendrecv' &&\n                extendedExtension.direction !== 'sendonly')) {\n            continue;\n        }\n        const ext = {\n            uri: extendedExtension.uri,\n            id: extendedExtension.sendId,\n            encrypt: extendedExtension.encrypt,\n            parameters: {}\n        };\n        rtpParameters.headerExtensions.push(ext);\n    }\n    // Reduce codecs' RTCP feedback. Use Transport-CC if available, REMB otherwise.\n    if (rtpParameters.headerExtensions.some((ext) => (ext.uri === 'http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01'))) {\n        for (const codec of rtpParameters.codecs) {\n            codec.rtcpFeedback = (codec.rtcpFeedback || [])\n                .filter((fb) => fb.type !== 'goog-remb');\n        }\n    }\n    else if (rtpParameters.headerExtensions.some((ext) => (ext.uri === 'http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time'))) {\n        for (const codec of rtpParameters.codecs) {\n            codec.rtcpFeedback = (codec.rtcpFeedback || [])\n                .filter((fb) => fb.type !== 'transport-cc');\n        }\n    }\n    else {\n        for (const codec of rtpParameters.codecs) {\n            codec.rtcpFeedback = (codec.rtcpFeedback || [])\n                .filter((fb) => (fb.type !== 'transport-cc' &&\n                fb.type !== 'goog-remb'));\n        }\n    }\n    return rtpParameters;\n}\nexports.getSendingRemoteRtpParameters = getSendingRemoteRtpParameters;\n/**\n * Reduce given codecs by returning an array of codecs \"compatible\" with the\n * given capability codec. If no capability codec is given, take the first\n * one(s).\n *\n * Given codecs must be generated by ortc.getSendingRtpParameters() or\n * ortc.getSendingRemoteRtpParameters().\n *\n * The returned array of codecs also include a RTX codec if available.\n */\nfunction reduceCodecs(codecs, capCodec) {\n    const filteredCodecs = [];\n    // If no capability codec is given, take the first one (and RTX).\n    if (!capCodec) {\n        filteredCodecs.push(codecs[0]);\n        if (isRtxCodec(codecs[1]))\n            filteredCodecs.push(codecs[1]);\n    }\n    // Otherwise look for a compatible set of codecs.\n    else {\n        for (let idx = 0; idx < codecs.length; ++idx) {\n            if (matchCodecs(codecs[idx], capCodec)) {\n                filteredCodecs.push(codecs[idx]);\n                if (isRtxCodec(codecs[idx + 1]))\n                    filteredCodecs.push(codecs[idx + 1]);\n                break;\n            }\n        }\n        if (filteredCodecs.length === 0)\n            throw new TypeError('no matching codec found');\n    }\n    return filteredCodecs;\n}\nexports.reduceCodecs = reduceCodecs;\n/**\n * Create RTP parameters for a Consumer for the RTP probator.\n */\nfunction generateProbatorRtpParameters(videoRtpParameters) {\n    // Clone given reference video RTP parameters.\n    videoRtpParameters = utils.clone(videoRtpParameters, {});\n    // This may throw.\n    validateRtpParameters(videoRtpParameters);\n    const rtpParameters = {\n        mid: RTP_PROBATOR_MID,\n        codecs: [],\n        headerExtensions: [],\n        encodings: [{ ssrc: RTP_PROBATOR_SSRC }],\n        rtcp: { cname: 'probator' }\n    };\n    rtpParameters.codecs.push(videoRtpParameters.codecs[0]);\n    rtpParameters.codecs[0].payloadType = RTP_PROBATOR_CODEC_PAYLOAD_TYPE;\n    rtpParameters.headerExtensions = videoRtpParameters.headerExtensions;\n    return rtpParameters;\n}\nexports.generateProbatorRtpParameters = generateProbatorRtpParameters;\n/**\n * Whether media can be sent based on the given RTP capabilities.\n */\nfunction canSend(kind, extendedRtpCapabilities) {\n    return extendedRtpCapabilities.codecs.\n        some((codec) => codec.kind === kind);\n}\nexports.canSend = canSend;\n/**\n * Whether the given RTP parameters can be received with the given RTP\n * capabilities.\n */\nfunction canReceive(rtpParameters, extendedRtpCapabilities) {\n    // This may throw.\n    validateRtpParameters(rtpParameters);\n    if (rtpParameters.codecs.length === 0)\n        return false;\n    const firstMediaCodec = rtpParameters.codecs[0];\n    return extendedRtpCapabilities.codecs\n        .some((codec) => codec.remotePayloadType === firstMediaCodec.payloadType);\n}\nexports.canReceive = canReceive;\nfunction isRtxCodec(codec) {\n    if (!codec)\n        return false;\n    return /.+\\/rtx$/i.test(codec.mimeType);\n}\nfunction matchCodecs(aCodec, bCodec, { strict = false, modify = false } = {}) {\n    const aMimeType = aCodec.mimeType.toLowerCase();\n    const bMimeType = bCodec.mimeType.toLowerCase();\n    if (aMimeType !== bMimeType)\n        return false;\n    if (aCodec.clockRate !== bCodec.clockRate)\n        return false;\n    if (aCodec.channels !== bCodec.channels)\n        return false;\n    // Per codec special checks.\n    switch (aMimeType) {\n        case 'video/h264':\n            {\n                // If strict matching check profile-level-id.\n                if (strict) {\n                    const aPacketizationMode = aCodec.parameters['packetization-mode'] || 0;\n                    const bPacketizationMode = bCodec.parameters['packetization-mode'] || 0;\n                    if (aPacketizationMode !== bPacketizationMode)\n                        return false;\n                    if (!h264.isSameProfile(aCodec.parameters, bCodec.parameters))\n                        return false;\n                    let selectedProfileLevelId;\n                    try {\n                        selectedProfileLevelId =\n                            h264.generateProfileLevelIdForAnswer(aCodec.parameters, bCodec.parameters);\n                    }\n                    catch (error) {\n                        return false;\n                    }\n                    if (modify) {\n                        if (selectedProfileLevelId) {\n                            aCodec.parameters['profile-level-id'] = selectedProfileLevelId;\n                            bCodec.parameters['profile-level-id'] = selectedProfileLevelId;\n                        }\n                        else {\n                            delete aCodec.parameters['profile-level-id'];\n                            delete bCodec.parameters['profile-level-id'];\n                        }\n                    }\n                }\n                break;\n            }\n        case 'video/vp9':\n            {\n                // If strict matching check profile-id.\n                if (strict) {\n                    const aProfileId = aCodec.parameters['profile-id'] || 0;\n                    const bProfileId = bCodec.parameters['profile-id'] || 0;\n                    if (aProfileId !== bProfileId)\n                        return false;\n                }\n                break;\n            }\n    }\n    return true;\n}\nfunction matchHeaderExtensions(aExt, bExt) {\n    if (aExt.kind && bExt.kind && aExt.kind !== bExt.kind)\n        return false;\n    if (aExt.uri !== bExt.uri)\n        return false;\n    return true;\n}\nfunction reduceRtcpFeedback(codecA, codecB) {\n    const reducedRtcpFeedback = [];\n    for (const aFb of codecA.rtcpFeedback || []) {\n        const matchingBFb = (codecB.rtcpFeedback || [])\n            .find((bFb) => (bFb.type === aFb.type &&\n            (bFb.parameter === aFb.parameter || (!bFb.parameter && !aFb.parameter))));\n        if (matchingBFb)\n            reducedRtcpFeedback.push(matchingBFb);\n    }\n    return reducedRtcpFeedback;\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass AwaitQueue {\n    constructor({ ClosedErrorClass = Error, StoppedErrorClass = Error } = {\n        ClosedErrorClass: Error,\n        StoppedErrorClass: Error\n    }) {\n        // Closed flag.\n        this.closed = false;\n        // Queue of pending tasks.\n        this.pendingTasks = [];\n        // Error class used when rejecting a task due to AwaitQueue being closed.\n        this.ClosedErrorClass = Error;\n        // Error class used when rejecting a task due to AwaitQueue being stopped.\n        this.StoppedErrorClass = Error;\n        this.ClosedErrorClass = ClosedErrorClass;\n        this.StoppedErrorClass = StoppedErrorClass;\n    }\n    /**\n     * The number of ongoing enqueued tasks.\n     */\n    get size() {\n        return this.pendingTasks.length;\n    }\n    /**\n     * Closes the AwaitQueue. Pending tasks will be rejected with ClosedErrorClass\n     * error.\n     */\n    close() {\n        if (this.closed)\n            return;\n        this.closed = true;\n        for (const pendingTask of this.pendingTasks) {\n            pendingTask.stopped = true;\n            pendingTask.reject(new this.ClosedErrorClass('AwaitQueue closed'));\n        }\n        // Enpty the pending tasks array.\n        this.pendingTasks.length = 0;\n    }\n    /**\n     * Accepts a task as argument (and an optional task name) and enqueues it after\n     * pending tasks. Once processed, the push() method resolves (or rejects) with\n     * the result returned by the given task.\n     *\n     * The given task must return a Promise or directly a value.\n     */\n    push(task, name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.closed)\n                throw new this.ClosedErrorClass('AwaitQueue closed');\n            if (typeof task !== 'function')\n                throw new TypeError('given task is not a function');\n            if (!task.name && name) {\n                try {\n                    Object.defineProperty(task, 'name', { value: name });\n                }\n                catch (error) { }\n            }\n            return new Promise((resolve, reject) => {\n                const pendingTask = {\n                    task,\n                    name,\n                    resolve,\n                    reject,\n                    stopped: false,\n                    enqueuedAt: new Date(),\n                    executedAt: undefined\n                };\n                // Append task to the queue.\n                this.pendingTasks.push(pendingTask);\n                // And run it if this is the only task in the queue.\n                if (this.pendingTasks.length === 1)\n                    this.next();\n            });\n        });\n    }\n    /**\n     * Make ongoing pending tasks reject with the given StoppedErrorClass error.\n     * The AwaitQueue instance is still usable for future tasks added via push()\n     * method.\n     */\n    stop() {\n        if (this.closed)\n            return;\n        for (const pendingTask of this.pendingTasks) {\n            pendingTask.stopped = true;\n            pendingTask.reject(new this.StoppedErrorClass('AwaitQueue stopped'));\n        }\n        // Enpty the pending tasks array.\n        this.pendingTasks.length = 0;\n    }\n    dump() {\n        const now = new Date();\n        return this.pendingTasks.map((pendingTask) => {\n            return {\n                task: pendingTask.task,\n                name: pendingTask.name,\n                enqueuedTime: pendingTask.executedAt\n                    ? pendingTask.executedAt.getTime() - pendingTask.enqueuedAt.getTime()\n                    : now.getTime() - pendingTask.enqueuedAt.getTime(),\n                executingTime: pendingTask.executedAt\n                    ? now.getTime() - pendingTask.executedAt.getTime()\n                    : 0\n            };\n        });\n    }\n    next() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Take the first pending task.\n            const pendingTask = this.pendingTasks[0];\n            if (!pendingTask)\n                return;\n            // Execute it.\n            yield this.executeTask(pendingTask);\n            // Remove the first pending task (the completed one) from the queue.\n            this.pendingTasks.shift();\n            // And continue.\n            this.next();\n        });\n    }\n    executeTask(pendingTask) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // If the task is stopped, ignore it.\n            if (pendingTask.stopped)\n                return;\n            pendingTask.executedAt = new Date();\n            try {\n                const result = yield pendingTask.task();\n                // If the task is stopped, ignore it.\n                if (pendingTask.stopped)\n                    return;\n                // Resolve the task with the returned result (if any).\n                pendingTask.resolve(result);\n            }\n            catch (error) {\n                // If the task is stopped, ignore it.\n                if (pendingTask.stopped)\n                    return;\n                // Reject the task with its own error.\n                pendingTask.reject(error);\n            }\n        });\n    }\n}\nexports.AwaitQueue = AwaitQueue;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Producer = void 0;\nconst Logger_1 = require(\"./Logger\");\nconst EnhancedEventEmitter_1 = require(\"./EnhancedEventEmitter\");\nconst errors_1 = require(\"./errors\");\nconst logger = new Logger_1.Logger('Producer');\nclass Producer extends EnhancedEventEmitter_1.EnhancedEventEmitter {\n    /**\n     * @emits transportclose\n     * @emits trackended\n     * @emits @replacetrack - (track: MediaStreamTrack | null)\n     * @emits @setmaxspatiallayer - (spatialLayer: string)\n     * @emits @setrtpencodingparameters - (params: any)\n     * @emits @getstats\n     * @emits @close\n     */\n    constructor({ id, localId, rtpSender, track, rtpParameters, stopTracks, disableTrackOnPause, zeroRtpOnPause, appData }) {\n        super();\n        // Closed flag.\n        this._closed = false;\n        // Observer instance.\n        this._observer = new EnhancedEventEmitter_1.EnhancedEventEmitter();\n        logger.debug('constructor()');\n        this._id = id;\n        this._localId = localId;\n        this._rtpSender = rtpSender;\n        this._track = track;\n        this._kind = track.kind;\n        this._rtpParameters = rtpParameters;\n        this._paused = disableTrackOnPause ? !track.enabled : false;\n        this._maxSpatialLayer = undefined;\n        this._stopTracks = stopTracks;\n        this._disableTrackOnPause = disableTrackOnPause;\n        this._zeroRtpOnPause = zeroRtpOnPause;\n        this._appData = appData;\n        this._onTrackEnded = this._onTrackEnded.bind(this);\n        // NOTE: Minor issue. If zeroRtpOnPause is true, we cannot emit the\n        // '@replacetrack' event here, so RTCRtpSender.track won't be null.\n        this._handleTrack();\n    }\n    /**\n     * Producer id.\n     */\n    get id() {\n        return this._id;\n    }\n    /**\n     * Local id.\n     */\n    get localId() {\n        return this._localId;\n    }\n    /**\n     * Whether the Producer is closed.\n     */\n    get closed() {\n        return this._closed;\n    }\n    /**\n     * Media kind.\n     */\n    get kind() {\n        return this._kind;\n    }\n    /**\n     * Associated RTCRtpSender.\n     */\n    get rtpSender() {\n        return this._rtpSender;\n    }\n    /**\n     * The associated track.\n     */\n    get track() {\n        return this._track;\n    }\n    /**\n     * RTP parameters.\n     */\n    get rtpParameters() {\n        return this._rtpParameters;\n    }\n    /**\n     * Whether the Producer is paused.\n     */\n    get paused() {\n        return this._paused;\n    }\n    /**\n     * Max spatial layer.\n     *\n     * @type {Number | undefined}\n     */\n    get maxSpatialLayer() {\n        return this._maxSpatialLayer;\n    }\n    /**\n     * App custom data.\n     */\n    get appData() {\n        return this._appData;\n    }\n    /**\n     * Invalid setter.\n     */\n    set appData(appData) {\n        throw new Error('cannot override appData object');\n    }\n    /**\n     * Observer.\n     *\n     * @emits close\n     * @emits pause\n     * @emits resume\n     * @emits trackended\n     */\n    get observer() {\n        return this._observer;\n    }\n    /**\n     * Closes the Producer.\n     */\n    close() {\n        if (this._closed)\n            return;\n        logger.debug('close()');\n        this._closed = true;\n        this._destroyTrack();\n        this.emit('@close');\n        // Emit observer event.\n        this._observer.safeEmit('close');\n    }\n    /**\n     * Transport was closed.\n     */\n    transportClosed() {\n        if (this._closed)\n            return;\n        logger.debug('transportClosed()');\n        this._closed = true;\n        this._destroyTrack();\n        this.safeEmit('transportclose');\n        // Emit observer event.\n        this._observer.safeEmit('close');\n    }\n    /**\n     * Get associated RTCRtpSender stats.\n     */\n    async getStats() {\n        if (this._closed)\n            throw new errors_1.InvalidStateError('closed');\n        return this.safeEmitAsPromise('@getstats');\n    }\n    /**\n     * Pauses sending media.\n     */\n    pause() {\n        logger.debug('pause()');\n        if (this._closed) {\n            logger.error('pause() | Producer closed');\n            return;\n        }\n        this._paused = true;\n        if (this._track && this._disableTrackOnPause) {\n            this._track.enabled = false;\n        }\n        if (this._zeroRtpOnPause) {\n            this.safeEmitAsPromise('@replacetrack', null)\n                .catch(() => { });\n        }\n        // Emit observer event.\n        this._observer.safeEmit('pause');\n    }\n    /**\n     * Resumes sending media.\n     */\n    resume() {\n        logger.debug('resume()');\n        if (this._closed) {\n            logger.error('resume() | Producer closed');\n            return;\n        }\n        this._paused = false;\n        if (this._track && this._disableTrackOnPause) {\n            this._track.enabled = true;\n        }\n        if (this._zeroRtpOnPause) {\n            this.safeEmitAsPromise('@replacetrack', this._track)\n                .catch(() => { });\n        }\n        // Emit observer event.\n        this._observer.safeEmit('resume');\n    }\n    /**\n     * Replaces the current track with a new one or null.\n     */\n    async replaceTrack({ track }) {\n        logger.debug('replaceTrack() [track:%o]', track);\n        if (this._closed) {\n            // This must be done here. Otherwise there is no chance to stop the given\n            // track.\n            if (track && this._stopTracks) {\n                try {\n                    track.stop();\n                }\n                catch (error) { }\n            }\n            throw new errors_1.InvalidStateError('closed');\n        }\n        else if (track && track.readyState === 'ended') {\n            throw new errors_1.InvalidStateError('track ended');\n        }\n        // Do nothing if this is the same track as the current handled one.\n        if (track === this._track) {\n            logger.debug('replaceTrack() | same track, ignored');\n            return;\n        }\n        if (!this._zeroRtpOnPause || !this._paused) {\n            await this.safeEmitAsPromise('@replacetrack', track);\n        }\n        // Destroy the previous track.\n        this._destroyTrack();\n        // Set the new track.\n        this._track = track;\n        // If this Producer was paused/resumed and the state of the new\n        // track does not match, fix it.\n        if (this._track && this._disableTrackOnPause) {\n            if (!this._paused)\n                this._track.enabled = true;\n            else if (this._paused)\n                this._track.enabled = false;\n        }\n        // Handle the effective track.\n        this._handleTrack();\n    }\n    /**\n     * Sets the video max spatial layer to be sent.\n     */\n    async setMaxSpatialLayer(spatialLayer) {\n        if (this._closed)\n            throw new errors_1.InvalidStateError('closed');\n        else if (this._kind !== 'video')\n            throw new errors_1.UnsupportedError('not a video Producer');\n        else if (typeof spatialLayer !== 'number')\n            throw new TypeError('invalid spatialLayer');\n        if (spatialLayer === this._maxSpatialLayer)\n            return;\n        await this.safeEmitAsPromise('@setmaxspatiallayer', spatialLayer);\n        this._maxSpatialLayer = spatialLayer;\n    }\n    /**\n     * Sets the DSCP value.\n     */\n    async setRtpEncodingParameters(params) {\n        if (this._closed)\n            throw new errors_1.InvalidStateError('closed');\n        else if (typeof params !== 'object')\n            throw new TypeError('invalid params');\n        await this.safeEmitAsPromise('@setrtpencodingparameters', params);\n    }\n    _onTrackEnded() {\n        logger.debug('track \"ended\" event');\n        this.safeEmit('trackended');\n        // Emit observer event.\n        this._observer.safeEmit('trackended');\n    }\n    _handleTrack() {\n        if (!this._track)\n            return;\n        this._track.addEventListener('ended', this._onTrackEnded);\n    }\n    _destroyTrack() {\n        if (!this._track)\n            return;\n        try {\n            this._track.removeEventListener('ended', this._onTrackEnded);\n            // Just stop the track unless the app set stopTracks: false.\n            if (this._stopTracks)\n                this._track.stop();\n        }\n        catch (error) { }\n    }\n}\nexports.Producer = Producer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Consumer = void 0;\nconst Logger_1 = require(\"./Logger\");\nconst EnhancedEventEmitter_1 = require(\"./EnhancedEventEmitter\");\nconst errors_1 = require(\"./errors\");\nconst logger = new Logger_1.Logger('Consumer');\nclass Consumer extends EnhancedEventEmitter_1.EnhancedEventEmitter {\n    /**\n     * @emits transportclose\n     * @emits trackended\n     * @emits @getstats\n     * @emits @close\n     * @emits @pause\n     * @emits @resume\n     */\n    constructor({ id, localId, producerId, rtpReceiver, track, rtpParameters, appData }) {\n        super();\n        // Closed flag.\n        this._closed = false;\n        // Observer instance.\n        this._observer = new EnhancedEventEmitter_1.EnhancedEventEmitter();\n        logger.debug('constructor()');\n        this._id = id;\n        this._localId = localId;\n        this._producerId = producerId;\n        this._rtpReceiver = rtpReceiver;\n        this._track = track;\n        this._rtpParameters = rtpParameters;\n        this._paused = !track.enabled;\n        this._appData = appData;\n        this._onTrackEnded = this._onTrackEnded.bind(this);\n        this._handleTrack();\n    }\n    /**\n     * Consumer id.\n     */\n    get id() {\n        return this._id;\n    }\n    /**\n     * Local id.\n     */\n    get localId() {\n        return this._localId;\n    }\n    /**\n     * Associated Producer id.\n     */\n    get producerId() {\n        return this._producerId;\n    }\n    /**\n     * Whether the Consumer is closed.\n     */\n    get closed() {\n        return this._closed;\n    }\n    /**\n     * Media kind.\n     */\n    get kind() {\n        return this._track.kind;\n    }\n    /**\n     * Associated RTCRtpReceiver.\n     */\n    get rtpReceiver() {\n        return this._rtpReceiver;\n    }\n    /**\n     * The associated track.\n     */\n    get track() {\n        return this._track;\n    }\n    /**\n     * RTP parameters.\n     */\n    get rtpParameters() {\n        return this._rtpParameters;\n    }\n    /**\n     * Whether the Consumer is paused.\n     */\n    get paused() {\n        return this._paused;\n    }\n    /**\n     * App custom data.\n     */\n    get appData() {\n        return this._appData;\n    }\n    /**\n     * Invalid setter.\n     */\n    set appData(appData) {\n        throw new Error('cannot override appData object');\n    }\n    /**\n     * Observer.\n     *\n     * @emits close\n     * @emits pause\n     * @emits resume\n     * @emits trackended\n     */\n    get observer() {\n        return this._observer;\n    }\n    /**\n     * Closes the Consumer.\n     */\n    close() {\n        if (this._closed)\n            return;\n        logger.debug('close()');\n        this._closed = true;\n        this._destroyTrack();\n        this.emit('@close');\n        // Emit observer event.\n        this._observer.safeEmit('close');\n    }\n    /**\n     * Transport was closed.\n     */\n    transportClosed() {\n        if (this._closed)\n            return;\n        logger.debug('transportClosed()');\n        this._closed = true;\n        this._destroyTrack();\n        this.safeEmit('transportclose');\n        // Emit observer event.\n        this._observer.safeEmit('close');\n    }\n    /**\n     * Get associated RTCRtpReceiver stats.\n     */\n    async getStats() {\n        if (this._closed)\n            throw new errors_1.InvalidStateError('closed');\n        return this.safeEmitAsPromise('@getstats');\n    }\n    /**\n     * Pauses receiving media.\n     */\n    pause() {\n        logger.debug('pause()');\n        if (this._closed) {\n            logger.error('pause() | Consumer closed');\n            return;\n        }\n        this._paused = true;\n        this._track.enabled = false;\n        this.emit('@pause');\n        // Emit observer event.\n        this._observer.safeEmit('pause');\n    }\n    /**\n     * Resumes receiving media.\n     */\n    resume() {\n        logger.debug('resume()');\n        if (this._closed) {\n            logger.error('resume() | Consumer closed');\n            return;\n        }\n        this._paused = false;\n        this._track.enabled = true;\n        this.emit('@resume');\n        // Emit observer event.\n        this._observer.safeEmit('resume');\n    }\n    _onTrackEnded() {\n        logger.debug('track \"ended\" event');\n        this.safeEmit('trackended');\n        // Emit observer event.\n        this._observer.safeEmit('trackended');\n    }\n    _handleTrack() {\n        this._track.addEventListener('ended', this._onTrackEnded);\n    }\n    _destroyTrack() {\n        try {\n            this._track.removeEventListener('ended', this._onTrackEnded);\n            this._track.stop();\n        }\n        catch (error) { }\n    }\n}\nexports.Consumer = Consumer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DataProducer = void 0;\nconst Logger_1 = require(\"./Logger\");\nconst EnhancedEventEmitter_1 = require(\"./EnhancedEventEmitter\");\nconst errors_1 = require(\"./errors\");\nconst logger = new Logger_1.Logger('DataProducer');\nclass DataProducer extends EnhancedEventEmitter_1.EnhancedEventEmitter {\n    /**\n     * @emits transportclose\n     * @emits open\n     * @emits error - (error: Error)\n     * @emits close\n     * @emits bufferedamountlow\n     * @emits @close\n     */\n    constructor({ id, dataChannel, sctpStreamParameters, appData }) {\n        super();\n        // Closed flag.\n        this._closed = false;\n        // Observer instance.\n        this._observer = new EnhancedEventEmitter_1.EnhancedEventEmitter();\n        logger.debug('constructor()');\n        this._id = id;\n        this._dataChannel = dataChannel;\n        this._sctpStreamParameters = sctpStreamParameters;\n        this._appData = appData;\n        this._handleDataChannel();\n    }\n    /**\n     * DataProducer id.\n     */\n    get id() {\n        return this._id;\n    }\n    /**\n     * Whether the DataProducer is closed.\n     */\n    get closed() {\n        return this._closed;\n    }\n    /**\n     * SCTP stream parameters.\n     */\n    get sctpStreamParameters() {\n        return this._sctpStreamParameters;\n    }\n    /**\n     * DataChannel readyState.\n     */\n    get readyState() {\n        return this._dataChannel.readyState;\n    }\n    /**\n     * DataChannel label.\n     */\n    get label() {\n        return this._dataChannel.label;\n    }\n    /**\n     * DataChannel protocol.\n     */\n    get protocol() {\n        return this._dataChannel.protocol;\n    }\n    /**\n     * DataChannel bufferedAmount.\n     */\n    get bufferedAmount() {\n        return this._dataChannel.bufferedAmount;\n    }\n    /**\n     * DataChannel bufferedAmountLowThreshold.\n     */\n    get bufferedAmountLowThreshold() {\n        return this._dataChannel.bufferedAmountLowThreshold;\n    }\n    /**\n     * Set DataChannel bufferedAmountLowThreshold.\n     */\n    set bufferedAmountLowThreshold(bufferedAmountLowThreshold) {\n        this._dataChannel.bufferedAmountLowThreshold = bufferedAmountLowThreshold;\n    }\n    /**\n     * App custom data.\n     */\n    get appData() {\n        return this._appData;\n    }\n    /**\n     * Invalid setter.\n     */\n    set appData(appData) {\n        throw new Error('cannot override appData object');\n    }\n    /**\n     * Observer.\n     *\n     * @emits close\n     */\n    get observer() {\n        return this._observer;\n    }\n    /**\n     * Closes the DataProducer.\n     */\n    close() {\n        if (this._closed)\n            return;\n        logger.debug('close()');\n        this._closed = true;\n        this._dataChannel.close();\n        this.emit('@close');\n        // Emit observer event.\n        this._observer.safeEmit('close');\n    }\n    /**\n     * Transport was closed.\n     */\n    transportClosed() {\n        if (this._closed)\n            return;\n        logger.debug('transportClosed()');\n        this._closed = true;\n        this._dataChannel.close();\n        this.safeEmit('transportclose');\n        // Emit observer event.\n        this._observer.safeEmit('close');\n    }\n    /**\n     * Send a message.\n     *\n     * @param {String|Blob|ArrayBuffer|ArrayBufferView} data.\n     */\n    send(data) {\n        logger.debug('send()');\n        if (this._closed)\n            throw new errors_1.InvalidStateError('closed');\n        this._dataChannel.send(data);\n    }\n    _handleDataChannel() {\n        this._dataChannel.addEventListener('open', () => {\n            if (this._closed)\n                return;\n            logger.debug('DataChannel \"open\" event');\n            this.safeEmit('open');\n        });\n        this._dataChannel.addEventListener('error', (event) => {\n            if (this._closed)\n                return;\n            let { error } = event;\n            if (!error)\n                error = new Error('unknown DataChannel error');\n            if (error.errorDetail === 'sctp-failure') {\n                logger.error('DataChannel SCTP error [sctpCauseCode:%s]: %s', error.sctpCauseCode, error.message);\n            }\n            else {\n                logger.error('DataChannel \"error\" event: %o', error);\n            }\n            this.safeEmit('error', error);\n        });\n        this._dataChannel.addEventListener('close', () => {\n            if (this._closed)\n                return;\n            logger.warn('DataChannel \"close\" event');\n            this._closed = true;\n            this.emit('@close');\n            this.safeEmit('close');\n        });\n        this._dataChannel.addEventListener('message', () => {\n            if (this._closed)\n                return;\n            logger.warn('DataChannel \"message\" event in a DataProducer, message discarded');\n        });\n        this._dataChannel.addEventListener('bufferedamountlow', () => {\n            if (this._closed)\n                return;\n            this.safeEmit('bufferedamountlow');\n        });\n    }\n}\nexports.DataProducer = DataProducer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DataConsumer = void 0;\nconst Logger_1 = require(\"./Logger\");\nconst EnhancedEventEmitter_1 = require(\"./EnhancedEventEmitter\");\nconst logger = new Logger_1.Logger('DataConsumer');\nclass DataConsumer extends EnhancedEventEmitter_1.EnhancedEventEmitter {\n    /**\n     * @emits transportclose\n     * @emits open\n     * @emits error - (error: Error)\n     * @emits close\n     * @emits message - (message: any)\n     * @emits @close\n     */\n    constructor({ id, dataProducerId, dataChannel, sctpStreamParameters, appData }) {\n        super();\n        // Closed flag.\n        this._closed = false;\n        // Observer instance.\n        this._observer = new EnhancedEventEmitter_1.EnhancedEventEmitter();\n        logger.debug('constructor()');\n        this._id = id;\n        this._dataProducerId = dataProducerId;\n        this._dataChannel = dataChannel;\n        this._sctpStreamParameters = sctpStreamParameters;\n        this._appData = appData;\n        this._handleDataChannel();\n    }\n    /**\n     * DataConsumer id.\n     */\n    get id() {\n        return this._id;\n    }\n    /**\n     * Associated DataProducer id.\n     */\n    get dataProducerId() {\n        return this._dataProducerId;\n    }\n    /**\n     * Whether the DataConsumer is closed.\n     */\n    get closed() {\n        return this._closed;\n    }\n    /**\n     * SCTP stream parameters.\n     */\n    get sctpStreamParameters() {\n        return this._sctpStreamParameters;\n    }\n    /**\n     * DataChannel readyState.\n     */\n    get readyState() {\n        return this._dataChannel.readyState;\n    }\n    /**\n     * DataChannel label.\n     */\n    get label() {\n        return this._dataChannel.label;\n    }\n    /**\n     * DataChannel protocol.\n     */\n    get protocol() {\n        return this._dataChannel.protocol;\n    }\n    /**\n     * DataChannel binaryType.\n     */\n    get binaryType() {\n        return this._dataChannel.binaryType;\n    }\n    /**\n     * Set DataChannel binaryType.\n     */\n    set binaryType(binaryType) {\n        this._dataChannel.binaryType = binaryType;\n    }\n    /**\n     * App custom data.\n     */\n    get appData() {\n        return this._appData;\n    }\n    /**\n     * Invalid setter.\n     */\n    set appData(appData) {\n        throw new Error('cannot override appData object');\n    }\n    /**\n     * Observer.\n     *\n     * @emits close\n     */\n    get observer() {\n        return this._observer;\n    }\n    /**\n     * Closes the DataConsumer.\n     */\n    close() {\n        if (this._closed)\n            return;\n        logger.debug('close()');\n        this._closed = true;\n        this._dataChannel.close();\n        this.emit('@close');\n        // Emit observer event.\n        this._observer.safeEmit('close');\n    }\n    /**\n     * Transport was closed.\n     */\n    transportClosed() {\n        if (this._closed)\n            return;\n        logger.debug('transportClosed()');\n        this._closed = true;\n        this._dataChannel.close();\n        this.safeEmit('transportclose');\n        // Emit observer event.\n        this._observer.safeEmit('close');\n    }\n    _handleDataChannel() {\n        this._dataChannel.addEventListener('open', () => {\n            if (this._closed)\n                return;\n            logger.debug('DataChannel \"open\" event');\n            this.safeEmit('open');\n        });\n        this._dataChannel.addEventListener('error', (event) => {\n            if (this._closed)\n                return;\n            let { error } = event;\n            if (!error)\n                error = new Error('unknown DataChannel error');\n            if (error.errorDetail === 'sctp-failure') {\n                logger.error('DataChannel SCTP error [sctpCauseCode:%s]: %s', error.sctpCauseCode, error.message);\n            }\n            else {\n                logger.error('DataChannel \"error\" event: %o', error);\n            }\n            this.safeEmit('error', error);\n        });\n        this._dataChannel.addEventListener('close', () => {\n            if (this._closed)\n                return;\n            logger.warn('DataChannel \"close\" event');\n            this._closed = true;\n            this.emit('@close');\n            this.safeEmit('close');\n        });\n        this._dataChannel.addEventListener('message', (event) => {\n            if (this._closed)\n                return;\n            this.safeEmit('message', event.data);\n        });\n    }\n}\nexports.DataConsumer = DataConsumer;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Transport = void 0;\nconst awaitqueue_1 = require(\"awaitqueue\");\nconst Logger_1 = require(\"./Logger\");\nconst EnhancedEventEmitter_1 = require(\"./EnhancedEventEmitter\");\nconst errors_1 = require(\"./errors\");\nconst utils = __importStar(require(\"./utils\"));\nconst ortc = __importStar(require(\"./ortc\"));\nconst Producer_1 = require(\"./Producer\");\nconst Consumer_1 = require(\"./Consumer\");\nconst DataProducer_1 = require(\"./DataProducer\");\nconst DataConsumer_1 = require(\"./DataConsumer\");\nconst logger = new Logger_1.Logger('Transport');\nclass Transport extends EnhancedEventEmitter_1.EnhancedEventEmitter {\n    /**\n     * @emits connect - (transportLocalParameters: any, callback: Function, errback: Function)\n     * @emits connectionstatechange - (connectionState: ConnectionState)\n     * @emits produce - (producerLocalParameters: any, callback: Function, errback: Function)\n     * @emits producedata - (dataProducerLocalParameters: any, callback: Function, errback: Function)\n     */\n    constructor({ direction, id, iceParameters, iceCandidates, dtlsParameters, sctpParameters, iceServers, iceTransportPolicy, additionalSettings, proprietaryConstraints, appData, handlerFactory, extendedRtpCapabilities, canProduceByKind }) {\n        super();\n        // Closed flag.\n        this._closed = false;\n        // Transport connection state.\n        this._connectionState = 'new';\n        // Map of Producers indexed by id.\n        this._producers = new Map();\n        // Map of Consumers indexed by id.\n        this._consumers = new Map();\n        // Map of DataProducers indexed by id.\n        this._dataProducers = new Map();\n        // Map of DataConsumers indexed by id.\n        this._dataConsumers = new Map();\n        // Whether the Consumer for RTP probation has been created.\n        this._probatorConsumerCreated = false;\n        // AwaitQueue instance to make async tasks happen sequentially.\n        this._awaitQueue = new awaitqueue_1.AwaitQueue({ ClosedErrorClass: errors_1.InvalidStateError });\n        // Observer instance.\n        this._observer = new EnhancedEventEmitter_1.EnhancedEventEmitter();\n        logger.debug('constructor() [id:%s, direction:%s]', id, direction);\n        this._id = id;\n        this._direction = direction;\n        this._extendedRtpCapabilities = extendedRtpCapabilities;\n        this._canProduceByKind = canProduceByKind;\n        this._maxSctpMessageSize =\n            sctpParameters ? sctpParameters.maxMessageSize : null;\n        // Clone and sanitize additionalSettings.\n        additionalSettings = utils.clone(additionalSettings, {});\n        delete additionalSettings.iceServers;\n        delete additionalSettings.iceTransportPolicy;\n        delete additionalSettings.bundlePolicy;\n        delete additionalSettings.rtcpMuxPolicy;\n        delete additionalSettings.sdpSemantics;\n        this._handler = handlerFactory();\n        this._handler.run({\n            direction,\n            iceParameters,\n            iceCandidates,\n            dtlsParameters,\n            sctpParameters,\n            iceServers,\n            iceTransportPolicy,\n            additionalSettings,\n            proprietaryConstraints,\n            extendedRtpCapabilities\n        });\n        this._appData = appData;\n        this._handleHandler();\n    }\n    /**\n     * Transport id.\n     */\n    get id() {\n        return this._id;\n    }\n    /**\n     * Whether the Transport is closed.\n     */\n    get closed() {\n        return this._closed;\n    }\n    /**\n     * Transport direction.\n     */\n    get direction() {\n        return this._direction;\n    }\n    /**\n     * RTC handler instance.\n     */\n    get handler() {\n        return this._handler;\n    }\n    /**\n     * Connection state.\n     */\n    get connectionState() {\n        return this._connectionState;\n    }\n    /**\n     * App custom data.\n     */\n    get appData() {\n        return this._appData;\n    }\n    /**\n     * Invalid setter.\n     */\n    set appData(appData) {\n        throw new Error('cannot override appData object');\n    }\n    /**\n     * Observer.\n     *\n     * @emits close\n     * @emits newproducer - (producer: Producer)\n     * @emits newconsumer - (producer: Producer)\n     * @emits newdataproducer - (dataProducer: DataProducer)\n     * @emits newdataconsumer - (dataProducer: DataProducer)\n     */\n    get observer() {\n        return this._observer;\n    }\n    /**\n     * Close the Transport.\n     */\n    close() {\n        if (this._closed)\n            return;\n        logger.debug('close()');\n        this._closed = true;\n        // Close the AwaitQueue.\n        this._awaitQueue.close();\n        // Close the handler.\n        this._handler.close();\n        // Close all Producers.\n        for (const producer of this._producers.values()) {\n            producer.transportClosed();\n        }\n        this._producers.clear();\n        // Close all Consumers.\n        for (const consumer of this._consumers.values()) {\n            consumer.transportClosed();\n        }\n        this._consumers.clear();\n        // Close all DataProducers.\n        for (const dataProducer of this._dataProducers.values()) {\n            dataProducer.transportClosed();\n        }\n        this._dataProducers.clear();\n        // Close all DataConsumers.\n        for (const dataConsumer of this._dataConsumers.values()) {\n            dataConsumer.transportClosed();\n        }\n        this._dataConsumers.clear();\n        // Emit observer event.\n        this._observer.safeEmit('close');\n    }\n    /**\n     * Get associated Transport (RTCPeerConnection) stats.\n     *\n     * @returns {RTCStatsReport}\n     */\n    async getStats() {\n        if (this._closed)\n            throw new errors_1.InvalidStateError('closed');\n        return this._handler.getTransportStats();\n    }\n    /**\n     * Restart ICE connection.\n     */\n    async restartIce({ iceParameters }) {\n        logger.debug('restartIce()');\n        if (this._closed)\n            throw new errors_1.InvalidStateError('closed');\n        else if (!iceParameters)\n            throw new TypeError('missing iceParameters');\n        // Enqueue command.\n        return this._awaitQueue.push(async () => this._handler.restartIce(iceParameters), 'transport.restartIce()');\n    }\n    /**\n     * Update ICE servers.\n     */\n    async updateIceServers({ iceServers } = {}) {\n        logger.debug('updateIceServers()');\n        if (this._closed)\n            throw new errors_1.InvalidStateError('closed');\n        else if (!Array.isArray(iceServers))\n            throw new TypeError('missing iceServers');\n        // Enqueue command.\n        return this._awaitQueue.push(async () => this._handler.updateIceServers(iceServers), 'transport.updateIceServers()');\n    }\n    /**\n     * Create a Producer.\n     */\n    async produce({ track, encodings, codecOptions, codec, stopTracks = true, disableTrackOnPause = true, zeroRtpOnPause = false, appData = {} } = {}) {\n        logger.debug('produce() [track:%o]', track);\n        if (!track)\n            throw new TypeError('missing track');\n        else if (this._direction !== 'send')\n            throw new errors_1.UnsupportedError('not a sending Transport');\n        else if (!this._canProduceByKind[track.kind])\n            throw new errors_1.UnsupportedError(`cannot produce ${track.kind}`);\n        else if (track.readyState === 'ended')\n            throw new errors_1.InvalidStateError('track ended');\n        else if (this.listenerCount('connect') === 0 && this._connectionState === 'new')\n            throw new TypeError('no \"connect\" listener set into this transport');\n        else if (this.listenerCount('produce') === 0)\n            throw new TypeError('no \"produce\" listener set into this transport');\n        else if (appData && typeof appData !== 'object')\n            throw new TypeError('if given, appData must be an object');\n        // Enqueue command.\n        return this._awaitQueue.push(async () => {\n            let normalizedEncodings;\n            if (encodings && !Array.isArray(encodings)) {\n                throw TypeError('encodings must be an array');\n            }\n            else if (encodings && encodings.length === 0) {\n                normalizedEncodings = undefined;\n            }\n            else if (encodings) {\n                normalizedEncodings = encodings\n                    .map((encoding) => {\n                    const normalizedEncoding = { active: true };\n                    if (encoding.active === false)\n                        normalizedEncoding.active = false;\n                    if (typeof encoding.dtx === 'boolean')\n                        normalizedEncoding.dtx = encoding.dtx;\n                    if (typeof encoding.scalabilityMode === 'string')\n                        normalizedEncoding.scalabilityMode = encoding.scalabilityMode;\n                    if (typeof encoding.scaleResolutionDownBy === 'number')\n                        normalizedEncoding.scaleResolutionDownBy = encoding.scaleResolutionDownBy;\n                    if (typeof encoding.maxBitrate === 'number')\n                        normalizedEncoding.maxBitrate = encoding.maxBitrate;\n                    if (typeof encoding.maxFramerate === 'number')\n                        normalizedEncoding.maxFramerate = encoding.maxFramerate;\n                    if (typeof encoding.adaptivePtime === 'boolean')\n                        normalizedEncoding.adaptivePtime = encoding.adaptivePtime;\n                    if (typeof encoding.priority === 'string')\n                        normalizedEncoding.priority = encoding.priority;\n                    if (typeof encoding.networkPriority === 'string')\n                        normalizedEncoding.networkPriority = encoding.networkPriority;\n                    return normalizedEncoding;\n                });\n            }\n            const { localId, rtpParameters, rtpSender } = await this._handler.send({\n                track,\n                encodings: normalizedEncodings,\n                codecOptions,\n                codec\n            });\n            try {\n                // This will fill rtpParameters's missing fields with default values.\n                ortc.validateRtpParameters(rtpParameters);\n                const { id } = await this.safeEmitAsPromise('produce', {\n                    kind: track.kind,\n                    rtpParameters,\n                    appData\n                });\n                const producer = new Producer_1.Producer({\n                    id,\n                    localId,\n                    rtpSender,\n                    track,\n                    rtpParameters,\n                    stopTracks,\n                    disableTrackOnPause,\n                    zeroRtpOnPause,\n                    appData\n                });\n                this._producers.set(producer.id, producer);\n                this._handleProducer(producer);\n                // Emit observer event.\n                this._observer.safeEmit('newproducer', producer);\n                return producer;\n            }\n            catch (error) {\n                this._handler.stopSending(localId)\n                    .catch(() => { });\n                throw error;\n            }\n        }, 'transport.produce()')\n            // This catch is needed to stop the given track if the command above\n            // failed due to closed Transport.\n            .catch((error) => {\n            if (stopTracks) {\n                try {\n                    track.stop();\n                }\n                catch (error2) { }\n            }\n            throw error;\n        });\n    }\n    /**\n     * Create a Consumer to consume a remote Producer.\n     */\n    async consume({ id, producerId, kind, rtpParameters, appData = {} }) {\n        logger.debug('consume()');\n        rtpParameters = utils.clone(rtpParameters, undefined);\n        if (this._closed)\n            throw new errors_1.InvalidStateError('closed');\n        else if (this._direction !== 'recv')\n            throw new errors_1.UnsupportedError('not a receiving Transport');\n        else if (typeof id !== 'string')\n            throw new TypeError('missing id');\n        else if (typeof producerId !== 'string')\n            throw new TypeError('missing producerId');\n        else if (kind !== 'audio' && kind !== 'video')\n            throw new TypeError(`invalid kind '${kind}'`);\n        else if (this.listenerCount('connect') === 0 && this._connectionState === 'new')\n            throw new TypeError('no \"connect\" listener set into this transport');\n        else if (appData && typeof appData !== 'object')\n            throw new TypeError('if given, appData must be an object');\n        // Enqueue command.\n        return this._awaitQueue.push(async () => {\n            // Ensure the device can consume it.\n            const canConsume = ortc.canReceive(rtpParameters, this._extendedRtpCapabilities);\n            if (!canConsume)\n                throw new errors_1.UnsupportedError('cannot consume this Producer');\n            const { localId, rtpReceiver, track } = await this._handler.receive({ trackId: id, kind, rtpParameters });\n            const consumer = new Consumer_1.Consumer({\n                id,\n                localId,\n                producerId,\n                rtpReceiver,\n                track,\n                rtpParameters,\n                appData\n            });\n            this._consumers.set(consumer.id, consumer);\n            this._handleConsumer(consumer);\n            // If this is the first video Consumer and the Consumer for RTP probation\n            // has not yet been created, create it now.\n            if (!this._probatorConsumerCreated && kind === 'video') {\n                try {\n                    const probatorRtpParameters = ortc.generateProbatorRtpParameters(consumer.rtpParameters);\n                    await this._handler.receive({\n                        trackId: 'probator',\n                        kind: 'video',\n                        rtpParameters: probatorRtpParameters\n                    });\n                    logger.debug('consume() | Consumer for RTP probation created');\n                    this._probatorConsumerCreated = true;\n                }\n                catch (error) {\n                    logger.error('consume() | failed to create Consumer for RTP probation:%o', error);\n                }\n            }\n            // Emit observer event.\n            this._observer.safeEmit('newconsumer', consumer);\n            return consumer;\n        }, 'transport.consume()');\n    }\n    /**\n     * Create a DataProducer\n     */\n    async produceData({ ordered = true, maxPacketLifeTime, maxRetransmits, label = '', protocol = '', appData = {} } = {}) {\n        logger.debug('produceData()');\n        if (this._direction !== 'send')\n            throw new errors_1.UnsupportedError('not a sending Transport');\n        else if (!this._maxSctpMessageSize)\n            throw new errors_1.UnsupportedError('SCTP not enabled by remote Transport');\n        else if (this.listenerCount('connect') === 0 && this._connectionState === 'new')\n            throw new TypeError('no \"connect\" listener set into this transport');\n        else if (this.listenerCount('producedata') === 0)\n            throw new TypeError('no \"producedata\" listener set into this transport');\n        else if (appData && typeof appData !== 'object')\n            throw new TypeError('if given, appData must be an object');\n        if (maxPacketLifeTime || maxRetransmits)\n            ordered = false;\n        // Enqueue command.\n        return this._awaitQueue.push(async () => {\n            const { dataChannel, sctpStreamParameters } = await this._handler.sendDataChannel({\n                ordered,\n                maxPacketLifeTime,\n                maxRetransmits,\n                label,\n                protocol\n            });\n            // This will fill sctpStreamParameters's missing fields with default values.\n            ortc.validateSctpStreamParameters(sctpStreamParameters);\n            const { id } = await this.safeEmitAsPromise('producedata', {\n                sctpStreamParameters,\n                label,\n                protocol,\n                appData\n            });\n            const dataProducer = new DataProducer_1.DataProducer({ id, dataChannel, sctpStreamParameters, appData });\n            this._dataProducers.set(dataProducer.id, dataProducer);\n            this._handleDataProducer(dataProducer);\n            // Emit observer event.\n            this._observer.safeEmit('newdataproducer', dataProducer);\n            return dataProducer;\n        }, 'transport.produceData()');\n    }\n    /**\n     * Create a DataConsumer\n     */\n    async consumeData({ id, dataProducerId, sctpStreamParameters, label = '', protocol = '', appData = {} }) {\n        logger.debug('consumeData()');\n        sctpStreamParameters = utils.clone(sctpStreamParameters, undefined);\n        if (this._closed)\n            throw new errors_1.InvalidStateError('closed');\n        else if (this._direction !== 'recv')\n            throw new errors_1.UnsupportedError('not a receiving Transport');\n        else if (!this._maxSctpMessageSize)\n            throw new errors_1.UnsupportedError('SCTP not enabled by remote Transport');\n        else if (typeof id !== 'string')\n            throw new TypeError('missing id');\n        else if (typeof dataProducerId !== 'string')\n            throw new TypeError('missing dataProducerId');\n        else if (this.listenerCount('connect') === 0 && this._connectionState === 'new')\n            throw new TypeError('no \"connect\" listener set into this transport');\n        else if (appData && typeof appData !== 'object')\n            throw new TypeError('if given, appData must be an object');\n        // This may throw.\n        ortc.validateSctpStreamParameters(sctpStreamParameters);\n        // Enqueue command.\n        return this._awaitQueue.push(async () => {\n            const { dataChannel } = await this._handler.receiveDataChannel({\n                sctpStreamParameters,\n                label,\n                protocol\n            });\n            const dataConsumer = new DataConsumer_1.DataConsumer({\n                id,\n                dataProducerId,\n                dataChannel,\n                sctpStreamParameters,\n                appData\n            });\n            this._dataConsumers.set(dataConsumer.id, dataConsumer);\n            this._handleDataConsumer(dataConsumer);\n            // Emit observer event.\n            this._observer.safeEmit('newdataconsumer', dataConsumer);\n            return dataConsumer;\n        }, 'transport.consumeData()');\n    }\n    _handleHandler() {\n        const handler = this._handler;\n        handler.on('@connect', ({ dtlsParameters }, callback, errback) => {\n            if (this._closed) {\n                errback(new errors_1.InvalidStateError('closed'));\n                return;\n            }\n            this.safeEmit('connect', { dtlsParameters }, callback, errback);\n        });\n        handler.on('@connectionstatechange', (connectionState) => {\n            if (connectionState === this._connectionState)\n                return;\n            logger.debug('connection state changed to %s', connectionState);\n            this._connectionState = connectionState;\n            if (!this._closed)\n                this.safeEmit('connectionstatechange', connectionState);\n        });\n    }\n    _handleProducer(producer) {\n        producer.on('@close', () => {\n            this._producers.delete(producer.id);\n            if (this._closed)\n                return;\n            this._awaitQueue.push(async () => this._handler.stopSending(producer.localId), 'producer @close event')\n                .catch((error) => logger.warn('producer.close() failed:%o', error));\n        });\n        producer.on('@replacetrack', (track, callback, errback) => {\n            this._awaitQueue.push(async () => this._handler.replaceTrack(producer.localId, track), 'producer @replacetrack event')\n                .then(callback)\n                .catch(errback);\n        });\n        producer.on('@setmaxspatiallayer', (spatialLayer, callback, errback) => {\n            this._awaitQueue.push(async () => (this._handler.setMaxSpatialLayer(producer.localId, spatialLayer)), 'producer @setmaxspatiallayer event')\n                .then(callback)\n                .catch(errback);\n        });\n        producer.on('@setrtpencodingparameters', (params, callback, errback) => {\n            this._awaitQueue.push(async () => (this._handler.setRtpEncodingParameters(producer.localId, params)), 'producer @setrtpencodingparameters event')\n                .then(callback)\n                .catch(errback);\n        });\n        producer.on('@getstats', (callback, errback) => {\n            if (this._closed)\n                return errback(new errors_1.InvalidStateError('closed'));\n            this._handler.getSenderStats(producer.localId)\n                .then(callback)\n                .catch(errback);\n        });\n    }\n    _handleConsumer(consumer) {\n        consumer.on('@close', () => {\n            this._consumers.delete(consumer.id);\n            if (this._closed)\n                return;\n            this._awaitQueue.push(async () => this._handler.stopReceiving(consumer.localId), 'consumer @close event')\n                .catch(() => { });\n        });\n        consumer.on('@pause', () => {\n            this._awaitQueue.push(async () => this._handler.pauseReceiving(consumer.localId), 'consumer @pause event')\n                .catch(() => { });\n        });\n        consumer.on('@resume', () => {\n            this._awaitQueue.push(async () => this._handler.resumeReceiving(consumer.localId), 'consumer @resume event')\n                .catch(() => { });\n        });\n        consumer.on('@getstats', (callback, errback) => {\n            if (this._closed)\n                return errback(new errors_1.InvalidStateError('closed'));\n            this._handler.getReceiverStats(consumer.localId)\n                .then(callback)\n                .catch(errback);\n        });\n    }\n    _handleDataProducer(dataProducer) {\n        dataProducer.on('@close', () => {\n            this._dataProducers.delete(dataProducer.id);\n        });\n    }\n    _handleDataConsumer(dataConsumer) {\n        dataConsumer.on('@close', () => {\n            this._dataConsumers.delete(dataConsumer.id);\n        });\n    }\n}\nexports.Transport = Transport;\n","var grammar = module.exports = {\n  v: [{\n    name: 'version',\n    reg: /^(\\d*)$/\n  }],\n  o: [{\n    // o=- 20518 0 IN IP4 203.0.113.1\n    // NB: sessionId will be a String in most cases because it is huge\n    name: 'origin',\n    reg: /^(\\S*) (\\d*) (\\d*) (\\S*) IP(\\d) (\\S*)/,\n    names: ['username', 'sessionId', 'sessionVersion', 'netType', 'ipVer', 'address'],\n    format: '%s %s %d %s IP%d %s'\n  }],\n  // default parsing of these only (though some of these feel outdated)\n  s: [{ name: 'name' }],\n  i: [{ name: 'description' }],\n  u: [{ name: 'uri' }],\n  e: [{ name: 'email' }],\n  p: [{ name: 'phone' }],\n  z: [{ name: 'timezones' }], // TODO: this one can actually be parsed properly...\n  r: [{ name: 'repeats' }],   // TODO: this one can also be parsed properly\n  // k: [{}], // outdated thing ignored\n  t: [{\n    // t=0 0\n    name: 'timing',\n    reg: /^(\\d*) (\\d*)/,\n    names: ['start', 'stop'],\n    format: '%d %d'\n  }],\n  c: [{\n    // c=IN IP4 10.47.197.26\n    name: 'connection',\n    reg: /^IN IP(\\d) (\\S*)/,\n    names: ['version', 'ip'],\n    format: 'IN IP%d %s'\n  }],\n  b: [{\n    // b=AS:4000\n    push: 'bandwidth',\n    reg: /^(TIAS|AS|CT|RR|RS):(\\d*)/,\n    names: ['type', 'limit'],\n    format: '%s:%s'\n  }],\n  m: [{\n    // m=video 51744 RTP/AVP 126 97 98 34 31\n    // NB: special - pushes to session\n    // TODO: rtp/fmtp should be filtered by the payloads found here?\n    reg: /^(\\w*) (\\d*) ([\\w/]*)(?: (.*))?/,\n    names: ['type', 'port', 'protocol', 'payloads'],\n    format: '%s %d %s %s'\n  }],\n  a: [\n    {\n      // a=rtpmap:110 opus/48000/2\n      push: 'rtp',\n      reg: /^rtpmap:(\\d*) ([\\w\\-.]*)(?:\\s*\\/(\\d*)(?:\\s*\\/(\\S*))?)?/,\n      names: ['payload', 'codec', 'rate', 'encoding'],\n      format: function (o) {\n        return (o.encoding)\n          ? 'rtpmap:%d %s/%s/%s'\n          : o.rate\n            ? 'rtpmap:%d %s/%s'\n            : 'rtpmap:%d %s';\n      }\n    },\n    {\n      // a=fmtp:108 profile-level-id=24;object=23;bitrate=64000\n      // a=fmtp:111 minptime=10; useinbandfec=1\n      push: 'fmtp',\n      reg: /^fmtp:(\\d*) ([\\S| ]*)/,\n      names: ['payload', 'config'],\n      format: 'fmtp:%d %s'\n    },\n    {\n      // a=control:streamid=0\n      name: 'control',\n      reg: /^control:(.*)/,\n      format: 'control:%s'\n    },\n    {\n      // a=rtcp:65179 IN IP4 193.84.77.194\n      name: 'rtcp',\n      reg: /^rtcp:(\\d*)(?: (\\S*) IP(\\d) (\\S*))?/,\n      names: ['port', 'netType', 'ipVer', 'address'],\n      format: function (o) {\n        return (o.address != null)\n          ? 'rtcp:%d %s IP%d %s'\n          : 'rtcp:%d';\n      }\n    },\n    {\n      // a=rtcp-fb:98 trr-int 100\n      push: 'rtcpFbTrrInt',\n      reg: /^rtcp-fb:(\\*|\\d*) trr-int (\\d*)/,\n      names: ['payload', 'value'],\n      format: 'rtcp-fb:%s trr-int %d'\n    },\n    {\n      // a=rtcp-fb:98 nack rpsi\n      push: 'rtcpFb',\n      reg: /^rtcp-fb:(\\*|\\d*) ([\\w-_]*)(?: ([\\w-_]*))?/,\n      names: ['payload', 'type', 'subtype'],\n      format: function (o) {\n        return (o.subtype != null)\n          ? 'rtcp-fb:%s %s %s'\n          : 'rtcp-fb:%s %s';\n      }\n    },\n    {\n      // a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n      // a=extmap:1/recvonly URI-gps-string\n      // a=extmap:3 urn:ietf:params:rtp-hdrext:encrypt urn:ietf:params:rtp-hdrext:smpte-tc 25@600/24\n      push: 'ext',\n      reg: /^extmap:(\\d+)(?:\\/(\\w+))?(?: (urn:ietf:params:rtp-hdrext:encrypt))? (\\S*)(?: (\\S*))?/,\n      names: ['value', 'direction', 'encrypt-uri', 'uri', 'config'],\n      format: function (o) {\n        return (\n          'extmap:%d' +\n          (o.direction ? '/%s' : '%v') +\n          (o['encrypt-uri'] ? ' %s' : '%v') +\n          ' %s' +\n          (o.config ? ' %s' : '')\n        );\n      }\n    },\n    {\n      // a=extmap-allow-mixed\n      name: 'extmapAllowMixed',\n      reg: /^(extmap-allow-mixed)/\n    },\n    {\n      // a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:PS1uQCVeeCFCanVmcjkpPywjNWhcYD0mXXtxaVBR|2^20|1:32\n      push: 'crypto',\n      reg: /^crypto:(\\d*) ([\\w_]*) (\\S*)(?: (\\S*))?/,\n      names: ['id', 'suite', 'config', 'sessionConfig'],\n      format: function (o) {\n        return (o.sessionConfig != null)\n          ? 'crypto:%d %s %s %s'\n          : 'crypto:%d %s %s';\n      }\n    },\n    {\n      // a=setup:actpass\n      name: 'setup',\n      reg: /^setup:(\\w*)/,\n      format: 'setup:%s'\n    },\n    {\n      // a=connection:new\n      name: 'connectionType',\n      reg: /^connection:(new|existing)/,\n      format: 'connection:%s'\n    },\n    {\n      // a=mid:1\n      name: 'mid',\n      reg: /^mid:([^\\s]*)/,\n      format: 'mid:%s'\n    },\n    {\n      // a=msid:0c8b064d-d807-43b4-b434-f92a889d8587 98178685-d409-46e0-8e16-7ef0db0db64a\n      name: 'msid',\n      reg: /^msid:(.*)/,\n      format: 'msid:%s'\n    },\n    {\n      // a=ptime:20\n      name: 'ptime',\n      reg: /^ptime:(\\d*(?:\\.\\d*)*)/,\n      format: 'ptime:%d'\n    },\n    {\n      // a=maxptime:60\n      name: 'maxptime',\n      reg: /^maxptime:(\\d*(?:\\.\\d*)*)/,\n      format: 'maxptime:%d'\n    },\n    {\n      // a=sendrecv\n      name: 'direction',\n      reg: /^(sendrecv|recvonly|sendonly|inactive)/\n    },\n    {\n      // a=ice-lite\n      name: 'icelite',\n      reg: /^(ice-lite)/\n    },\n    {\n      // a=ice-ufrag:F7gI\n      name: 'iceUfrag',\n      reg: /^ice-ufrag:(\\S*)/,\n      format: 'ice-ufrag:%s'\n    },\n    {\n      // a=ice-pwd:x9cml/YzichV2+XlhiMu8g\n      name: 'icePwd',\n      reg: /^ice-pwd:(\\S*)/,\n      format: 'ice-pwd:%s'\n    },\n    {\n      // a=fingerprint:SHA-1 00:11:22:33:44:55:66:77:88:99:AA:BB:CC:DD:EE:FF:00:11:22:33\n      name: 'fingerprint',\n      reg: /^fingerprint:(\\S*) (\\S*)/,\n      names: ['type', 'hash'],\n      format: 'fingerprint:%s %s'\n    },\n    {\n      // a=candidate:0 1 UDP 2113667327 203.0.113.1 54400 typ host\n      // a=candidate:1162875081 1 udp 2113937151 192.168.34.75 60017 typ host generation 0 network-id 3 network-cost 10\n      // a=candidate:3289912957 2 udp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 generation 0 network-id 3 network-cost 10\n      // a=candidate:229815620 1 tcp 1518280447 192.168.150.19 60017 typ host tcptype active generation 0 network-id 3 network-cost 10\n      // a=candidate:3289912957 2 tcp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 tcptype passive generation 0 network-id 3 network-cost 10\n      push:'candidates',\n      reg: /^candidate:(\\S*) (\\d*) (\\S*) (\\d*) (\\S*) (\\d*) typ (\\S*)(?: raddr (\\S*) rport (\\d*))?(?: tcptype (\\S*))?(?: generation (\\d*))?(?: network-id (\\d*))?(?: network-cost (\\d*))?/,\n      names: ['foundation', 'component', 'transport', 'priority', 'ip', 'port', 'type', 'raddr', 'rport', 'tcptype', 'generation', 'network-id', 'network-cost'],\n      format: function (o) {\n        var str = 'candidate:%s %d %s %d %s %d typ %s';\n\n        str += (o.raddr != null) ? ' raddr %s rport %d' : '%v%v';\n\n        // NB: candidate has three optional chunks, so %void middles one if it's missing\n        str += (o.tcptype != null) ? ' tcptype %s' : '%v';\n\n        if (o.generation != null) {\n          str += ' generation %d';\n        }\n\n        str += (o['network-id'] != null) ? ' network-id %d' : '%v';\n        str += (o['network-cost'] != null) ? ' network-cost %d' : '%v';\n        return str;\n      }\n    },\n    {\n      // a=end-of-candidates (keep after the candidates line for readability)\n      name: 'endOfCandidates',\n      reg: /^(end-of-candidates)/\n    },\n    {\n      // a=remote-candidates:1 203.0.113.1 54400 2 203.0.113.1 54401 ...\n      name: 'remoteCandidates',\n      reg: /^remote-candidates:(.*)/,\n      format: 'remote-candidates:%s'\n    },\n    {\n      // a=ice-options:google-ice\n      name: 'iceOptions',\n      reg: /^ice-options:(\\S*)/,\n      format: 'ice-options:%s'\n    },\n    {\n      // a=ssrc:2566107569 cname:t9YU8M1UxTF8Y1A1\n      push: 'ssrcs',\n      reg: /^ssrc:(\\d*) ([\\w_-]*)(?::(.*))?/,\n      names: ['id', 'attribute', 'value'],\n      format: function (o) {\n        var str = 'ssrc:%d';\n        if (o.attribute != null) {\n          str += ' %s';\n          if (o.value != null) {\n            str += ':%s';\n          }\n        }\n        return str;\n      }\n    },\n    {\n      // a=ssrc-group:FEC 1 2\n      // a=ssrc-group:FEC-FR 3004364195 1080772241\n      push: 'ssrcGroups',\n      // token-char = %x21 / %x23-27 / %x2A-2B / %x2D-2E / %x30-39 / %x41-5A / %x5E-7E\n      reg: /^ssrc-group:([\\x21\\x23\\x24\\x25\\x26\\x27\\x2A\\x2B\\x2D\\x2E\\w]*) (.*)/,\n      names: ['semantics', 'ssrcs'],\n      format: 'ssrc-group:%s %s'\n    },\n    {\n      // a=msid-semantic: WMS Jvlam5X3SX1OP6pn20zWogvaKJz5Hjf9OnlV\n      name: 'msidSemantic',\n      reg: /^msid-semantic:\\s?(\\w*) (\\S*)/,\n      names: ['semantic', 'token'],\n      format: 'msid-semantic: %s %s' // space after ':' is not accidental\n    },\n    {\n      // a=group:BUNDLE audio video\n      push: 'groups',\n      reg: /^group:(\\w*) (.*)/,\n      names: ['type', 'mids'],\n      format: 'group:%s %s'\n    },\n    {\n      // a=rtcp-mux\n      name: 'rtcpMux',\n      reg: /^(rtcp-mux)/\n    },\n    {\n      // a=rtcp-rsize\n      name: 'rtcpRsize',\n      reg: /^(rtcp-rsize)/\n    },\n    {\n      // a=sctpmap:5000 webrtc-datachannel 1024\n      name: 'sctpmap',\n      reg: /^sctpmap:([\\w_/]*) (\\S*)(?: (\\S*))?/,\n      names: ['sctpmapNumber', 'app', 'maxMessageSize'],\n      format: function (o) {\n        return (o.maxMessageSize != null)\n          ? 'sctpmap:%s %s %s'\n          : 'sctpmap:%s %s';\n      }\n    },\n    {\n      // a=x-google-flag:conference\n      name: 'xGoogleFlag',\n      reg: /^x-google-flag:([^\\s]*)/,\n      format: 'x-google-flag:%s'\n    },\n    {\n      // a=rid:1 send max-width=1280;max-height=720;max-fps=30;depend=0\n      push: 'rids',\n      reg: /^rid:([\\d\\w]+) (\\w+)(?: ([\\S| ]*))?/,\n      names: ['id', 'direction', 'params'],\n      format: function (o) {\n        return (o.params) ? 'rid:%s %s %s' : 'rid:%s %s';\n      }\n    },\n    {\n      // a=imageattr:97 send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320] recv [x=330,y=250]\n      // a=imageattr:* send [x=800,y=640] recv *\n      // a=imageattr:100 recv [x=320,y=240]\n      push: 'imageattrs',\n      reg: new RegExp(\n        // a=imageattr:97\n        '^imageattr:(\\\\d+|\\\\*)' +\n        // send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320]\n        '[\\\\s\\\\t]+(send|recv)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*)' +\n        // recv [x=330,y=250]\n        '(?:[\\\\s\\\\t]+(recv|send)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*))?'\n      ),\n      names: ['pt', 'dir1', 'attrs1', 'dir2', 'attrs2'],\n      format: function (o) {\n        return 'imageattr:%s %s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    {\n      // a=simulcast:send 1,2,3;~4,~5 recv 6;~7,~8\n      // a=simulcast:recv 1;4,5 send 6;7\n      name: 'simulcast',\n      reg: new RegExp(\n        // a=simulcast:\n        '^simulcast:' +\n        // send 1,2,3;~4,~5\n        '(send|recv) ([a-zA-Z0-9\\\\-_~;,]+)' +\n        // space + recv 6;~7,~8\n        '(?:\\\\s?(send|recv) ([a-zA-Z0-9\\\\-_~;,]+))?' +\n        // end\n        '$'\n      ),\n      names: ['dir1', 'list1', 'dir2', 'list2'],\n      format: function (o) {\n        return 'simulcast:%s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    {\n      // old simulcast draft 03 (implemented by Firefox)\n      //   https://tools.ietf.org/html/draft-ietf-mmusic-sdp-simulcast-03\n      // a=simulcast: recv pt=97;98 send pt=97\n      // a=simulcast: send rid=5;6;7 paused=6,7\n      name: 'simulcast_03',\n      reg: /^simulcast:[\\s\\t]+([\\S+\\s\\t]+)$/,\n      names: ['value'],\n      format: 'simulcast: %s'\n    },\n    {\n      // a=framerate:25\n      // a=framerate:29.97\n      name: 'framerate',\n      reg: /^framerate:(\\d+(?:$|\\.\\d+))/,\n      format: 'framerate:%s'\n    },\n    {\n      // RFC4570\n      // a=source-filter: incl IN IP4 239.5.2.31 10.1.15.5\n      name: 'sourceFilter',\n      reg: /^source-filter: *(excl|incl) (\\S*) (IP4|IP6|\\*) (\\S*) (.*)/,\n      names: ['filterMode', 'netType', 'addressTypes', 'destAddress', 'srcList'],\n      format: 'source-filter: %s %s %s %s %s'\n    },\n    {\n      // a=bundle-only\n      name: 'bundleOnly',\n      reg: /^(bundle-only)/\n    },\n    {\n      // a=label:1\n      name: 'label',\n      reg: /^label:(.+)/,\n      format: 'label:%s'\n    },\n    {\n      // RFC version 26 for SCTP over DTLS\n      // https://tools.ietf.org/html/draft-ietf-mmusic-sctp-sdp-26#section-5\n      name: 'sctpPort',\n      reg: /^sctp-port:(\\d+)$/,\n      format: 'sctp-port:%s'\n    },\n    {\n      // RFC version 26 for SCTP over DTLS\n      // https://tools.ietf.org/html/draft-ietf-mmusic-sctp-sdp-26#section-6\n      name: 'maxMessageSize',\n      reg: /^max-message-size:(\\d+)$/,\n      format: 'max-message-size:%s'\n    },\n    {\n      // RFC7273\n      // a=ts-refclk:ptp=IEEE1588-2008:39-A7-94-FF-FE-07-CB-D0:37\n      push:'tsRefClocks',\n      reg: /^ts-refclk:([^\\s=]*)(?:=(\\S*))?/,\n      names: ['clksrc', 'clksrcExt'],\n      format: function (o) {\n        return 'ts-refclk:%s' + (o.clksrcExt != null ? '=%s' : '');\n      }\n    },\n    {\n      // RFC7273\n      // a=mediaclk:direct=963214424\n      name:'mediaClk',\n      reg: /^mediaclk:(?:id=(\\S*))? *([^\\s=]*)(?:=(\\S*))?(?: *rate=(\\d+)\\/(\\d+))?/,\n      names: ['id', 'mediaClockName', 'mediaClockValue', 'rateNumerator', 'rateDenominator'],\n      format: function (o) {\n        var str = 'mediaclk:';\n        str += (o.id != null ? 'id=%s %s' : '%v%s');\n        str += (o.mediaClockValue != null ? '=%s' : '');\n        str += (o.rateNumerator != null ? ' rate=%s' : '');\n        str += (o.rateDenominator != null ? '/%s' : '');\n        return str;\n      }\n    },\n    {\n      // a=keywds:keywords\n      name: 'keywords',\n      reg: /^keywds:(.+)$/,\n      format: 'keywds:%s'\n    },\n    {\n      // a=content:main\n      name: 'content',\n      reg: /^content:(.+)/,\n      format: 'content:%s'\n    },\n    // BFCP https://tools.ietf.org/html/rfc4583\n    {\n      // a=floorctrl:c-s\n      name: 'bfcpFloorCtrl',\n      reg: /^floorctrl:(c-only|s-only|c-s)/,\n      format: 'floorctrl:%s'\n    },\n    {\n      // a=confid:1\n      name: 'bfcpConfId',\n      reg: /^confid:(\\d+)/,\n      format: 'confid:%s'\n    },\n    {\n      // a=userid:1\n      name: 'bfcpUserId',\n      reg: /^userid:(\\d+)/,\n      format: 'userid:%s'\n    },\n    {\n      // a=floorid:1\n      name: 'bfcpFloorId',\n      reg: /^floorid:(.+) (?:m-stream|mstrm):(.+)/,\n      names: ['id', 'mStream'],\n      format: 'floorid:%s mstrm:%s'\n    },\n    {\n      // any a= that we don't understand is kept verbatim on media.invalid\n      push: 'invalid',\n      names: ['value']\n    }\n  ]\n};\n\n// set sensible defaults to avoid polluting the grammar with boring details\nObject.keys(grammar).forEach(function (key) {\n  var objs = grammar[key];\n  objs.forEach(function (obj) {\n    if (!obj.reg) {\n      obj.reg = /(.*)/;\n    }\n    if (!obj.format) {\n      obj.format = '%s';\n    }\n  });\n});\n","var toIntIfInt = function (v) {\n  return String(Number(v)) === v ? Number(v) : v;\n};\n\nvar attachProperties = function (match, location, names, rawName) {\n  if (rawName && !names) {\n    location[rawName] = toIntIfInt(match[1]);\n  }\n  else {\n    for (var i = 0; i < names.length; i += 1) {\n      if (match[i+1] != null) {\n        location[names[i]] = toIntIfInt(match[i+1]);\n      }\n    }\n  }\n};\n\nvar parseReg = function (obj, location, content) {\n  var needsBlank = obj.name && obj.names;\n  if (obj.push && !location[obj.push]) {\n    location[obj.push] = [];\n  }\n  else if (needsBlank && !location[obj.name]) {\n    location[obj.name] = {};\n  }\n  var keyLocation = obj.push ?\n    {} :  // blank object that will be pushed\n    needsBlank ? location[obj.name] : location; // otherwise, named location or root\n\n  attachProperties(content.match(obj.reg), keyLocation, obj.names, obj.name);\n\n  if (obj.push) {\n    location[obj.push].push(keyLocation);\n  }\n};\n\nvar grammar = require('./grammar');\nvar validLine = RegExp.prototype.test.bind(/^([a-z])=(.*)/);\n\nexports.parse = function (sdp) {\n  var session = {}\n    , media = []\n    , location = session; // points at where properties go under (one of the above)\n\n  // parse lines we understand\n  sdp.split(/(\\r\\n|\\r|\\n)/).filter(validLine).forEach(function (l) {\n    var type = l[0];\n    var content = l.slice(2);\n    if (type === 'm') {\n      media.push({rtp: [], fmtp: []});\n      location = media[media.length-1]; // point at latest media line\n    }\n\n    for (var j = 0; j < (grammar[type] || []).length; j += 1) {\n      var obj = grammar[type][j];\n      if (obj.reg.test(content)) {\n        return parseReg(obj, location, content);\n      }\n    }\n  });\n\n  session.media = media; // link it up\n  return session;\n};\n\nvar paramReducer = function (acc, expr) {\n  var s = expr.split(/=(.+)/, 2);\n  if (s.length === 2) {\n    acc[s[0]] = toIntIfInt(s[1]);\n  } else if (s.length === 1 && expr.length > 1) {\n    acc[s[0]] = undefined;\n  }\n  return acc;\n};\n\nexports.parseParams = function (str) {\n  return str.split(/;\\s?/).reduce(paramReducer, {});\n};\n\n// For backward compatibility - alias will be removed in 3.0.0\nexports.parseFmtpConfig = exports.parseParams;\n\nexports.parsePayloads = function (str) {\n  return str.toString().split(' ').map(Number);\n};\n\nexports.parseRemoteCandidates = function (str) {\n  var candidates = [];\n  var parts = str.split(' ').map(toIntIfInt);\n  for (var i = 0; i < parts.length; i += 3) {\n    candidates.push({\n      component: parts[i],\n      ip: parts[i + 1],\n      port: parts[i + 2]\n    });\n  }\n  return candidates;\n};\n\nexports.parseImageAttributes = function (str) {\n  return str.split(' ').map(function (item) {\n    return item.substring(1, item.length-1).split(',').reduce(paramReducer, {});\n  });\n};\n\nexports.parseSimulcastStreamList = function (str) {\n  return str.split(';').map(function (stream) {\n    return stream.split(',').map(function (format) {\n      var scid, paused = false;\n\n      if (format[0] !== '~') {\n        scid = toIntIfInt(format);\n      } else {\n        scid = toIntIfInt(format.substring(1, format.length));\n        paused = true;\n      }\n\n      return {\n        scid: scid,\n        paused: paused\n      };\n    });\n  });\n};\n","var grammar = require('./grammar');\n\n// customized util.format - discards excess arguments and can void middle ones\nvar formatRegExp = /%[sdv%]/g;\nvar format = function (formatStr) {\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  return formatStr.replace(formatRegExp, function (x) {\n    if (i >= len) {\n      return x; // missing argument\n    }\n    var arg = args[i];\n    i += 1;\n    switch (x) {\n    case '%%':\n      return '%';\n    case '%s':\n      return String(arg);\n    case '%d':\n      return Number(arg);\n    case '%v':\n      return '';\n    }\n  });\n  // NB: we discard excess arguments - they are typically undefined from makeLine\n};\n\nvar makeLine = function (type, obj, location) {\n  var str = obj.format instanceof Function ?\n    (obj.format(obj.push ? location : location[obj.name])) :\n    obj.format;\n\n  var args = [type + '=' + str];\n  if (obj.names) {\n    for (var i = 0; i < obj.names.length; i += 1) {\n      var n = obj.names[i];\n      if (obj.name) {\n        args.push(location[obj.name][n]);\n      }\n      else { // for mLine and push attributes\n        args.push(location[obj.names[i]]);\n      }\n    }\n  }\n  else {\n    args.push(location[obj.name]);\n  }\n  return format.apply(null, args);\n};\n\n// RFC specified order\n// TODO: extend this with all the rest\nvar defaultOuterOrder = [\n  'v', 'o', 's', 'i',\n  'u', 'e', 'p', 'c',\n  'b', 't', 'r', 'z', 'a'\n];\nvar defaultInnerOrder = ['i', 'c', 'b', 'a'];\n\n\nmodule.exports = function (session, opts) {\n  opts = opts || {};\n  // ensure certain properties exist\n  if (session.version == null) {\n    session.version = 0; // 'v=0' must be there (only defined version atm)\n  }\n  if (session.name == null) {\n    session.name = ' '; // 's= ' must be there if no meaningful name set\n  }\n  session.media.forEach(function (mLine) {\n    if (mLine.payloads == null) {\n      mLine.payloads = '';\n    }\n  });\n\n  var outerOrder = opts.outerOrder || defaultOuterOrder;\n  var innerOrder = opts.innerOrder || defaultInnerOrder;\n  var sdp = [];\n\n  // loop through outerOrder for matching properties on session\n  outerOrder.forEach(function (type) {\n    grammar[type].forEach(function (obj) {\n      if (obj.name in session && session[obj.name] != null) {\n        sdp.push(makeLine(type, obj, session));\n      }\n      else if (obj.push in session && session[obj.push] != null) {\n        session[obj.push].forEach(function (el) {\n          sdp.push(makeLine(type, obj, el));\n        });\n      }\n    });\n  });\n\n  // then for each media line, follow the innerOrder\n  session.media.forEach(function (mLine) {\n    sdp.push(makeLine('m', grammar.m[0], mLine));\n\n    innerOrder.forEach(function (type) {\n      grammar[type].forEach(function (obj) {\n        if (obj.name in mLine && mLine[obj.name] != null) {\n          sdp.push(makeLine(type, obj, mLine));\n        }\n        else if (obj.push in mLine && mLine[obj.push] != null) {\n          mLine[obj.push].forEach(function (el) {\n            sdp.push(makeLine(type, obj, el));\n          });\n        }\n      });\n    });\n  });\n\n  return sdp.join('\\r\\n') + '\\r\\n';\n};\n","var parser = require('./parser');\nvar writer = require('./writer');\n\nexports.write = writer;\nexports.parse = parser.parse;\nexports.parseParams = parser.parseParams;\nexports.parseFmtpConfig = parser.parseFmtpConfig; // Alias of parseParams().\nexports.parsePayloads = parser.parsePayloads;\nexports.parseRemoteCandidates = parser.parseRemoteCandidates;\nexports.parseImageAttributes = parser.parseImageAttributes;\nexports.parseSimulcastStreamList = parser.parseSimulcastStreamList;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.applyCodecParameters = exports.getCname = exports.extractDtlsParameters = exports.extractRtpCapabilities = void 0;\nconst sdpTransform = __importStar(require(\"sdp-transform\"));\nfunction extractRtpCapabilities({ sdpObject }) {\n    // Map of RtpCodecParameters indexed by payload type.\n    const codecsMap = new Map();\n    // Array of RtpHeaderExtensions.\n    const headerExtensions = [];\n    // Whether a m=audio/video section has been already found.\n    let gotAudio = false;\n    let gotVideo = false;\n    for (const m of sdpObject.media) {\n        const kind = m.type;\n        switch (kind) {\n            case 'audio':\n                {\n                    if (gotAudio)\n                        continue;\n                    gotAudio = true;\n                    break;\n                }\n            case 'video':\n                {\n                    if (gotVideo)\n                        continue;\n                    gotVideo = true;\n                    break;\n                }\n            default:\n                {\n                    continue;\n                }\n        }\n        // Get codecs.\n        for (const rtp of m.rtp) {\n            const codec = {\n                kind: kind,\n                mimeType: `${kind}/${rtp.codec}`,\n                preferredPayloadType: rtp.payload,\n                clockRate: rtp.rate,\n                channels: rtp.encoding,\n                parameters: {},\n                rtcpFeedback: []\n            };\n            codecsMap.set(codec.preferredPayloadType, codec);\n        }\n        // Get codec parameters.\n        for (const fmtp of m.fmtp || []) {\n            const parameters = sdpTransform.parseParams(fmtp.config);\n            const codec = codecsMap.get(fmtp.payload);\n            if (!codec)\n                continue;\n            // Specials case to convert parameter value to string.\n            if (parameters && parameters.hasOwnProperty('profile-level-id'))\n                parameters['profile-level-id'] = String(parameters['profile-level-id']);\n            codec.parameters = parameters;\n        }\n        // Get RTCP feedback for each codec.\n        for (const fb of m.rtcpFb || []) {\n            const codec = codecsMap.get(fb.payload);\n            if (!codec)\n                continue;\n            const feedback = {\n                type: fb.type,\n                parameter: fb.subtype\n            };\n            if (!feedback.parameter)\n                delete feedback.parameter;\n            codec.rtcpFeedback.push(feedback);\n        }\n        // Get RTP header extensions.\n        for (const ext of m.ext || []) {\n            // Ignore encrypted extensions (not yet supported in mediasoup).\n            if (ext['encrypt-uri'])\n                continue;\n            const headerExtension = {\n                kind: kind,\n                uri: ext.uri,\n                preferredId: ext.value\n            };\n            headerExtensions.push(headerExtension);\n        }\n    }\n    const rtpCapabilities = {\n        codecs: Array.from(codecsMap.values()),\n        headerExtensions: headerExtensions\n    };\n    return rtpCapabilities;\n}\nexports.extractRtpCapabilities = extractRtpCapabilities;\nfunction extractDtlsParameters({ sdpObject }) {\n    const mediaObject = (sdpObject.media || [])\n        .find((m) => (m.iceUfrag && m.port !== 0));\n    if (!mediaObject)\n        throw new Error('no active media section found');\n    const fingerprint = mediaObject.fingerprint || sdpObject.fingerprint;\n    let role;\n    switch (mediaObject.setup) {\n        case 'active':\n            role = 'client';\n            break;\n        case 'passive':\n            role = 'server';\n            break;\n        case 'actpass':\n            role = 'auto';\n            break;\n    }\n    const dtlsParameters = {\n        role,\n        fingerprints: [\n            {\n                algorithm: fingerprint.type,\n                value: fingerprint.hash\n            }\n        ]\n    };\n    return dtlsParameters;\n}\nexports.extractDtlsParameters = extractDtlsParameters;\nfunction getCname({ offerMediaObject }) {\n    const ssrcCnameLine = (offerMediaObject.ssrcs || [])\n        .find((line) => line.attribute === 'cname');\n    if (!ssrcCnameLine)\n        return '';\n    return ssrcCnameLine.value;\n}\nexports.getCname = getCname;\n/**\n * Apply codec parameters in the given SDP m= section answer based on the\n * given RTP parameters of an offer.\n */\nfunction applyCodecParameters({ offerRtpParameters, answerMediaObject }) {\n    for (const codec of offerRtpParameters.codecs) {\n        const mimeType = codec.mimeType.toLowerCase();\n        // Avoid parsing codec parameters for unhandled codecs.\n        if (mimeType !== 'audio/opus')\n            continue;\n        const rtp = (answerMediaObject.rtp || [])\n            .find((r) => r.payload === codec.payloadType);\n        if (!rtp)\n            continue;\n        // Just in case.\n        answerMediaObject.fmtp = answerMediaObject.fmtp || [];\n        let fmtp = answerMediaObject.fmtp\n            .find((f) => f.payload === codec.payloadType);\n        if (!fmtp) {\n            fmtp = { payload: codec.payloadType, config: '' };\n            answerMediaObject.fmtp.push(fmtp);\n        }\n        const parameters = sdpTransform.parseParams(fmtp.config);\n        switch (mimeType) {\n            case 'audio/opus':\n                {\n                    const spropStereo = codec.parameters['sprop-stereo'];\n                    if (spropStereo !== undefined)\n                        parameters.stereo = spropStereo ? 1 : 0;\n                    break;\n                }\n        }\n        // Write the codec fmtp.config back.\n        fmtp.config = '';\n        for (const key of Object.keys(parameters)) {\n            if (fmtp.config)\n                fmtp.config += ';';\n            fmtp.config += `${key}=${parameters[key]}`;\n        }\n    }\n}\nexports.applyCodecParameters = applyCodecParameters;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addLegacySimulcast = exports.getRtpEncodings = void 0;\nfunction getRtpEncodings({ offerMediaObject }) {\n    const ssrcs = new Set();\n    for (const line of offerMediaObject.ssrcs || []) {\n        const ssrc = line.id;\n        ssrcs.add(ssrc);\n    }\n    if (ssrcs.size === 0)\n        throw new Error('no a=ssrc lines found');\n    const ssrcToRtxSsrc = new Map();\n    // First assume RTX is used.\n    for (const line of offerMediaObject.ssrcGroups || []) {\n        if (line.semantics !== 'FID')\n            continue;\n        let [ssrc, rtxSsrc] = line.ssrcs.split(/\\s+/);\n        ssrc = Number(ssrc);\n        rtxSsrc = Number(rtxSsrc);\n        if (ssrcs.has(ssrc)) {\n            // Remove both the SSRC and RTX SSRC from the set so later we know that they\n            // are already handled.\n            ssrcs.delete(ssrc);\n            ssrcs.delete(rtxSsrc);\n            // Add to the map.\n            ssrcToRtxSsrc.set(ssrc, rtxSsrc);\n        }\n    }\n    // If the set of SSRCs is not empty it means that RTX is not being used, so take\n    // media SSRCs from there.\n    for (const ssrc of ssrcs) {\n        // Add to the map.\n        ssrcToRtxSsrc.set(ssrc, null);\n    }\n    const encodings = [];\n    for (const [ssrc, rtxSsrc] of ssrcToRtxSsrc) {\n        const encoding = { ssrc };\n        if (rtxSsrc)\n            encoding.rtx = { ssrc: rtxSsrc };\n        encodings.push(encoding);\n    }\n    return encodings;\n}\nexports.getRtpEncodings = getRtpEncodings;\n/**\n * Adds multi-ssrc based simulcast into the given SDP media section offer.\n */\nfunction addLegacySimulcast({ offerMediaObject, numStreams }) {\n    if (numStreams <= 1)\n        throw new TypeError('numStreams must be greater than 1');\n    // Get the SSRC.\n    const ssrcMsidLine = (offerMediaObject.ssrcs || [])\n        .find((line) => line.attribute === 'msid');\n    if (!ssrcMsidLine)\n        throw new Error('a=ssrc line with msid information not found');\n    const [streamId, trackId] = ssrcMsidLine.value.split(' ');\n    const firstSsrc = ssrcMsidLine.id;\n    let firstRtxSsrc;\n    // Get the SSRC for RTX.\n    (offerMediaObject.ssrcGroups || [])\n        .some((line) => {\n        if (line.semantics !== 'FID')\n            return false;\n        const ssrcs = line.ssrcs.split(/\\s+/);\n        if (Number(ssrcs[0]) === firstSsrc) {\n            firstRtxSsrc = Number(ssrcs[1]);\n            return true;\n        }\n        else {\n            return false;\n        }\n    });\n    const ssrcCnameLine = offerMediaObject.ssrcs\n        .find((line) => line.attribute === 'cname');\n    if (!ssrcCnameLine)\n        throw new Error('a=ssrc line with cname information not found');\n    const cname = ssrcCnameLine.value;\n    const ssrcs = [];\n    const rtxSsrcs = [];\n    for (let i = 0; i < numStreams; ++i) {\n        ssrcs.push(firstSsrc + i);\n        if (firstRtxSsrc)\n            rtxSsrcs.push(firstRtxSsrc + i);\n    }\n    offerMediaObject.ssrcGroups = [];\n    offerMediaObject.ssrcs = [];\n    offerMediaObject.ssrcGroups.push({\n        semantics: 'SIM',\n        ssrcs: ssrcs.join(' ')\n    });\n    for (let i = 0; i < ssrcs.length; ++i) {\n        const ssrc = ssrcs[i];\n        offerMediaObject.ssrcs.push({\n            id: ssrc,\n            attribute: 'cname',\n            value: cname\n        });\n        offerMediaObject.ssrcs.push({\n            id: ssrc,\n            attribute: 'msid',\n            value: `${streamId} ${trackId}`\n        });\n    }\n    for (let i = 0; i < rtxSsrcs.length; ++i) {\n        const ssrc = ssrcs[i];\n        const rtxSsrc = rtxSsrcs[i];\n        offerMediaObject.ssrcs.push({\n            id: rtxSsrc,\n            attribute: 'cname',\n            value: cname\n        });\n        offerMediaObject.ssrcs.push({\n            id: rtxSsrc,\n            attribute: 'msid',\n            value: `${streamId} ${trackId}`\n        });\n        offerMediaObject.ssrcGroups.push({\n            semantics: 'FID',\n            ssrcs: `${ssrc} ${rtxSsrc}`\n        });\n    }\n}\nexports.addLegacySimulcast = addLegacySimulcast;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HandlerInterface = void 0;\nconst EnhancedEventEmitter_1 = require(\"../EnhancedEventEmitter\");\nclass HandlerInterface extends EnhancedEventEmitter_1.EnhancedEventEmitter {\n    /**\n     * @emits @connect - (\n     *     { dtlsParameters: DtlsParameters },\n     *     callback: Function,\n     *     errback: Function\n     *   )\n     * @emits @connectionstatechange - (connectionState: ConnectionState)\n     */\n    constructor() {\n        super();\n    }\n}\nexports.HandlerInterface = HandlerInterface;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OfferMediaSection = exports.AnswerMediaSection = exports.MediaSection = void 0;\nconst utils = __importStar(require(\"../../utils\"));\nclass MediaSection {\n    constructor({ iceParameters, iceCandidates, dtlsParameters, planB = false }) {\n        this._mediaObject = {};\n        this._planB = planB;\n        if (iceParameters) {\n            this.setIceParameters(iceParameters);\n        }\n        if (iceCandidates) {\n            this._mediaObject.candidates = [];\n            for (const candidate of iceCandidates) {\n                const candidateObject = {};\n                // mediasoup does mandates rtcp-mux so candidates component is always\n                // RTP (1).\n                candidateObject.component = 1;\n                candidateObject.foundation = candidate.foundation;\n                candidateObject.ip = candidate.ip;\n                candidateObject.port = candidate.port;\n                candidateObject.priority = candidate.priority;\n                candidateObject.transport = candidate.protocol;\n                candidateObject.type = candidate.type;\n                if (candidate.tcpType)\n                    candidateObject.tcptype = candidate.tcpType;\n                this._mediaObject.candidates.push(candidateObject);\n            }\n            this._mediaObject.endOfCandidates = 'end-of-candidates';\n            this._mediaObject.iceOptions = 'renomination';\n        }\n        if (dtlsParameters) {\n            this.setDtlsRole(dtlsParameters.role);\n        }\n    }\n    get mid() {\n        return String(this._mediaObject.mid);\n    }\n    get closed() {\n        return this._mediaObject.port === 0;\n    }\n    getObject() {\n        return this._mediaObject;\n    }\n    setIceParameters(iceParameters) {\n        this._mediaObject.iceUfrag = iceParameters.usernameFragment;\n        this._mediaObject.icePwd = iceParameters.password;\n    }\n    disable() {\n        this._mediaObject.direction = 'inactive';\n        delete this._mediaObject.ext;\n        delete this._mediaObject.ssrcs;\n        delete this._mediaObject.ssrcGroups;\n        delete this._mediaObject.simulcast;\n        delete this._mediaObject.simulcast_03;\n        delete this._mediaObject.rids;\n    }\n    close() {\n        this._mediaObject.direction = 'inactive';\n        this._mediaObject.port = 0;\n        delete this._mediaObject.ext;\n        delete this._mediaObject.ssrcs;\n        delete this._mediaObject.ssrcGroups;\n        delete this._mediaObject.simulcast;\n        delete this._mediaObject.simulcast_03;\n        delete this._mediaObject.rids;\n        delete this._mediaObject.extmapAllowMixed;\n    }\n}\nexports.MediaSection = MediaSection;\nclass AnswerMediaSection extends MediaSection {\n    constructor({ iceParameters, iceCandidates, dtlsParameters, sctpParameters, plainRtpParameters, planB = false, offerMediaObject, offerRtpParameters, answerRtpParameters, codecOptions, extmapAllowMixed = false }) {\n        super({ iceParameters, iceCandidates, dtlsParameters, planB });\n        this._mediaObject.mid = String(offerMediaObject.mid);\n        this._mediaObject.type = offerMediaObject.type;\n        this._mediaObject.protocol = offerMediaObject.protocol;\n        if (!plainRtpParameters) {\n            this._mediaObject.connection = { ip: '127.0.0.1', version: 4 };\n            this._mediaObject.port = 7;\n        }\n        else {\n            this._mediaObject.connection =\n                {\n                    ip: plainRtpParameters.ip,\n                    version: plainRtpParameters.ipVersion\n                };\n            this._mediaObject.port = plainRtpParameters.port;\n        }\n        switch (offerMediaObject.type) {\n            case 'audio':\n            case 'video':\n                {\n                    this._mediaObject.direction = 'recvonly';\n                    this._mediaObject.rtp = [];\n                    this._mediaObject.rtcpFb = [];\n                    this._mediaObject.fmtp = [];\n                    for (const codec of answerRtpParameters.codecs) {\n                        const rtp = {\n                            payload: codec.payloadType,\n                            codec: getCodecName(codec),\n                            rate: codec.clockRate\n                        };\n                        if (codec.channels > 1)\n                            rtp.encoding = codec.channels;\n                        this._mediaObject.rtp.push(rtp);\n                        const codecParameters = utils.clone(codec.parameters, {});\n                        if (codecOptions) {\n                            const { opusStereo, opusFec, opusDtx, opusMaxPlaybackRate, opusMaxAverageBitrate, opusPtime, videoGoogleStartBitrate, videoGoogleMaxBitrate, videoGoogleMinBitrate } = codecOptions;\n                            const offerCodec = offerRtpParameters.codecs\n                                .find((c) => (c.payloadType === codec.payloadType));\n                            switch (codec.mimeType.toLowerCase()) {\n                                case 'audio/opus':\n                                    {\n                                        if (opusStereo !== undefined) {\n                                            offerCodec.parameters['sprop-stereo'] = opusStereo ? 1 : 0;\n                                            codecParameters.stereo = opusStereo ? 1 : 0;\n                                        }\n                                        if (opusFec !== undefined) {\n                                            offerCodec.parameters.useinbandfec = opusFec ? 1 : 0;\n                                            codecParameters.useinbandfec = opusFec ? 1 : 0;\n                                        }\n                                        if (opusDtx !== undefined) {\n                                            offerCodec.parameters.usedtx = opusDtx ? 1 : 0;\n                                            codecParameters.usedtx = opusDtx ? 1 : 0;\n                                        }\n                                        if (opusMaxPlaybackRate !== undefined) {\n                                            codecParameters.maxplaybackrate = opusMaxPlaybackRate;\n                                        }\n                                        if (opusMaxAverageBitrate !== undefined) {\n                                            codecParameters.maxaveragebitrate = opusMaxAverageBitrate;\n                                        }\n                                        if (opusPtime !== undefined) {\n                                            offerCodec.parameters.ptime = opusPtime;\n                                            codecParameters.ptime = opusPtime;\n                                        }\n                                        break;\n                                    }\n                                case 'video/vp8':\n                                case 'video/vp9':\n                                case 'video/h264':\n                                case 'video/h265':\n                                    {\n                                        if (videoGoogleStartBitrate !== undefined)\n                                            codecParameters['x-google-start-bitrate'] = videoGoogleStartBitrate;\n                                        if (videoGoogleMaxBitrate !== undefined)\n                                            codecParameters['x-google-max-bitrate'] = videoGoogleMaxBitrate;\n                                        if (videoGoogleMinBitrate !== undefined)\n                                            codecParameters['x-google-min-bitrate'] = videoGoogleMinBitrate;\n                                        break;\n                                    }\n                            }\n                        }\n                        const fmtp = {\n                            payload: codec.payloadType,\n                            config: ''\n                        };\n                        for (const key of Object.keys(codecParameters)) {\n                            if (fmtp.config)\n                                fmtp.config += ';';\n                            fmtp.config += `${key}=${codecParameters[key]}`;\n                        }\n                        if (fmtp.config)\n                            this._mediaObject.fmtp.push(fmtp);\n                        for (const fb of codec.rtcpFeedback) {\n                            this._mediaObject.rtcpFb.push({\n                                payload: codec.payloadType,\n                                type: fb.type,\n                                subtype: fb.parameter\n                            });\n                        }\n                    }\n                    this._mediaObject.payloads = answerRtpParameters.codecs\n                        .map((codec) => codec.payloadType)\n                        .join(' ');\n                    this._mediaObject.ext = [];\n                    for (const ext of answerRtpParameters.headerExtensions) {\n                        // Don't add a header extension if not present in the offer.\n                        const found = (offerMediaObject.ext || [])\n                            .some((localExt) => localExt.uri === ext.uri);\n                        if (!found)\n                            continue;\n                        this._mediaObject.ext.push({\n                            uri: ext.uri,\n                            value: ext.id\n                        });\n                    }\n                    // Allow both 1 byte and 2 bytes length header extensions.\n                    if (extmapAllowMixed &&\n                        offerMediaObject.extmapAllowMixed === 'extmap-allow-mixed') {\n                        this._mediaObject.extmapAllowMixed = 'extmap-allow-mixed';\n                    }\n                    // Simulcast.\n                    if (offerMediaObject.simulcast) {\n                        this._mediaObject.simulcast =\n                            {\n                                dir1: 'recv',\n                                list1: offerMediaObject.simulcast.list1\n                            };\n                        this._mediaObject.rids = [];\n                        for (const rid of offerMediaObject.rids || []) {\n                            if (rid.direction !== 'send')\n                                continue;\n                            this._mediaObject.rids.push({\n                                id: rid.id,\n                                direction: 'recv'\n                            });\n                        }\n                    }\n                    // Simulcast (draft version 03).\n                    else if (offerMediaObject.simulcast_03) {\n                        // eslint-disable-next-line camelcase\n                        this._mediaObject.simulcast_03 =\n                            {\n                                value: offerMediaObject.simulcast_03.value.replace(/send/g, 'recv')\n                            };\n                        this._mediaObject.rids = [];\n                        for (const rid of offerMediaObject.rids || []) {\n                            if (rid.direction !== 'send')\n                                continue;\n                            this._mediaObject.rids.push({\n                                id: rid.id,\n                                direction: 'recv'\n                            });\n                        }\n                    }\n                    this._mediaObject.rtcpMux = 'rtcp-mux';\n                    this._mediaObject.rtcpRsize = 'rtcp-rsize';\n                    if (this._planB && this._mediaObject.type === 'video')\n                        this._mediaObject.xGoogleFlag = 'conference';\n                    break;\n                }\n            case 'application':\n                {\n                    // New spec.\n                    if (typeof offerMediaObject.sctpPort === 'number') {\n                        this._mediaObject.payloads = 'webrtc-datachannel';\n                        this._mediaObject.sctpPort = sctpParameters.port;\n                        this._mediaObject.maxMessageSize = sctpParameters.maxMessageSize;\n                    }\n                    // Old spec.\n                    else if (offerMediaObject.sctpmap) {\n                        this._mediaObject.payloads = sctpParameters.port;\n                        this._mediaObject.sctpmap =\n                            {\n                                app: 'webrtc-datachannel',\n                                sctpmapNumber: sctpParameters.port,\n                                maxMessageSize: sctpParameters.maxMessageSize\n                            };\n                    }\n                    break;\n                }\n        }\n    }\n    setDtlsRole(role) {\n        switch (role) {\n            case 'client':\n                this._mediaObject.setup = 'active';\n                break;\n            case 'server':\n                this._mediaObject.setup = 'passive';\n                break;\n            case 'auto':\n                this._mediaObject.setup = 'actpass';\n                break;\n        }\n    }\n}\nexports.AnswerMediaSection = AnswerMediaSection;\nclass OfferMediaSection extends MediaSection {\n    constructor({ iceParameters, iceCandidates, dtlsParameters, sctpParameters, plainRtpParameters, planB = false, mid, kind, offerRtpParameters, streamId, trackId, oldDataChannelSpec = false }) {\n        super({ iceParameters, iceCandidates, dtlsParameters, planB });\n        this._mediaObject.mid = String(mid);\n        this._mediaObject.type = kind;\n        if (!plainRtpParameters) {\n            this._mediaObject.connection = { ip: '127.0.0.1', version: 4 };\n            if (!sctpParameters)\n                this._mediaObject.protocol = 'UDP/TLS/RTP/SAVPF';\n            else\n                this._mediaObject.protocol = 'UDP/DTLS/SCTP';\n            this._mediaObject.port = 7;\n        }\n        else {\n            this._mediaObject.connection =\n                {\n                    ip: plainRtpParameters.ip,\n                    version: plainRtpParameters.ipVersion\n                };\n            this._mediaObject.protocol = 'RTP/AVP';\n            this._mediaObject.port = plainRtpParameters.port;\n        }\n        switch (kind) {\n            case 'audio':\n            case 'video':\n                {\n                    this._mediaObject.direction = 'sendonly';\n                    this._mediaObject.rtp = [];\n                    this._mediaObject.rtcpFb = [];\n                    this._mediaObject.fmtp = [];\n                    if (!this._planB)\n                        this._mediaObject.msid = `${streamId || '-'} ${trackId}`;\n                    for (const codec of offerRtpParameters.codecs) {\n                        const rtp = {\n                            payload: codec.payloadType,\n                            codec: getCodecName(codec),\n                            rate: codec.clockRate\n                        };\n                        if (codec.channels > 1)\n                            rtp.encoding = codec.channels;\n                        this._mediaObject.rtp.push(rtp);\n                        const fmtp = {\n                            payload: codec.payloadType,\n                            config: ''\n                        };\n                        for (const key of Object.keys(codec.parameters)) {\n                            if (fmtp.config)\n                                fmtp.config += ';';\n                            fmtp.config += `${key}=${codec.parameters[key]}`;\n                        }\n                        if (fmtp.config)\n                            this._mediaObject.fmtp.push(fmtp);\n                        for (const fb of codec.rtcpFeedback) {\n                            this._mediaObject.rtcpFb.push({\n                                payload: codec.payloadType,\n                                type: fb.type,\n                                subtype: fb.parameter\n                            });\n                        }\n                    }\n                    this._mediaObject.payloads = offerRtpParameters.codecs\n                        .map((codec) => codec.payloadType)\n                        .join(' ');\n                    this._mediaObject.ext = [];\n                    for (const ext of offerRtpParameters.headerExtensions) {\n                        this._mediaObject.ext.push({\n                            uri: ext.uri,\n                            value: ext.id\n                        });\n                    }\n                    this._mediaObject.rtcpMux = 'rtcp-mux';\n                    this._mediaObject.rtcpRsize = 'rtcp-rsize';\n                    const encoding = offerRtpParameters.encodings[0];\n                    const ssrc = encoding.ssrc;\n                    const rtxSsrc = (encoding.rtx && encoding.rtx.ssrc)\n                        ? encoding.rtx.ssrc\n                        : undefined;\n                    this._mediaObject.ssrcs = [];\n                    this._mediaObject.ssrcGroups = [];\n                    if (offerRtpParameters.rtcp.cname) {\n                        this._mediaObject.ssrcs.push({\n                            id: ssrc,\n                            attribute: 'cname',\n                            value: offerRtpParameters.rtcp.cname\n                        });\n                    }\n                    if (this._planB) {\n                        this._mediaObject.ssrcs.push({\n                            id: ssrc,\n                            attribute: 'msid',\n                            value: `${streamId || '-'} ${trackId}`\n                        });\n                    }\n                    if (rtxSsrc) {\n                        if (offerRtpParameters.rtcp.cname) {\n                            this._mediaObject.ssrcs.push({\n                                id: rtxSsrc,\n                                attribute: 'cname',\n                                value: offerRtpParameters.rtcp.cname\n                            });\n                        }\n                        if (this._planB) {\n                            this._mediaObject.ssrcs.push({\n                                id: rtxSsrc,\n                                attribute: 'msid',\n                                value: `${streamId || '-'} ${trackId}`\n                            });\n                        }\n                        // Associate original and retransmission SSRCs.\n                        this._mediaObject.ssrcGroups.push({\n                            semantics: 'FID',\n                            ssrcs: `${ssrc} ${rtxSsrc}`\n                        });\n                    }\n                    break;\n                }\n            case 'application':\n                {\n                    // New spec.\n                    if (!oldDataChannelSpec) {\n                        this._mediaObject.payloads = 'webrtc-datachannel';\n                        this._mediaObject.sctpPort = sctpParameters.port;\n                        this._mediaObject.maxMessageSize = sctpParameters.maxMessageSize;\n                    }\n                    // Old spec.\n                    else {\n                        this._mediaObject.payloads = sctpParameters.port;\n                        this._mediaObject.sctpmap =\n                            {\n                                app: 'webrtc-datachannel',\n                                sctpmapNumber: sctpParameters.port,\n                                maxMessageSize: sctpParameters.maxMessageSize\n                            };\n                    }\n                    break;\n                }\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setDtlsRole(role) {\n        // Always 'actpass'.\n        this._mediaObject.setup = 'actpass';\n    }\n    planBReceive({ offerRtpParameters, streamId, trackId }) {\n        const encoding = offerRtpParameters.encodings[0];\n        const ssrc = encoding.ssrc;\n        const rtxSsrc = (encoding.rtx && encoding.rtx.ssrc)\n            ? encoding.rtx.ssrc\n            : undefined;\n        const payloads = this._mediaObject.payloads.split(' ');\n        for (const codec of offerRtpParameters.codecs) {\n            if (payloads.includes(String(codec.payloadType))) {\n                continue;\n            }\n            const rtp = {\n                payload: codec.payloadType,\n                codec: getCodecName(codec),\n                rate: codec.clockRate\n            };\n            if (codec.channels > 1)\n                rtp.encoding = codec.channels;\n            this._mediaObject.rtp.push(rtp);\n            const fmtp = {\n                payload: codec.payloadType,\n                config: ''\n            };\n            for (const key of Object.keys(codec.parameters)) {\n                if (fmtp.config)\n                    fmtp.config += ';';\n                fmtp.config += `${key}=${codec.parameters[key]}`;\n            }\n            if (fmtp.config)\n                this._mediaObject.fmtp.push(fmtp);\n            for (const fb of codec.rtcpFeedback) {\n                this._mediaObject.rtcpFb.push({\n                    payload: codec.payloadType,\n                    type: fb.type,\n                    subtype: fb.parameter\n                });\n            }\n        }\n        this._mediaObject.payloads += ` ${offerRtpParameters\n            .codecs\n            .filter((codec) => !this._mediaObject.payloads.includes(codec.payloadType))\n            .map((codec) => codec.payloadType)\n            .join(' ')}`;\n        this._mediaObject.payloads = this._mediaObject.payloads.trim();\n        if (offerRtpParameters.rtcp.cname) {\n            this._mediaObject.ssrcs.push({\n                id: ssrc,\n                attribute: 'cname',\n                value: offerRtpParameters.rtcp.cname\n            });\n        }\n        this._mediaObject.ssrcs.push({\n            id: ssrc,\n            attribute: 'msid',\n            value: `${streamId || '-'} ${trackId}`\n        });\n        if (rtxSsrc) {\n            if (offerRtpParameters.rtcp.cname) {\n                this._mediaObject.ssrcs.push({\n                    id: rtxSsrc,\n                    attribute: 'cname',\n                    value: offerRtpParameters.rtcp.cname\n                });\n            }\n            this._mediaObject.ssrcs.push({\n                id: rtxSsrc,\n                attribute: 'msid',\n                value: `${streamId || '-'} ${trackId}`\n            });\n            // Associate original and retransmission SSRCs.\n            this._mediaObject.ssrcGroups.push({\n                semantics: 'FID',\n                ssrcs: `${ssrc} ${rtxSsrc}`\n            });\n        }\n    }\n    planBStopReceiving({ offerRtpParameters }) {\n        const encoding = offerRtpParameters.encodings[0];\n        const ssrc = encoding.ssrc;\n        const rtxSsrc = (encoding.rtx && encoding.rtx.ssrc)\n            ? encoding.rtx.ssrc\n            : undefined;\n        this._mediaObject.ssrcs = this._mediaObject.ssrcs\n            .filter((s) => s.id !== ssrc && s.id !== rtxSsrc);\n        if (rtxSsrc) {\n            this._mediaObject.ssrcGroups = this._mediaObject.ssrcGroups\n                .filter((group) => group.ssrcs !== `${ssrc} ${rtxSsrc}`);\n        }\n    }\n}\nexports.OfferMediaSection = OfferMediaSection;\nfunction getCodecName(codec) {\n    const MimeTypeRegex = new RegExp('^(audio|video)/(.+)', 'i');\n    const mimeTypeMatch = MimeTypeRegex.exec(codec.mimeType);\n    if (!mimeTypeMatch)\n        throw new TypeError('invalid codec.mimeType');\n    return mimeTypeMatch[2];\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RemoteSdp = void 0;\nconst sdpTransform = __importStar(require(\"sdp-transform\"));\nconst Logger_1 = require(\"../../Logger\");\nconst MediaSection_1 = require(\"./MediaSection\");\nconst logger = new Logger_1.Logger('RemoteSdp');\nclass RemoteSdp {\n    constructor({ iceParameters, iceCandidates, dtlsParameters, sctpParameters, plainRtpParameters, planB = false }) {\n        // MediaSection instances with same order as in the SDP.\n        this._mediaSections = [];\n        // MediaSection indices indexed by MID.\n        this._midToIndex = new Map();\n        this._iceParameters = iceParameters;\n        this._iceCandidates = iceCandidates;\n        this._dtlsParameters = dtlsParameters;\n        this._sctpParameters = sctpParameters;\n        this._plainRtpParameters = plainRtpParameters;\n        this._planB = planB;\n        this._sdpObject =\n            {\n                version: 0,\n                origin: {\n                    address: '0.0.0.0',\n                    ipVer: 4,\n                    netType: 'IN',\n                    sessionId: 10000,\n                    sessionVersion: 0,\n                    username: 'mediasoup-client'\n                },\n                name: '-',\n                timing: { start: 0, stop: 0 },\n                media: []\n            };\n        // If ICE parameters are given, add ICE-Lite indicator.\n        if (iceParameters && iceParameters.iceLite) {\n            this._sdpObject.icelite = 'ice-lite';\n        }\n        // If DTLS parameters are given, assume WebRTC and BUNDLE.\n        if (dtlsParameters) {\n            this._sdpObject.msidSemantic = { semantic: 'WMS', token: '*' };\n            // NOTE: We take the latest fingerprint.\n            const numFingerprints = this._dtlsParameters.fingerprints.length;\n            this._sdpObject.fingerprint =\n                {\n                    type: dtlsParameters.fingerprints[numFingerprints - 1].algorithm,\n                    hash: dtlsParameters.fingerprints[numFingerprints - 1].value\n                };\n            this._sdpObject.groups = [{ type: 'BUNDLE', mids: '' }];\n        }\n        // If there are plain RPT parameters, override SDP origin.\n        if (plainRtpParameters) {\n            this._sdpObject.origin.address = plainRtpParameters.ip;\n            this._sdpObject.origin.ipVer = plainRtpParameters.ipVersion;\n        }\n    }\n    updateIceParameters(iceParameters) {\n        logger.debug('updateIceParameters() [iceParameters:%o]', iceParameters);\n        this._iceParameters = iceParameters;\n        this._sdpObject.icelite = iceParameters.iceLite ? 'ice-lite' : undefined;\n        for (const mediaSection of this._mediaSections) {\n            mediaSection.setIceParameters(iceParameters);\n        }\n    }\n    updateDtlsRole(role) {\n        logger.debug('updateDtlsRole() [role:%s]', role);\n        this._dtlsParameters.role = role;\n        for (const mediaSection of this._mediaSections) {\n            mediaSection.setDtlsRole(role);\n        }\n    }\n    getNextMediaSectionIdx() {\n        // If a closed media section is found, return its index.\n        for (let idx = 0; idx < this._mediaSections.length; ++idx) {\n            const mediaSection = this._mediaSections[idx];\n            if (mediaSection.closed)\n                return { idx, reuseMid: mediaSection.mid };\n        }\n        // If no closed media section is found, return next one.\n        return { idx: this._mediaSections.length };\n    }\n    send({ offerMediaObject, reuseMid, offerRtpParameters, answerRtpParameters, codecOptions, extmapAllowMixed = false }) {\n        const mediaSection = new MediaSection_1.AnswerMediaSection({\n            iceParameters: this._iceParameters,\n            iceCandidates: this._iceCandidates,\n            dtlsParameters: this._dtlsParameters,\n            plainRtpParameters: this._plainRtpParameters,\n            planB: this._planB,\n            offerMediaObject,\n            offerRtpParameters,\n            answerRtpParameters,\n            codecOptions,\n            extmapAllowMixed\n        });\n        // Unified-Plan with closed media section replacement.\n        if (reuseMid) {\n            this._replaceMediaSection(mediaSection, reuseMid);\n        }\n        // Unified-Plan or Plan-B with different media kind.\n        else if (!this._midToIndex.has(mediaSection.mid)) {\n            this._addMediaSection(mediaSection);\n        }\n        // Plan-B with same media kind.\n        else {\n            this._replaceMediaSection(mediaSection);\n        }\n    }\n    receive({ mid, kind, offerRtpParameters, streamId, trackId }) {\n        const idx = this._midToIndex.get(mid);\n        let mediaSection;\n        if (idx !== undefined)\n            mediaSection = this._mediaSections[idx];\n        // Unified-Plan or different media kind.\n        if (!mediaSection) {\n            mediaSection = new MediaSection_1.OfferMediaSection({\n                iceParameters: this._iceParameters,\n                iceCandidates: this._iceCandidates,\n                dtlsParameters: this._dtlsParameters,\n                plainRtpParameters: this._plainRtpParameters,\n                planB: this._planB,\n                mid,\n                kind,\n                offerRtpParameters,\n                streamId,\n                trackId\n            });\n            // Let's try to recycle a closed media section (if any).\n            // NOTE: Yes, we can recycle a closed m=audio section with a new m=video.\n            const oldMediaSection = this._mediaSections.find((m) => (m.closed));\n            if (oldMediaSection) {\n                this._replaceMediaSection(mediaSection, oldMediaSection.mid);\n            }\n            else {\n                this._addMediaSection(mediaSection);\n            }\n        }\n        // Plan-B.\n        else {\n            mediaSection.planBReceive({ offerRtpParameters, streamId, trackId });\n            this._replaceMediaSection(mediaSection);\n        }\n    }\n    disableMediaSection(mid) {\n        const idx = this._midToIndex.get(mid);\n        if (idx === undefined) {\n            throw new Error(`no media section found with mid '${mid}'`);\n        }\n        const mediaSection = this._mediaSections[idx];\n        mediaSection.disable();\n    }\n    closeMediaSection(mid) {\n        const idx = this._midToIndex.get(mid);\n        if (idx === undefined) {\n            throw new Error(`no media section found with mid '${mid}'`);\n        }\n        const mediaSection = this._mediaSections[idx];\n        // NOTE: Closing the first m section is a pain since it invalidates the\n        // bundled transport, so let's avoid it.\n        if (mid === this._firstMid) {\n            logger.debug('closeMediaSection() | cannot close first media section, disabling it instead [mid:%s]', mid);\n            this.disableMediaSection(mid);\n            return;\n        }\n        mediaSection.close();\n        // Regenerate BUNDLE mids.\n        this._regenerateBundleMids();\n    }\n    planBStopReceiving({ mid, offerRtpParameters }) {\n        const idx = this._midToIndex.get(mid);\n        if (idx === undefined) {\n            throw new Error(`no media section found with mid '${mid}'`);\n        }\n        const mediaSection = this._mediaSections[idx];\n        mediaSection.planBStopReceiving({ offerRtpParameters });\n        this._replaceMediaSection(mediaSection);\n    }\n    sendSctpAssociation({ offerMediaObject }) {\n        const mediaSection = new MediaSection_1.AnswerMediaSection({\n            iceParameters: this._iceParameters,\n            iceCandidates: this._iceCandidates,\n            dtlsParameters: this._dtlsParameters,\n            sctpParameters: this._sctpParameters,\n            plainRtpParameters: this._plainRtpParameters,\n            offerMediaObject\n        });\n        this._addMediaSection(mediaSection);\n    }\n    receiveSctpAssociation({ oldDataChannelSpec = false } = {}) {\n        const mediaSection = new MediaSection_1.OfferMediaSection({\n            iceParameters: this._iceParameters,\n            iceCandidates: this._iceCandidates,\n            dtlsParameters: this._dtlsParameters,\n            sctpParameters: this._sctpParameters,\n            plainRtpParameters: this._plainRtpParameters,\n            mid: 'datachannel',\n            kind: 'application',\n            oldDataChannelSpec\n        });\n        this._addMediaSection(mediaSection);\n    }\n    getSdp() {\n        // Increase SDP version.\n        this._sdpObject.origin.sessionVersion++;\n        return sdpTransform.write(this._sdpObject);\n    }\n    _addMediaSection(newMediaSection) {\n        if (!this._firstMid)\n            this._firstMid = newMediaSection.mid;\n        // Add to the vector.\n        this._mediaSections.push(newMediaSection);\n        // Add to the map.\n        this._midToIndex.set(newMediaSection.mid, this._mediaSections.length - 1);\n        // Add to the SDP object.\n        this._sdpObject.media.push(newMediaSection.getObject());\n        // Regenerate BUNDLE mids.\n        this._regenerateBundleMids();\n    }\n    _replaceMediaSection(newMediaSection, reuseMid) {\n        // Store it in the map.\n        if (typeof reuseMid === 'string') {\n            const idx = this._midToIndex.get(reuseMid);\n            if (idx === undefined) {\n                throw new Error(`no media section found for reuseMid '${reuseMid}'`);\n            }\n            const oldMediaSection = this._mediaSections[idx];\n            // Replace the index in the vector with the new media section.\n            this._mediaSections[idx] = newMediaSection;\n            // Update the map.\n            this._midToIndex.delete(oldMediaSection.mid);\n            this._midToIndex.set(newMediaSection.mid, idx);\n            // Update the SDP object.\n            this._sdpObject.media[idx] = newMediaSection.getObject();\n            // Regenerate BUNDLE mids.\n            this._regenerateBundleMids();\n        }\n        else {\n            const idx = this._midToIndex.get(newMediaSection.mid);\n            if (idx === undefined) {\n                throw new Error(`no media section found with mid '${newMediaSection.mid}'`);\n            }\n            // Replace the index in the vector with the new media section.\n            this._mediaSections[idx] = newMediaSection;\n            // Update the SDP object.\n            this._sdpObject.media[idx] = newMediaSection.getObject();\n        }\n    }\n    _regenerateBundleMids() {\n        if (!this._dtlsParameters)\n            return;\n        this._sdpObject.groups[0].mids = this._mediaSections\n            .filter((mediaSection) => !mediaSection.closed)\n            .map((mediaSection) => mediaSection.mid)\n            .join(' ');\n    }\n}\nexports.RemoteSdp = RemoteSdp;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parse = void 0;\nconst ScalabilityModeRegex = new RegExp('^[LS]([1-9]\\\\d{0,1})T([1-9]\\\\d{0,1})');\nfunction parse(scalabilityMode) {\n    const match = ScalabilityModeRegex.exec(scalabilityMode || '');\n    if (match) {\n        return {\n            spatialLayers: Number(match[1]),\n            temporalLayers: Number(match[2])\n        };\n    }\n    else {\n        return {\n            spatialLayers: 1,\n            temporalLayers: 1\n        };\n    }\n}\nexports.parse = parse;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Chrome74 = void 0;\nconst sdpTransform = __importStar(require(\"sdp-transform\"));\nconst Logger_1 = require(\"../Logger\");\nconst utils = __importStar(require(\"../utils\"));\nconst ortc = __importStar(require(\"../ortc\"));\nconst sdpCommonUtils = __importStar(require(\"./sdp/commonUtils\"));\nconst sdpUnifiedPlanUtils = __importStar(require(\"./sdp/unifiedPlanUtils\"));\nconst HandlerInterface_1 = require(\"./HandlerInterface\");\nconst RemoteSdp_1 = require(\"./sdp/RemoteSdp\");\nconst scalabilityModes_1 = require(\"../scalabilityModes\");\nconst logger = new Logger_1.Logger('Chrome74');\nconst SCTP_NUM_STREAMS = { OS: 1024, MIS: 1024 };\nclass Chrome74 extends HandlerInterface_1.HandlerInterface {\n    constructor() {\n        super();\n        // Map of RTCTransceivers indexed by MID.\n        this._mapMidTransceiver = new Map();\n        // Local stream for sending.\n        this._sendStream = new MediaStream();\n        // Whether a DataChannel m=application section has been created.\n        this._hasDataChannelMediaSection = false;\n        // Sending DataChannel id value counter. Incremented for each new DataChannel.\n        this._nextSendSctpStreamId = 0;\n        // Got transport local and remote parameters.\n        this._transportReady = false;\n    }\n    /**\n     * Creates a factory function.\n     */\n    static createFactory() {\n        return () => new Chrome74();\n    }\n    get name() {\n        return 'Chrome74';\n    }\n    close() {\n        logger.debug('close()');\n        // Close RTCPeerConnection.\n        if (this._pc) {\n            try {\n                this._pc.close();\n            }\n            catch (error) { }\n        }\n    }\n    async getNativeRtpCapabilities() {\n        logger.debug('getNativeRtpCapabilities()');\n        const pc = new RTCPeerConnection({\n            iceServers: [],\n            iceTransportPolicy: 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require',\n            sdpSemantics: 'unified-plan'\n        });\n        try {\n            pc.addTransceiver('audio');\n            pc.addTransceiver('video');\n            const offer = await pc.createOffer();\n            try {\n                pc.close();\n            }\n            catch (error) { }\n            const sdpObject = sdpTransform.parse(offer.sdp);\n            const nativeRtpCapabilities = sdpCommonUtils.extractRtpCapabilities({ sdpObject });\n            return nativeRtpCapabilities;\n        }\n        catch (error) {\n            try {\n                pc.close();\n            }\n            catch (error2) { }\n            throw error;\n        }\n    }\n    async getNativeSctpCapabilities() {\n        logger.debug('getNativeSctpCapabilities()');\n        return {\n            numStreams: SCTP_NUM_STREAMS\n        };\n    }\n    run({ direction, iceParameters, iceCandidates, dtlsParameters, sctpParameters, iceServers, iceTransportPolicy, additionalSettings, proprietaryConstraints, extendedRtpCapabilities }) {\n        logger.debug('run()');\n        this._direction = direction;\n        this._remoteSdp = new RemoteSdp_1.RemoteSdp({\n            iceParameters,\n            iceCandidates,\n            dtlsParameters,\n            sctpParameters\n        });\n        this._sendingRtpParametersByKind =\n            {\n                audio: ortc.getSendingRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRtpParameters('video', extendedRtpCapabilities)\n            };\n        this._sendingRemoteRtpParametersByKind =\n            {\n                audio: ortc.getSendingRemoteRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRemoteRtpParameters('video', extendedRtpCapabilities)\n            };\n        if (dtlsParameters.role && dtlsParameters.role !== 'auto') {\n            this._forcedLocalDtlsRole = dtlsParameters.role === 'server'\n                ? 'client'\n                : 'server';\n        }\n        this._pc = new RTCPeerConnection({\n            iceServers: iceServers || [],\n            iceTransportPolicy: iceTransportPolicy || 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require',\n            sdpSemantics: 'unified-plan',\n            ...additionalSettings\n        }, proprietaryConstraints);\n        // Handle RTCPeerConnection connection status.\n        this._pc.addEventListener('iceconnectionstatechange', () => {\n            switch (this._pc.iceConnectionState) {\n                case 'checking':\n                    this.emit('@connectionstatechange', 'connecting');\n                    break;\n                case 'connected':\n                case 'completed':\n                    this.emit('@connectionstatechange', 'connected');\n                    break;\n                case 'failed':\n                    this.emit('@connectionstatechange', 'failed');\n                    break;\n                case 'disconnected':\n                    this.emit('@connectionstatechange', 'disconnected');\n                    break;\n                case 'closed':\n                    this.emit('@connectionstatechange', 'closed');\n                    break;\n            }\n        });\n    }\n    async updateIceServers(iceServers) {\n        logger.debug('updateIceServers()');\n        const configuration = this._pc.getConfiguration();\n        configuration.iceServers = iceServers;\n        this._pc.setConfiguration(configuration);\n    }\n    async restartIce(iceParameters) {\n        logger.debug('restartIce()');\n        // Provide the remote SDP handler with new remote ICE parameters.\n        this._remoteSdp.updateIceParameters(iceParameters);\n        if (!this._transportReady)\n            return;\n        if (this._direction === 'send') {\n            const offer = await this._pc.createOffer({ iceRestart: true });\n            logger.debug('restartIce() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n        }\n        else {\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            logger.debug('restartIce() | calling pc.setLocalDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n        }\n    }\n    async getTransportStats() {\n        return this._pc.getStats();\n    }\n    async send({ track, encodings, codecOptions, codec }) {\n        var _a;\n        this._assertSendDirection();\n        logger.debug('send() [kind:%s, track.id:%s]', track.kind, track.id);\n        if (encodings && encodings.length > 1) {\n            encodings.forEach((encoding, idx) => {\n                encoding.rid = `r${idx}`;\n            });\n        }\n        const sendingRtpParameters = utils.clone(this._sendingRtpParametersByKind[track.kind], {});\n        // This may throw.\n        sendingRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRtpParameters.codecs, codec);\n        const sendingRemoteRtpParameters = utils.clone(this._sendingRemoteRtpParametersByKind[track.kind], {});\n        // This may throw.\n        sendingRemoteRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRemoteRtpParameters.codecs, codec);\n        const mediaSectionIdx = this._remoteSdp.getNextMediaSectionIdx();\n        const transceiver = this._pc.addTransceiver(track, {\n            direction: 'sendonly',\n            streams: [this._sendStream],\n            sendEncodings: encodings\n        });\n        let offer = await this._pc.createOffer();\n        let localSdpObject = sdpTransform.parse(offer.sdp);\n        let offerMediaObject;\n        if (!this._transportReady) {\n            await this._setupTransport({\n                localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                localSdpObject\n            });\n        }\n        // Special case for VP9 with SVC.\n        let hackVp9Svc = false;\n        const layers = (0, scalabilityModes_1.parse)((encodings || [{}])[0].scalabilityMode);\n        if (encodings &&\n            encodings.length === 1 &&\n            layers.spatialLayers > 1 &&\n            sendingRtpParameters.codecs[0].mimeType.toLowerCase() === 'video/vp9') {\n            logger.debug('send() | enabling legacy simulcast for VP9 SVC');\n            hackVp9Svc = true;\n            localSdpObject = sdpTransform.parse(offer.sdp);\n            offerMediaObject = localSdpObject.media[mediaSectionIdx.idx];\n            sdpUnifiedPlanUtils.addLegacySimulcast({\n                offerMediaObject,\n                numStreams: layers.spatialLayers\n            });\n            offer = { type: 'offer', sdp: sdpTransform.write(localSdpObject) };\n        }\n        logger.debug('send() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        // We can now get the transceiver.mid.\n        const localId = transceiver.mid;\n        // Set MID.\n        sendingRtpParameters.mid = localId;\n        localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        offerMediaObject = localSdpObject.media[mediaSectionIdx.idx];\n        // Set RTCP CNAME.\n        sendingRtpParameters.rtcp.cname =\n            sdpCommonUtils.getCname({ offerMediaObject });\n        // Set RTP encodings by parsing the SDP offer if no encodings are given.\n        if (!encodings) {\n            sendingRtpParameters.encodings =\n                sdpUnifiedPlanUtils.getRtpEncodings({ offerMediaObject });\n        }\n        // Set RTP encodings by parsing the SDP offer and complete them with given\n        // one if just a single encoding has been given.\n        else if (encodings.length === 1) {\n            let newEncodings = sdpUnifiedPlanUtils.getRtpEncodings({ offerMediaObject });\n            Object.assign(newEncodings[0], encodings[0]);\n            // Hack for VP9 SVC.\n            if (hackVp9Svc)\n                newEncodings = [newEncodings[0]];\n            sendingRtpParameters.encodings = newEncodings;\n        }\n        // Otherwise if more than 1 encoding are given use them verbatim.\n        else {\n            sendingRtpParameters.encodings = encodings;\n        }\n        // If VP8 or H264 and there is effective simulcast, add scalabilityMode to\n        // each encoding.\n        if (sendingRtpParameters.encodings.length > 1 &&\n            (sendingRtpParameters.codecs[0].mimeType.toLowerCase() === 'video/vp8' ||\n                sendingRtpParameters.codecs[0].mimeType.toLowerCase() === 'video/h264')) {\n            for (const encoding of sendingRtpParameters.encodings) {\n                encoding.scalabilityMode = 'S1T3';\n            }\n        }\n        this._remoteSdp.send({\n            offerMediaObject,\n            reuseMid: mediaSectionIdx.reuseMid,\n            offerRtpParameters: sendingRtpParameters,\n            answerRtpParameters: sendingRemoteRtpParameters,\n            codecOptions,\n            extmapAllowMixed: true\n        });\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('send() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n        // Store in the map.\n        this._mapMidTransceiver.set(localId, transceiver);\n        return {\n            localId,\n            rtpParameters: sendingRtpParameters,\n            rtpSender: transceiver.sender\n        };\n    }\n    async stopSending(localId) {\n        this._assertSendDirection();\n        logger.debug('stopSending() [localId:%s]', localId);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated RTCRtpTransceiver not found');\n        transceiver.sender.replaceTrack(null);\n        this._pc.removeTrack(transceiver.sender);\n        this._remoteSdp.closeMediaSection(transceiver.mid);\n        const offer = await this._pc.createOffer();\n        logger.debug('stopSending() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopSending() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n        this._mapMidTransceiver.delete(localId);\n    }\n    async replaceTrack(localId, track) {\n        this._assertSendDirection();\n        if (track) {\n            logger.debug('replaceTrack() [localId:%s, track.id:%s]', localId, track.id);\n        }\n        else {\n            logger.debug('replaceTrack() [localId:%s, no track]', localId);\n        }\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated RTCRtpTransceiver not found');\n        await transceiver.sender.replaceTrack(track);\n    }\n    async setMaxSpatialLayer(localId, spatialLayer) {\n        this._assertSendDirection();\n        logger.debug('setMaxSpatialLayer() [localId:%s, spatialLayer:%s]', localId, spatialLayer);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated RTCRtpTransceiver not found');\n        const parameters = transceiver.sender.getParameters();\n        parameters.encodings.forEach((encoding, idx) => {\n            if (idx <= spatialLayer)\n                encoding.active = true;\n            else\n                encoding.active = false;\n        });\n        await transceiver.sender.setParameters(parameters);\n    }\n    async setRtpEncodingParameters(localId, params) {\n        this._assertSendDirection();\n        logger.debug('setRtpEncodingParameters() [localId:%s, params:%o]', localId, params);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated RTCRtpTransceiver not found');\n        const parameters = transceiver.sender.getParameters();\n        parameters.encodings.forEach((encoding, idx) => {\n            parameters.encodings[idx] = { ...encoding, ...params };\n        });\n        await transceiver.sender.setParameters(parameters);\n    }\n    async getSenderStats(localId) {\n        this._assertSendDirection();\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated RTCRtpTransceiver not found');\n        return transceiver.sender.getStats();\n    }\n    async sendDataChannel({ ordered, maxPacketLifeTime, maxRetransmits, label, protocol }) {\n        var _a;\n        this._assertSendDirection();\n        const options = {\n            negotiated: true,\n            id: this._nextSendSctpStreamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('sendDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // Increase next id.\n        this._nextSendSctpStreamId =\n            ++this._nextSendSctpStreamId % SCTP_NUM_STREAMS.MIS;\n        // If this is the first DataChannel we need to create the SDP answer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            const offer = await this._pc.createOffer();\n            const localSdpObject = sdpTransform.parse(offer.sdp);\n            const offerMediaObject = localSdpObject.media\n                .find((m) => m.type === 'application');\n            if (!this._transportReady) {\n                await this._setupTransport({\n                    localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                    localSdpObject\n                });\n            }\n            logger.debug('sendDataChannel() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            this._remoteSdp.sendSctpAssociation({ offerMediaObject });\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        const sctpStreamParameters = {\n            streamId: options.id,\n            ordered: options.ordered,\n            maxPacketLifeTime: options.maxPacketLifeTime,\n            maxRetransmits: options.maxRetransmits\n        };\n        return { dataChannel, sctpStreamParameters };\n    }\n    async receive({ trackId, kind, rtpParameters }) {\n        var _a;\n        this._assertRecvDirection();\n        logger.debug('receive() [trackId:%s, kind:%s]', trackId, kind);\n        const localId = rtpParameters.mid || String(this._mapMidTransceiver.size);\n        this._remoteSdp.receive({\n            mid: localId,\n            kind,\n            offerRtpParameters: rtpParameters,\n            streamId: rtpParameters.rtcp.cname,\n            trackId\n        });\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('receive() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        let answer = await this._pc.createAnswer();\n        const localSdpObject = sdpTransform.parse(answer.sdp);\n        const answerMediaObject = localSdpObject.media\n            .find((m) => String(m.mid) === localId);\n        // May need to modify codec parameters in the answer based on codec\n        // parameters in the offer.\n        sdpCommonUtils.applyCodecParameters({\n            offerRtpParameters: rtpParameters,\n            answerMediaObject\n        });\n        answer = { type: 'answer', sdp: sdpTransform.write(localSdpObject) };\n        if (!this._transportReady) {\n            await this._setupTransport({\n                localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                localSdpObject\n            });\n        }\n        logger.debug('receive() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n        const transceiver = this._pc.getTransceivers()\n            .find((t) => t.mid === localId);\n        if (!transceiver)\n            throw new Error('new RTCRtpTransceiver not found');\n        // Store in the map.\n        this._mapMidTransceiver.set(localId, transceiver);\n        return {\n            localId,\n            track: transceiver.receiver.track,\n            rtpReceiver: transceiver.receiver\n        };\n    }\n    async stopReceiving(localId) {\n        this._assertRecvDirection();\n        logger.debug('stopReceiving() [localId:%s]', localId);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated RTCRtpTransceiver not found');\n        this._remoteSdp.closeMediaSection(transceiver.mid);\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('stopReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n        this._mapMidTransceiver.delete(localId);\n    }\n    async pauseReceiving(localId) {\n        this._assertRecvDirection();\n        logger.debug('pauseReceiving() [localId:%s]', localId);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated RTCRtpTransceiver not found');\n        transceiver.direction = 'inactive';\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('pauseReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('pauseReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n    }\n    async resumeReceiving(localId) {\n        this._assertRecvDirection();\n        logger.debug('resumeReceiving() [localId:%s]', localId);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated RTCRtpTransceiver not found');\n        transceiver.direction = 'recvonly';\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('resumeReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('resumeReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n    }\n    async getReceiverStats(localId) {\n        this._assertRecvDirection();\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated RTCRtpTransceiver not found');\n        return transceiver.receiver.getStats();\n    }\n    async receiveDataChannel({ sctpStreamParameters, label, protocol }) {\n        var _a;\n        this._assertRecvDirection();\n        const { streamId, ordered, maxPacketLifeTime, maxRetransmits } = sctpStreamParameters;\n        const options = {\n            negotiated: true,\n            id: streamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('receiveDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // If this is the first DataChannel we need to create the SDP offer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            this._remoteSdp.receiveSctpAssociation();\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            if (!this._transportReady) {\n                const localSdpObject = sdpTransform.parse(answer.sdp);\n                await this._setupTransport({\n                    localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                    localSdpObject\n                });\n            }\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        return { dataChannel };\n    }\n    async _setupTransport({ localDtlsRole, localSdpObject }) {\n        if (!localSdpObject)\n            localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        // Get our local DTLS parameters.\n        const dtlsParameters = sdpCommonUtils.extractDtlsParameters({ sdpObject: localSdpObject });\n        // Set our DTLS role.\n        dtlsParameters.role = localDtlsRole;\n        // Update the remote DTLS role in the SDP.\n        this._remoteSdp.updateDtlsRole(localDtlsRole === 'client' ? 'server' : 'client');\n        // Need to tell the remote transport about our parameters.\n        await this.safeEmitAsPromise('@connect', { dtlsParameters });\n        this._transportReady = true;\n    }\n    _assertSendDirection() {\n        if (this._direction !== 'send') {\n            throw new Error('method can just be called for handlers with \"send\" direction');\n        }\n    }\n    _assertRecvDirection() {\n        if (this._direction !== 'recv') {\n            throw new Error('method can just be called for handlers with \"recv\" direction');\n        }\n    }\n}\nexports.Chrome74 = Chrome74;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Chrome70 = void 0;\nconst sdpTransform = __importStar(require(\"sdp-transform\"));\nconst Logger_1 = require(\"../Logger\");\nconst utils = __importStar(require(\"../utils\"));\nconst ortc = __importStar(require(\"../ortc\"));\nconst sdpCommonUtils = __importStar(require(\"./sdp/commonUtils\"));\nconst sdpUnifiedPlanUtils = __importStar(require(\"./sdp/unifiedPlanUtils\"));\nconst HandlerInterface_1 = require(\"./HandlerInterface\");\nconst RemoteSdp_1 = require(\"./sdp/RemoteSdp\");\nconst scalabilityModes_1 = require(\"../scalabilityModes\");\nconst logger = new Logger_1.Logger('Chrome70');\nconst SCTP_NUM_STREAMS = { OS: 1024, MIS: 1024 };\nclass Chrome70 extends HandlerInterface_1.HandlerInterface {\n    constructor() {\n        super();\n        // Map of RTCTransceivers indexed by MID.\n        this._mapMidTransceiver = new Map();\n        // Local stream for sending.\n        this._sendStream = new MediaStream();\n        // Whether a DataChannel m=application section has been created.\n        this._hasDataChannelMediaSection = false;\n        // Sending DataChannel id value counter. Incremented for each new DataChannel.\n        this._nextSendSctpStreamId = 0;\n        // Got transport local and remote parameters.\n        this._transportReady = false;\n    }\n    /**\n     * Creates a factory function.\n     */\n    static createFactory() {\n        return () => new Chrome70();\n    }\n    get name() {\n        return 'Chrome70';\n    }\n    close() {\n        logger.debug('close()');\n        // Close RTCPeerConnection.\n        if (this._pc) {\n            try {\n                this._pc.close();\n            }\n            catch (error) { }\n        }\n    }\n    async getNativeRtpCapabilities() {\n        logger.debug('getNativeRtpCapabilities()');\n        const pc = new RTCPeerConnection({\n            iceServers: [],\n            iceTransportPolicy: 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require',\n            sdpSemantics: 'unified-plan'\n        });\n        try {\n            pc.addTransceiver('audio');\n            pc.addTransceiver('video');\n            const offer = await pc.createOffer();\n            try {\n                pc.close();\n            }\n            catch (error) { }\n            const sdpObject = sdpTransform.parse(offer.sdp);\n            const nativeRtpCapabilities = sdpCommonUtils.extractRtpCapabilities({ sdpObject });\n            return nativeRtpCapabilities;\n        }\n        catch (error) {\n            try {\n                pc.close();\n            }\n            catch (error2) { }\n            throw error;\n        }\n    }\n    async getNativeSctpCapabilities() {\n        logger.debug('getNativeSctpCapabilities()');\n        return {\n            numStreams: SCTP_NUM_STREAMS\n        };\n    }\n    run({ direction, iceParameters, iceCandidates, dtlsParameters, sctpParameters, iceServers, iceTransportPolicy, additionalSettings, proprietaryConstraints, extendedRtpCapabilities }) {\n        logger.debug('run()');\n        this._direction = direction;\n        this._remoteSdp = new RemoteSdp_1.RemoteSdp({\n            iceParameters,\n            iceCandidates,\n            dtlsParameters,\n            sctpParameters\n        });\n        this._sendingRtpParametersByKind =\n            {\n                audio: ortc.getSendingRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRtpParameters('video', extendedRtpCapabilities)\n            };\n        this._sendingRemoteRtpParametersByKind =\n            {\n                audio: ortc.getSendingRemoteRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRemoteRtpParameters('video', extendedRtpCapabilities)\n            };\n        if (dtlsParameters.role && dtlsParameters.role !== 'auto') {\n            this._forcedLocalDtlsRole = dtlsParameters.role === 'server'\n                ? 'client'\n                : 'server';\n        }\n        this._pc = new RTCPeerConnection({\n            iceServers: iceServers || [],\n            iceTransportPolicy: iceTransportPolicy || 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require',\n            sdpSemantics: 'unified-plan',\n            ...additionalSettings\n        }, proprietaryConstraints);\n        // Handle RTCPeerConnection connection status.\n        this._pc.addEventListener('iceconnectionstatechange', () => {\n            switch (this._pc.iceConnectionState) {\n                case 'checking':\n                    this.emit('@connectionstatechange', 'connecting');\n                    break;\n                case 'connected':\n                case 'completed':\n                    this.emit('@connectionstatechange', 'connected');\n                    break;\n                case 'failed':\n                    this.emit('@connectionstatechange', 'failed');\n                    break;\n                case 'disconnected':\n                    this.emit('@connectionstatechange', 'disconnected');\n                    break;\n                case 'closed':\n                    this.emit('@connectionstatechange', 'closed');\n                    break;\n            }\n        });\n    }\n    async updateIceServers(iceServers) {\n        logger.debug('updateIceServers()');\n        const configuration = this._pc.getConfiguration();\n        configuration.iceServers = iceServers;\n        this._pc.setConfiguration(configuration);\n    }\n    async restartIce(iceParameters) {\n        logger.debug('restartIce()');\n        // Provide the remote SDP handler with new remote ICE parameters.\n        this._remoteSdp.updateIceParameters(iceParameters);\n        if (!this._transportReady)\n            return;\n        if (this._direction === 'send') {\n            const offer = await this._pc.createOffer({ iceRestart: true });\n            logger.debug('restartIce() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n        }\n        else {\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            logger.debug('restartIce() | calling pc.setLocalDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n        }\n    }\n    async getTransportStats() {\n        return this._pc.getStats();\n    }\n    async send({ track, encodings, codecOptions, codec }) {\n        var _a;\n        this._assertSendDirection();\n        logger.debug('send() [kind:%s, track.id:%s]', track.kind, track.id);\n        const sendingRtpParameters = utils.clone(this._sendingRtpParametersByKind[track.kind], {});\n        // This may throw.\n        sendingRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRtpParameters.codecs, codec);\n        const sendingRemoteRtpParameters = utils.clone(this._sendingRemoteRtpParametersByKind[track.kind], {});\n        // This may throw.\n        sendingRemoteRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRemoteRtpParameters.codecs, codec);\n        const mediaSectionIdx = this._remoteSdp.getNextMediaSectionIdx();\n        const transceiver = this._pc.addTransceiver(track, { direction: 'sendonly', streams: [this._sendStream] });\n        let offer = await this._pc.createOffer();\n        let localSdpObject = sdpTransform.parse(offer.sdp);\n        let offerMediaObject;\n        if (!this._transportReady) {\n            await this._setupTransport({\n                localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                localSdpObject\n            });\n        }\n        if (encodings && encodings.length > 1) {\n            logger.debug('send() | enabling legacy simulcast');\n            localSdpObject = sdpTransform.parse(offer.sdp);\n            offerMediaObject = localSdpObject.media[mediaSectionIdx.idx];\n            sdpUnifiedPlanUtils.addLegacySimulcast({\n                offerMediaObject,\n                numStreams: encodings.length\n            });\n            offer = { type: 'offer', sdp: sdpTransform.write(localSdpObject) };\n        }\n        // Special case for VP9 with SVC.\n        let hackVp9Svc = false;\n        const layers = (0, scalabilityModes_1.parse)((encodings || [{}])[0].scalabilityMode);\n        if (encodings &&\n            encodings.length === 1 &&\n            layers.spatialLayers > 1 &&\n            sendingRtpParameters.codecs[0].mimeType.toLowerCase() === 'video/vp9') {\n            logger.debug('send() | enabling legacy simulcast for VP9 SVC');\n            hackVp9Svc = true;\n            localSdpObject = sdpTransform.parse(offer.sdp);\n            offerMediaObject = localSdpObject.media[mediaSectionIdx.idx];\n            sdpUnifiedPlanUtils.addLegacySimulcast({\n                offerMediaObject,\n                numStreams: layers.spatialLayers\n            });\n            offer = { type: 'offer', sdp: sdpTransform.write(localSdpObject) };\n        }\n        logger.debug('send() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        // If encodings are given, apply them now.\n        if (encodings) {\n            logger.debug('send() | applying given encodings');\n            const parameters = transceiver.sender.getParameters();\n            for (let idx = 0; idx < (parameters.encodings || []).length; ++idx) {\n                const encoding = parameters.encodings[idx];\n                const desiredEncoding = encodings[idx];\n                // Should not happen but just in case.\n                if (!desiredEncoding)\n                    break;\n                parameters.encodings[idx] = Object.assign(encoding, desiredEncoding);\n            }\n            await transceiver.sender.setParameters(parameters);\n        }\n        // We can now get the transceiver.mid.\n        const localId = transceiver.mid;\n        // Set MID.\n        sendingRtpParameters.mid = localId;\n        localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        offerMediaObject = localSdpObject.media[mediaSectionIdx.idx];\n        // Set RTCP CNAME.\n        sendingRtpParameters.rtcp.cname =\n            sdpCommonUtils.getCname({ offerMediaObject });\n        // Set RTP encodings.\n        sendingRtpParameters.encodings =\n            sdpUnifiedPlanUtils.getRtpEncodings({ offerMediaObject });\n        // Complete encodings with given values.\n        if (encodings) {\n            for (let idx = 0; idx < sendingRtpParameters.encodings.length; ++idx) {\n                if (encodings[idx])\n                    Object.assign(sendingRtpParameters.encodings[idx], encodings[idx]);\n            }\n        }\n        // Hack for VP9 SVC.\n        if (hackVp9Svc) {\n            sendingRtpParameters.encodings = [sendingRtpParameters.encodings[0]];\n        }\n        // If VP8 or H264 and there is effective simulcast, add scalabilityMode to\n        // each encoding.\n        if (sendingRtpParameters.encodings.length > 1 &&\n            (sendingRtpParameters.codecs[0].mimeType.toLowerCase() === 'video/vp8' ||\n                sendingRtpParameters.codecs[0].mimeType.toLowerCase() === 'video/h264')) {\n            for (const encoding of sendingRtpParameters.encodings) {\n                encoding.scalabilityMode = 'S1T3';\n            }\n        }\n        this._remoteSdp.send({\n            offerMediaObject,\n            reuseMid: mediaSectionIdx.reuseMid,\n            offerRtpParameters: sendingRtpParameters,\n            answerRtpParameters: sendingRemoteRtpParameters,\n            codecOptions\n        });\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('send() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n        // Store in the map.\n        this._mapMidTransceiver.set(localId, transceiver);\n        return {\n            localId,\n            rtpParameters: sendingRtpParameters,\n            rtpSender: transceiver.sender\n        };\n    }\n    async stopSending(localId) {\n        this._assertSendDirection();\n        logger.debug('stopSending() [localId:%s]', localId);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated RTCRtpTransceiver not found');\n        transceiver.sender.replaceTrack(null);\n        this._pc.removeTrack(transceiver.sender);\n        this._remoteSdp.closeMediaSection(transceiver.mid);\n        const offer = await this._pc.createOffer();\n        logger.debug('stopSending() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopSending() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n        this._mapMidTransceiver.delete(localId);\n    }\n    async replaceTrack(localId, track) {\n        this._assertSendDirection();\n        if (track) {\n            logger.debug('replaceTrack() [localId:%s, track.id:%s]', localId, track.id);\n        }\n        else {\n            logger.debug('replaceTrack() [localId:%s, no track]', localId);\n        }\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated RTCRtpTransceiver not found');\n        await transceiver.sender.replaceTrack(track);\n    }\n    async setMaxSpatialLayer(localId, spatialLayer) {\n        this._assertSendDirection();\n        logger.debug('setMaxSpatialLayer() [localId:%s, spatialLayer:%s]', localId, spatialLayer);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated RTCRtpTransceiver not found');\n        const parameters = transceiver.sender.getParameters();\n        parameters.encodings.forEach((encoding, idx) => {\n            if (idx <= spatialLayer)\n                encoding.active = true;\n            else\n                encoding.active = false;\n        });\n        await transceiver.sender.setParameters(parameters);\n    }\n    async setRtpEncodingParameters(localId, params) {\n        this._assertSendDirection();\n        logger.debug('setRtpEncodingParameters() [localId:%s, params:%o]', localId, params);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated RTCRtpTransceiver not found');\n        const parameters = transceiver.sender.getParameters();\n        parameters.encodings.forEach((encoding, idx) => {\n            parameters.encodings[idx] = { ...encoding, ...params };\n        });\n        await transceiver.sender.setParameters(parameters);\n    }\n    async getSenderStats(localId) {\n        this._assertSendDirection();\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated RTCRtpTransceiver not found');\n        return transceiver.sender.getStats();\n    }\n    async sendDataChannel({ ordered, maxPacketLifeTime, maxRetransmits, label, protocol }) {\n        var _a;\n        this._assertSendDirection();\n        const options = {\n            negotiated: true,\n            id: this._nextSendSctpStreamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmitTime: maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('sendDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // Increase next id.\n        this._nextSendSctpStreamId =\n            ++this._nextSendSctpStreamId % SCTP_NUM_STREAMS.MIS;\n        // If this is the first DataChannel we need to create the SDP answer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            const offer = await this._pc.createOffer();\n            const localSdpObject = sdpTransform.parse(offer.sdp);\n            const offerMediaObject = localSdpObject.media\n                .find((m) => m.type === 'application');\n            if (!this._transportReady) {\n                await this._setupTransport({\n                    localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                    localSdpObject\n                });\n            }\n            logger.debug('sendDataChannel() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            this._remoteSdp.sendSctpAssociation({ offerMediaObject });\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        const sctpStreamParameters = {\n            streamId: options.id,\n            ordered: options.ordered,\n            maxPacketLifeTime: options.maxPacketLifeTime,\n            maxRetransmits: options.maxRetransmits\n        };\n        return { dataChannel, sctpStreamParameters };\n    }\n    async receive({ trackId, kind, rtpParameters }) {\n        var _a;\n        this._assertRecvDirection();\n        logger.debug('receive() [trackId:%s, kind:%s]', trackId, kind);\n        const localId = rtpParameters.mid || String(this._mapMidTransceiver.size);\n        this._remoteSdp.receive({\n            mid: localId,\n            kind,\n            offerRtpParameters: rtpParameters,\n            streamId: rtpParameters.rtcp.cname,\n            trackId\n        });\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('receive() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        let answer = await this._pc.createAnswer();\n        const localSdpObject = sdpTransform.parse(answer.sdp);\n        const answerMediaObject = localSdpObject.media\n            .find((m) => String(m.mid) === localId);\n        // May need to modify codec parameters in the answer based on codec\n        // parameters in the offer.\n        sdpCommonUtils.applyCodecParameters({\n            offerRtpParameters: rtpParameters,\n            answerMediaObject\n        });\n        answer = { type: 'answer', sdp: sdpTransform.write(localSdpObject) };\n        if (!this._transportReady) {\n            await this._setupTransport({\n                localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                localSdpObject\n            });\n        }\n        logger.debug('receive() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n        const transceiver = this._pc.getTransceivers()\n            .find((t) => t.mid === localId);\n        if (!transceiver)\n            throw new Error('new RTCRtpTransceiver not found');\n        // Store in the map.\n        this._mapMidTransceiver.set(localId, transceiver);\n        return {\n            localId,\n            track: transceiver.receiver.track,\n            rtpReceiver: transceiver.receiver\n        };\n    }\n    async stopReceiving(localId) {\n        this._assertRecvDirection();\n        logger.debug('stopReceiving() [localId:%s]', localId);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated RTCRtpTransceiver not found');\n        this._remoteSdp.closeMediaSection(transceiver.mid);\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('stopReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n        this._mapMidTransceiver.delete(localId);\n    }\n    async pauseReceiving(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    localId) {\n        // Unimplemented.\n    }\n    async resumeReceiving(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    localId) {\n        // Unimplemented.\n    }\n    async getReceiverStats(localId) {\n        this._assertRecvDirection();\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated RTCRtpTransceiver not found');\n        return transceiver.receiver.getStats();\n    }\n    async receiveDataChannel({ sctpStreamParameters, label, protocol }) {\n        var _a;\n        this._assertRecvDirection();\n        const { streamId, ordered, maxPacketLifeTime, maxRetransmits } = sctpStreamParameters;\n        const options = {\n            negotiated: true,\n            id: streamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmitTime: maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('receiveDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // If this is the first DataChannel we need to create the SDP offer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            this._remoteSdp.receiveSctpAssociation();\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            if (!this._transportReady) {\n                const localSdpObject = sdpTransform.parse(answer.sdp);\n                await this._setupTransport({\n                    localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                    localSdpObject\n                });\n            }\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        return { dataChannel };\n    }\n    async _setupTransport({ localDtlsRole, localSdpObject }) {\n        if (!localSdpObject)\n            localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        // Get our local DTLS parameters.\n        const dtlsParameters = sdpCommonUtils.extractDtlsParameters({ sdpObject: localSdpObject });\n        // Set our DTLS role.\n        dtlsParameters.role = localDtlsRole;\n        // Update the remote DTLS role in the SDP.\n        this._remoteSdp.updateDtlsRole(localDtlsRole === 'client' ? 'server' : 'client');\n        // Need to tell the remote transport about our parameters.\n        await this.safeEmitAsPromise('@connect', { dtlsParameters });\n        this._transportReady = true;\n    }\n    _assertSendDirection() {\n        if (this._direction !== 'send') {\n            throw new Error('method can just be called for handlers with \"send\" direction');\n        }\n    }\n    _assertRecvDirection() {\n        if (this._direction !== 'recv') {\n            throw new Error('method can just be called for handlers with \"recv\" direction');\n        }\n    }\n}\nexports.Chrome70 = Chrome70;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addLegacySimulcast = exports.getRtpEncodings = void 0;\nfunction getRtpEncodings({ offerMediaObject, track }) {\n    // First media SSRC (or the only one).\n    let firstSsrc;\n    const ssrcs = new Set();\n    for (const line of offerMediaObject.ssrcs || []) {\n        if (line.attribute !== 'msid')\n            continue;\n        const trackId = line.value.split(' ')[1];\n        if (trackId === track.id) {\n            const ssrc = line.id;\n            ssrcs.add(ssrc);\n            if (!firstSsrc)\n                firstSsrc = ssrc;\n        }\n    }\n    if (ssrcs.size === 0)\n        throw new Error(`a=ssrc line with msid information not found [track.id:${track.id}]`);\n    const ssrcToRtxSsrc = new Map();\n    // First assume RTX is used.\n    for (const line of offerMediaObject.ssrcGroups || []) {\n        if (line.semantics !== 'FID')\n            continue;\n        let [ssrc, rtxSsrc] = line.ssrcs.split(/\\s+/);\n        ssrc = Number(ssrc);\n        rtxSsrc = Number(rtxSsrc);\n        if (ssrcs.has(ssrc)) {\n            // Remove both the SSRC and RTX SSRC from the set so later we know that they\n            // are already handled.\n            ssrcs.delete(ssrc);\n            ssrcs.delete(rtxSsrc);\n            // Add to the map.\n            ssrcToRtxSsrc.set(ssrc, rtxSsrc);\n        }\n    }\n    // If the set of SSRCs is not empty it means that RTX is not being used, so take\n    // media SSRCs from there.\n    for (const ssrc of ssrcs) {\n        // Add to the map.\n        ssrcToRtxSsrc.set(ssrc, null);\n    }\n    const encodings = [];\n    for (const [ssrc, rtxSsrc] of ssrcToRtxSsrc) {\n        const encoding = { ssrc };\n        if (rtxSsrc)\n            encoding.rtx = { ssrc: rtxSsrc };\n        encodings.push(encoding);\n    }\n    return encodings;\n}\nexports.getRtpEncodings = getRtpEncodings;\n/**\n * Adds multi-ssrc based simulcast into the given SDP media section offer.\n */\nfunction addLegacySimulcast({ offerMediaObject, track, numStreams }) {\n    if (numStreams <= 1)\n        throw new TypeError('numStreams must be greater than 1');\n    let firstSsrc;\n    let firstRtxSsrc;\n    let streamId;\n    // Get the SSRC.\n    const ssrcMsidLine = (offerMediaObject.ssrcs || [])\n        .find((line) => {\n        if (line.attribute !== 'msid')\n            return false;\n        const trackId = line.value.split(' ')[1];\n        if (trackId === track.id) {\n            firstSsrc = line.id;\n            streamId = line.value.split(' ')[0];\n            return true;\n        }\n        else {\n            return false;\n        }\n    });\n    if (!ssrcMsidLine)\n        throw new Error(`a=ssrc line with msid information not found [track.id:${track.id}]`);\n    // Get the SSRC for RTX.\n    (offerMediaObject.ssrcGroups || [])\n        .some((line) => {\n        if (line.semantics !== 'FID')\n            return false;\n        const ssrcs = line.ssrcs.split(/\\s+/);\n        if (Number(ssrcs[0]) === firstSsrc) {\n            firstRtxSsrc = Number(ssrcs[1]);\n            return true;\n        }\n        else {\n            return false;\n        }\n    });\n    const ssrcCnameLine = offerMediaObject.ssrcs\n        .find((line) => (line.attribute === 'cname' && line.id === firstSsrc));\n    if (!ssrcCnameLine)\n        throw new Error(`a=ssrc line with cname information not found [track.id:${track.id}]`);\n    const cname = ssrcCnameLine.value;\n    const ssrcs = [];\n    const rtxSsrcs = [];\n    for (let i = 0; i < numStreams; ++i) {\n        ssrcs.push(firstSsrc + i);\n        if (firstRtxSsrc)\n            rtxSsrcs.push(firstRtxSsrc + i);\n    }\n    offerMediaObject.ssrcGroups = offerMediaObject.ssrcGroups || [];\n    offerMediaObject.ssrcs = offerMediaObject.ssrcs || [];\n    offerMediaObject.ssrcGroups.push({\n        semantics: 'SIM',\n        ssrcs: ssrcs.join(' ')\n    });\n    for (let i = 0; i < ssrcs.length; ++i) {\n        const ssrc = ssrcs[i];\n        offerMediaObject.ssrcs.push({\n            id: ssrc,\n            attribute: 'cname',\n            value: cname\n        });\n        offerMediaObject.ssrcs.push({\n            id: ssrc,\n            attribute: 'msid',\n            value: `${streamId} ${track.id}`\n        });\n    }\n    for (let i = 0; i < rtxSsrcs.length; ++i) {\n        const ssrc = ssrcs[i];\n        const rtxSsrc = rtxSsrcs[i];\n        offerMediaObject.ssrcs.push({\n            id: rtxSsrc,\n            attribute: 'cname',\n            value: cname\n        });\n        offerMediaObject.ssrcs.push({\n            id: rtxSsrc,\n            attribute: 'msid',\n            value: `${streamId} ${track.id}`\n        });\n        offerMediaObject.ssrcGroups.push({\n            semantics: 'FID',\n            ssrcs: `${ssrc} ${rtxSsrc}`\n        });\n    }\n}\nexports.addLegacySimulcast = addLegacySimulcast;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Chrome67 = void 0;\nconst sdpTransform = __importStar(require(\"sdp-transform\"));\nconst Logger_1 = require(\"../Logger\");\nconst utils = __importStar(require(\"../utils\"));\nconst ortc = __importStar(require(\"../ortc\"));\nconst sdpCommonUtils = __importStar(require(\"./sdp/commonUtils\"));\nconst sdpPlanBUtils = __importStar(require(\"./sdp/planBUtils\"));\nconst HandlerInterface_1 = require(\"./HandlerInterface\");\nconst RemoteSdp_1 = require(\"./sdp/RemoteSdp\");\nconst logger = new Logger_1.Logger('Chrome67');\nconst SCTP_NUM_STREAMS = { OS: 1024, MIS: 1024 };\nclass Chrome67 extends HandlerInterface_1.HandlerInterface {\n    constructor() {\n        super();\n        // Local stream for sending.\n        this._sendStream = new MediaStream();\n        // Map of RTCRtpSender indexed by localId.\n        this._mapSendLocalIdRtpSender = new Map();\n        // Next sending localId.\n        this._nextSendLocalId = 0;\n        // Map of MID, RTP parameters and RTCRtpReceiver indexed by local id.\n        // Value is an Object with mid, rtpParameters and rtpReceiver.\n        this._mapRecvLocalIdInfo = new Map();\n        // Whether a DataChannel m=application section has been created.\n        this._hasDataChannelMediaSection = false;\n        // Sending DataChannel id value counter. Incremented for each new DataChannel.\n        this._nextSendSctpStreamId = 0;\n        // Got transport local and remote parameters.\n        this._transportReady = false;\n    }\n    /**\n     * Creates a factory function.\n     */\n    static createFactory() {\n        return () => new Chrome67();\n    }\n    get name() {\n        return 'Chrome67';\n    }\n    close() {\n        logger.debug('close()');\n        // Close RTCPeerConnection.\n        if (this._pc) {\n            try {\n                this._pc.close();\n            }\n            catch (error) { }\n        }\n    }\n    async getNativeRtpCapabilities() {\n        logger.debug('getNativeRtpCapabilities()');\n        const pc = new RTCPeerConnection({\n            iceServers: [],\n            iceTransportPolicy: 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require',\n            sdpSemantics: 'plan-b'\n        });\n        try {\n            const offer = await pc.createOffer({\n                offerToReceiveAudio: true,\n                offerToReceiveVideo: true\n            });\n            try {\n                pc.close();\n            }\n            catch (error) { }\n            const sdpObject = sdpTransform.parse(offer.sdp);\n            const nativeRtpCapabilities = sdpCommonUtils.extractRtpCapabilities({ sdpObject });\n            return nativeRtpCapabilities;\n        }\n        catch (error) {\n            try {\n                pc.close();\n            }\n            catch (error2) { }\n            throw error;\n        }\n    }\n    async getNativeSctpCapabilities() {\n        logger.debug('getNativeSctpCapabilities()');\n        return {\n            numStreams: SCTP_NUM_STREAMS\n        };\n    }\n    run({ direction, iceParameters, iceCandidates, dtlsParameters, sctpParameters, iceServers, iceTransportPolicy, additionalSettings, proprietaryConstraints, extendedRtpCapabilities }) {\n        logger.debug('run()');\n        this._direction = direction;\n        this._remoteSdp = new RemoteSdp_1.RemoteSdp({\n            iceParameters,\n            iceCandidates,\n            dtlsParameters,\n            sctpParameters,\n            planB: true\n        });\n        this._sendingRtpParametersByKind =\n            {\n                audio: ortc.getSendingRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRtpParameters('video', extendedRtpCapabilities)\n            };\n        this._sendingRemoteRtpParametersByKind =\n            {\n                audio: ortc.getSendingRemoteRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRemoteRtpParameters('video', extendedRtpCapabilities)\n            };\n        if (dtlsParameters.role && dtlsParameters.role !== 'auto') {\n            this._forcedLocalDtlsRole = dtlsParameters.role === 'server'\n                ? 'client'\n                : 'server';\n        }\n        this._pc = new RTCPeerConnection({\n            iceServers: iceServers || [],\n            iceTransportPolicy: iceTransportPolicy || 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require',\n            sdpSemantics: 'plan-b',\n            ...additionalSettings\n        }, proprietaryConstraints);\n        // Handle RTCPeerConnection connection status.\n        this._pc.addEventListener('iceconnectionstatechange', () => {\n            switch (this._pc.iceConnectionState) {\n                case 'checking':\n                    this.emit('@connectionstatechange', 'connecting');\n                    break;\n                case 'connected':\n                case 'completed':\n                    this.emit('@connectionstatechange', 'connected');\n                    break;\n                case 'failed':\n                    this.emit('@connectionstatechange', 'failed');\n                    break;\n                case 'disconnected':\n                    this.emit('@connectionstatechange', 'disconnected');\n                    break;\n                case 'closed':\n                    this.emit('@connectionstatechange', 'closed');\n                    break;\n            }\n        });\n    }\n    async updateIceServers(iceServers) {\n        logger.debug('updateIceServers()');\n        const configuration = this._pc.getConfiguration();\n        configuration.iceServers = iceServers;\n        this._pc.setConfiguration(configuration);\n    }\n    async restartIce(iceParameters) {\n        logger.debug('restartIce()');\n        // Provide the remote SDP handler with new remote ICE parameters.\n        this._remoteSdp.updateIceParameters(iceParameters);\n        if (!this._transportReady)\n            return;\n        if (this._direction === 'send') {\n            const offer = await this._pc.createOffer({ iceRestart: true });\n            logger.debug('restartIce() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n        }\n        else {\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            logger.debug('restartIce() | calling pc.setLocalDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n        }\n    }\n    async getTransportStats() {\n        return this._pc.getStats();\n    }\n    async send({ track, encodings, codecOptions, codec }) {\n        var _a;\n        this._assertSendDirection();\n        logger.debug('send() [kind:%s, track.id:%s]', track.kind, track.id);\n        if (codec) {\n            logger.warn('send() | codec selection is not available in %s handler', this.name);\n        }\n        this._sendStream.addTrack(track);\n        this._pc.addTrack(track, this._sendStream);\n        let offer = await this._pc.createOffer();\n        let localSdpObject = sdpTransform.parse(offer.sdp);\n        let offerMediaObject;\n        const sendingRtpParameters = utils.clone(this._sendingRtpParametersByKind[track.kind], {});\n        sendingRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRtpParameters.codecs);\n        const sendingRemoteRtpParameters = utils.clone(this._sendingRemoteRtpParametersByKind[track.kind], {});\n        sendingRemoteRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRemoteRtpParameters.codecs);\n        if (!this._transportReady) {\n            await this._setupTransport({\n                localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                localSdpObject\n            });\n        }\n        if (track.kind === 'video' && encodings && encodings.length > 1) {\n            logger.debug('send() | enabling simulcast');\n            localSdpObject = sdpTransform.parse(offer.sdp);\n            offerMediaObject = localSdpObject.media\n                .find((m) => m.type === 'video');\n            sdpPlanBUtils.addLegacySimulcast({\n                offerMediaObject,\n                track,\n                numStreams: encodings.length\n            });\n            offer = { type: 'offer', sdp: sdpTransform.write(localSdpObject) };\n        }\n        logger.debug('send() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        offerMediaObject = localSdpObject.media\n            .find((m) => m.type === track.kind);\n        // Set RTCP CNAME.\n        sendingRtpParameters.rtcp.cname =\n            sdpCommonUtils.getCname({ offerMediaObject });\n        // Set RTP encodings.\n        sendingRtpParameters.encodings =\n            sdpPlanBUtils.getRtpEncodings({ offerMediaObject, track });\n        // Complete encodings with given values.\n        if (encodings) {\n            for (let idx = 0; idx < sendingRtpParameters.encodings.length; ++idx) {\n                if (encodings[idx])\n                    Object.assign(sendingRtpParameters.encodings[idx], encodings[idx]);\n            }\n        }\n        // If VP8 and there is effective simulcast, add scalabilityMode to each\n        // encoding.\n        if (sendingRtpParameters.encodings.length > 1 &&\n            sendingRtpParameters.codecs[0].mimeType.toLowerCase() === 'video/vp8') {\n            for (const encoding of sendingRtpParameters.encodings) {\n                encoding.scalabilityMode = 'S1T3';\n            }\n        }\n        this._remoteSdp.send({\n            offerMediaObject,\n            offerRtpParameters: sendingRtpParameters,\n            answerRtpParameters: sendingRemoteRtpParameters,\n            codecOptions\n        });\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('send() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n        const localId = String(this._nextSendLocalId);\n        this._nextSendLocalId++;\n        const rtpSender = this._pc.getSenders()\n            .find((s) => s.track === track);\n        // Insert into the map.\n        this._mapSendLocalIdRtpSender.set(localId, rtpSender);\n        return {\n            localId: localId,\n            rtpParameters: sendingRtpParameters,\n            rtpSender\n        };\n    }\n    async stopSending(localId) {\n        this._assertSendDirection();\n        logger.debug('stopSending() [localId:%s]', localId);\n        const rtpSender = this._mapSendLocalIdRtpSender.get(localId);\n        if (!rtpSender)\n            throw new Error('associated RTCRtpSender not found');\n        this._pc.removeTrack(rtpSender);\n        if (rtpSender.track)\n            this._sendStream.removeTrack(rtpSender.track);\n        this._mapSendLocalIdRtpSender.delete(localId);\n        const offer = await this._pc.createOffer();\n        logger.debug('stopSending() | calling pc.setLocalDescription() [offer:%o]', offer);\n        try {\n            await this._pc.setLocalDescription(offer);\n        }\n        catch (error) {\n            // NOTE: If there are no sending tracks, setLocalDescription() will fail with\n            // \"Failed to create channels\". If so, ignore it.\n            if (this._sendStream.getTracks().length === 0) {\n                logger.warn('stopSending() | ignoring expected error due no sending tracks: %s', error.toString());\n                return;\n            }\n            throw error;\n        }\n        if (this._pc.signalingState === 'stable')\n            return;\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopSending() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n    }\n    async replaceTrack(localId, track) {\n        this._assertSendDirection();\n        if (track) {\n            logger.debug('replaceTrack() [localId:%s, track.id:%s]', localId, track.id);\n        }\n        else {\n            logger.debug('replaceTrack() [localId:%s, no track]', localId);\n        }\n        const rtpSender = this._mapSendLocalIdRtpSender.get(localId);\n        if (!rtpSender)\n            throw new Error('associated RTCRtpSender not found');\n        const oldTrack = rtpSender.track;\n        await rtpSender.replaceTrack(track);\n        // Remove the old track from the local stream.\n        if (oldTrack)\n            this._sendStream.removeTrack(oldTrack);\n        // Add the new track to the local stream.\n        if (track)\n            this._sendStream.addTrack(track);\n    }\n    async setMaxSpatialLayer(localId, spatialLayer) {\n        this._assertSendDirection();\n        logger.debug('setMaxSpatialLayer() [localId:%s, spatialLayer:%s]', localId, spatialLayer);\n        const rtpSender = this._mapSendLocalIdRtpSender.get(localId);\n        if (!rtpSender)\n            throw new Error('associated RTCRtpSender not found');\n        const parameters = rtpSender.getParameters();\n        parameters.encodings.forEach((encoding, idx) => {\n            if (idx <= spatialLayer)\n                encoding.active = true;\n            else\n                encoding.active = false;\n        });\n        await rtpSender.setParameters(parameters);\n    }\n    async setRtpEncodingParameters(localId, params) {\n        this._assertSendDirection();\n        logger.debug('setRtpEncodingParameters() [localId:%s, params:%o]', localId, params);\n        const rtpSender = this._mapSendLocalIdRtpSender.get(localId);\n        if (!rtpSender)\n            throw new Error('associated RTCRtpSender not found');\n        const parameters = rtpSender.getParameters();\n        parameters.encodings.forEach((encoding, idx) => {\n            parameters.encodings[idx] = { ...encoding, ...params };\n        });\n        await rtpSender.setParameters(parameters);\n    }\n    async getSenderStats(localId) {\n        this._assertSendDirection();\n        const rtpSender = this._mapSendLocalIdRtpSender.get(localId);\n        if (!rtpSender)\n            throw new Error('associated RTCRtpSender not found');\n        return rtpSender.getStats();\n    }\n    async sendDataChannel({ ordered, maxPacketLifeTime, maxRetransmits, label, protocol }) {\n        var _a;\n        this._assertSendDirection();\n        const options = {\n            negotiated: true,\n            id: this._nextSendSctpStreamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmitTime: maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('sendDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // Increase next id.\n        this._nextSendSctpStreamId =\n            ++this._nextSendSctpStreamId % SCTP_NUM_STREAMS.MIS;\n        // If this is the first DataChannel we need to create the SDP answer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            const offer = await this._pc.createOffer();\n            const localSdpObject = sdpTransform.parse(offer.sdp);\n            const offerMediaObject = localSdpObject.media\n                .find((m) => m.type === 'application');\n            if (!this._transportReady) {\n                await this._setupTransport({\n                    localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                    localSdpObject\n                });\n            }\n            logger.debug('sendDataChannel() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            this._remoteSdp.sendSctpAssociation({ offerMediaObject });\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        const sctpStreamParameters = {\n            streamId: options.id,\n            ordered: options.ordered,\n            maxPacketLifeTime: options.maxPacketLifeTime,\n            maxRetransmits: options.maxRetransmits\n        };\n        return { dataChannel, sctpStreamParameters };\n    }\n    async receive({ trackId, kind, rtpParameters }) {\n        var _a;\n        this._assertRecvDirection();\n        logger.debug('receive() [trackId:%s, kind:%s]', trackId, kind);\n        const localId = trackId;\n        const mid = kind;\n        this._remoteSdp.receive({\n            mid,\n            kind,\n            offerRtpParameters: rtpParameters,\n            streamId: rtpParameters.rtcp.cname,\n            trackId\n        });\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('receive() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        let answer = await this._pc.createAnswer();\n        const localSdpObject = sdpTransform.parse(answer.sdp);\n        const answerMediaObject = localSdpObject.media\n            .find((m) => String(m.mid) === mid);\n        // May need to modify codec parameters in the answer based on codec\n        // parameters in the offer.\n        sdpCommonUtils.applyCodecParameters({\n            offerRtpParameters: rtpParameters,\n            answerMediaObject\n        });\n        answer = { type: 'answer', sdp: sdpTransform.write(localSdpObject) };\n        if (!this._transportReady) {\n            await this._setupTransport({\n                localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                localSdpObject\n            });\n        }\n        logger.debug('receive() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n        const rtpReceiver = this._pc.getReceivers()\n            .find((r) => r.track && r.track.id === localId);\n        if (!rtpReceiver)\n            throw new Error('new RTCRtpReceiver not');\n        // Insert into the map.\n        this._mapRecvLocalIdInfo.set(localId, { mid, rtpParameters, rtpReceiver });\n        return {\n            localId,\n            track: rtpReceiver.track,\n            rtpReceiver\n        };\n    }\n    async stopReceiving(localId) {\n        this._assertRecvDirection();\n        logger.debug('stopReceiving() [localId:%s]', localId);\n        const { mid, rtpParameters } = this._mapRecvLocalIdInfo.get(localId) || {};\n        // Remove from the map.\n        this._mapRecvLocalIdInfo.delete(localId);\n        this._remoteSdp.planBStopReceiving({ mid: mid, offerRtpParameters: rtpParameters });\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('stopReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n    }\n    async pauseReceiving(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    localId) {\n        // Unimplemented.\n    }\n    async resumeReceiving(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    localId) {\n        // Unimplemented.\n    }\n    async getReceiverStats(localId) {\n        this._assertRecvDirection();\n        const { rtpReceiver } = this._mapRecvLocalIdInfo.get(localId) || {};\n        if (!rtpReceiver)\n            throw new Error('associated RTCRtpReceiver not found');\n        return rtpReceiver.getStats();\n    }\n    async receiveDataChannel({ sctpStreamParameters, label, protocol }) {\n        var _a;\n        this._assertRecvDirection();\n        const { streamId, ordered, maxPacketLifeTime, maxRetransmits } = sctpStreamParameters;\n        const options = {\n            negotiated: true,\n            id: streamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmitTime: maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('receiveDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // If this is the first DataChannel we need to create the SDP offer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            this._remoteSdp.receiveSctpAssociation({ oldDataChannelSpec: true });\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            if (!this._transportReady) {\n                const localSdpObject = sdpTransform.parse(answer.sdp);\n                await this._setupTransport({\n                    localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                    localSdpObject\n                });\n            }\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        return { dataChannel };\n    }\n    async _setupTransport({ localDtlsRole, localSdpObject }) {\n        if (!localSdpObject)\n            localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        // Get our local DTLS parameters.\n        const dtlsParameters = sdpCommonUtils.extractDtlsParameters({ sdpObject: localSdpObject });\n        // Set our DTLS role.\n        dtlsParameters.role = localDtlsRole;\n        // Update the remote DTLS role in the SDP.\n        this._remoteSdp.updateDtlsRole(localDtlsRole === 'client' ? 'server' : 'client');\n        // Need to tell the remote transport about our parameters.\n        await this.safeEmitAsPromise('@connect', { dtlsParameters });\n        this._transportReady = true;\n    }\n    _assertSendDirection() {\n        if (this._direction !== 'send') {\n            throw new Error('method can just be called for handlers with \"send\" direction');\n        }\n    }\n    _assertRecvDirection() {\n        if (this._direction !== 'recv') {\n            throw new Error('method can just be called for handlers with \"recv\" direction');\n        }\n    }\n}\nexports.Chrome67 = Chrome67;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Chrome55 = void 0;\nconst sdpTransform = __importStar(require(\"sdp-transform\"));\nconst Logger_1 = require(\"../Logger\");\nconst errors_1 = require(\"../errors\");\nconst utils = __importStar(require(\"../utils\"));\nconst ortc = __importStar(require(\"../ortc\"));\nconst sdpCommonUtils = __importStar(require(\"./sdp/commonUtils\"));\nconst sdpPlanBUtils = __importStar(require(\"./sdp/planBUtils\"));\nconst HandlerInterface_1 = require(\"./HandlerInterface\");\nconst RemoteSdp_1 = require(\"./sdp/RemoteSdp\");\nconst logger = new Logger_1.Logger('Chrome55');\nconst SCTP_NUM_STREAMS = { OS: 1024, MIS: 1024 };\nclass Chrome55 extends HandlerInterface_1.HandlerInterface {\n    constructor() {\n        super();\n        // Local stream for sending.\n        this._sendStream = new MediaStream();\n        // Map of sending MediaStreamTracks indexed by localId.\n        this._mapSendLocalIdTrack = new Map();\n        // Next sending localId.\n        this._nextSendLocalId = 0;\n        // Map of MID, RTP parameters and RTCRtpReceiver indexed by local id.\n        // Value is an Object with mid, rtpParameters and rtpReceiver.\n        this._mapRecvLocalIdInfo = new Map();\n        // Whether a DataChannel m=application section has been created.\n        this._hasDataChannelMediaSection = false;\n        // Sending DataChannel id value counter. Incremented for each new DataChannel.\n        this._nextSendSctpStreamId = 0;\n        // Got transport local and remote parameters.\n        this._transportReady = false;\n    }\n    /**\n     * Creates a factory function.\n     */\n    static createFactory() {\n        return () => new Chrome55();\n    }\n    get name() {\n        return 'Chrome55';\n    }\n    close() {\n        logger.debug('close()');\n        // Close RTCPeerConnection.\n        if (this._pc) {\n            try {\n                this._pc.close();\n            }\n            catch (error) { }\n        }\n    }\n    async getNativeRtpCapabilities() {\n        logger.debug('getNativeRtpCapabilities()');\n        const pc = new RTCPeerConnection({\n            iceServers: [],\n            iceTransportPolicy: 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require',\n            sdpSemantics: 'plan-b'\n        });\n        try {\n            const offer = await pc.createOffer({\n                offerToReceiveAudio: true,\n                offerToReceiveVideo: true\n            });\n            try {\n                pc.close();\n            }\n            catch (error) { }\n            const sdpObject = sdpTransform.parse(offer.sdp);\n            const nativeRtpCapabilities = sdpCommonUtils.extractRtpCapabilities({ sdpObject });\n            return nativeRtpCapabilities;\n        }\n        catch (error) {\n            try {\n                pc.close();\n            }\n            catch (error2) { }\n            throw error;\n        }\n    }\n    async getNativeSctpCapabilities() {\n        logger.debug('getNativeSctpCapabilities()');\n        return {\n            numStreams: SCTP_NUM_STREAMS\n        };\n    }\n    run({ direction, iceParameters, iceCandidates, dtlsParameters, sctpParameters, iceServers, iceTransportPolicy, additionalSettings, proprietaryConstraints, extendedRtpCapabilities }) {\n        logger.debug('run()');\n        this._direction = direction;\n        this._remoteSdp = new RemoteSdp_1.RemoteSdp({\n            iceParameters,\n            iceCandidates,\n            dtlsParameters,\n            sctpParameters,\n            planB: true\n        });\n        this._sendingRtpParametersByKind =\n            {\n                audio: ortc.getSendingRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRtpParameters('video', extendedRtpCapabilities)\n            };\n        this._sendingRemoteRtpParametersByKind =\n            {\n                audio: ortc.getSendingRemoteRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRemoteRtpParameters('video', extendedRtpCapabilities)\n            };\n        if (dtlsParameters.role && dtlsParameters.role !== 'auto') {\n            this._forcedLocalDtlsRole = dtlsParameters.role === 'server'\n                ? 'client'\n                : 'server';\n        }\n        this._pc = new RTCPeerConnection({\n            iceServers: iceServers || [],\n            iceTransportPolicy: iceTransportPolicy || 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require',\n            sdpSemantics: 'plan-b',\n            ...additionalSettings\n        }, proprietaryConstraints);\n        // Handle RTCPeerConnection connection status.\n        this._pc.addEventListener('iceconnectionstatechange', () => {\n            switch (this._pc.iceConnectionState) {\n                case 'checking':\n                    this.emit('@connectionstatechange', 'connecting');\n                    break;\n                case 'connected':\n                case 'completed':\n                    this.emit('@connectionstatechange', 'connected');\n                    break;\n                case 'failed':\n                    this.emit('@connectionstatechange', 'failed');\n                    break;\n                case 'disconnected':\n                    this.emit('@connectionstatechange', 'disconnected');\n                    break;\n                case 'closed':\n                    this.emit('@connectionstatechange', 'closed');\n                    break;\n            }\n        });\n    }\n    async updateIceServers(iceServers) {\n        logger.debug('updateIceServers()');\n        const configuration = this._pc.getConfiguration();\n        configuration.iceServers = iceServers;\n        this._pc.setConfiguration(configuration);\n    }\n    async restartIce(iceParameters) {\n        logger.debug('restartIce()');\n        // Provide the remote SDP handler with new remote ICE parameters.\n        this._remoteSdp.updateIceParameters(iceParameters);\n        if (!this._transportReady)\n            return;\n        if (this._direction === 'send') {\n            const offer = await this._pc.createOffer({ iceRestart: true });\n            logger.debug('restartIce() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n        }\n        else {\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            logger.debug('restartIce() | calling pc.setLocalDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n        }\n    }\n    async getTransportStats() {\n        return this._pc.getStats();\n    }\n    async send({ track, encodings, codecOptions, codec }) {\n        var _a;\n        this._assertSendDirection();\n        logger.debug('send() [kind:%s, track.id:%s]', track.kind, track.id);\n        if (codec) {\n            logger.warn('send() | codec selection is not available in %s handler', this.name);\n        }\n        this._sendStream.addTrack(track);\n        this._pc.addStream(this._sendStream);\n        let offer = await this._pc.createOffer();\n        let localSdpObject = sdpTransform.parse(offer.sdp);\n        let offerMediaObject;\n        const sendingRtpParameters = utils.clone(this._sendingRtpParametersByKind[track.kind], {});\n        sendingRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRtpParameters.codecs);\n        const sendingRemoteRtpParameters = utils.clone(this._sendingRemoteRtpParametersByKind[track.kind], {});\n        sendingRemoteRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRemoteRtpParameters.codecs);\n        if (!this._transportReady) {\n            await this._setupTransport({\n                localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                localSdpObject\n            });\n        }\n        if (track.kind === 'video' && encodings && encodings.length > 1) {\n            logger.debug('send() | enabling simulcast');\n            localSdpObject = sdpTransform.parse(offer.sdp);\n            offerMediaObject = localSdpObject.media.find((m) => m.type === 'video');\n            sdpPlanBUtils.addLegacySimulcast({\n                offerMediaObject,\n                track,\n                numStreams: encodings.length\n            });\n            offer = { type: 'offer', sdp: sdpTransform.write(localSdpObject) };\n        }\n        logger.debug('send() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        offerMediaObject = localSdpObject.media\n            .find((m) => m.type === track.kind);\n        // Set RTCP CNAME.\n        sendingRtpParameters.rtcp.cname =\n            sdpCommonUtils.getCname({ offerMediaObject });\n        // Set RTP encodings.\n        sendingRtpParameters.encodings =\n            sdpPlanBUtils.getRtpEncodings({ offerMediaObject, track });\n        // Complete encodings with given values.\n        if (encodings) {\n            for (let idx = 0; idx < sendingRtpParameters.encodings.length; ++idx) {\n                if (encodings[idx])\n                    Object.assign(sendingRtpParameters.encodings[idx], encodings[idx]);\n            }\n        }\n        // If VP8 and there is effective simulcast, add scalabilityMode to each\n        // encoding.\n        if (sendingRtpParameters.encodings.length > 1 &&\n            sendingRtpParameters.codecs[0].mimeType.toLowerCase() === 'video/vp8') {\n            for (const encoding of sendingRtpParameters.encodings) {\n                encoding.scalabilityMode = 'S1T3';\n            }\n        }\n        this._remoteSdp.send({\n            offerMediaObject,\n            offerRtpParameters: sendingRtpParameters,\n            answerRtpParameters: sendingRemoteRtpParameters,\n            codecOptions\n        });\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('send() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n        const localId = String(this._nextSendLocalId);\n        this._nextSendLocalId++;\n        // Insert into the map.\n        this._mapSendLocalIdTrack.set(localId, track);\n        return {\n            localId: localId,\n            rtpParameters: sendingRtpParameters\n        };\n    }\n    async stopSending(localId) {\n        this._assertSendDirection();\n        logger.debug('stopSending() [localId:%s]', localId);\n        const track = this._mapSendLocalIdTrack.get(localId);\n        if (!track)\n            throw new Error('track not found');\n        this._mapSendLocalIdTrack.delete(localId);\n        this._sendStream.removeTrack(track);\n        this._pc.addStream(this._sendStream);\n        const offer = await this._pc.createOffer();\n        logger.debug('stopSending() | calling pc.setLocalDescription() [offer:%o]', offer);\n        try {\n            await this._pc.setLocalDescription(offer);\n        }\n        catch (error) {\n            // NOTE: If there are no sending tracks, setLocalDescription() will fail with\n            // \"Failed to create channels\". If so, ignore it.\n            if (this._sendStream.getTracks().length === 0) {\n                logger.warn('stopSending() | ignoring expected error due no sending tracks: %s', error.toString());\n                return;\n            }\n            throw error;\n        }\n        if (this._pc.signalingState === 'stable')\n            return;\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopSending() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n    }\n    async replaceTrack(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    localId, track) {\n        throw new errors_1.UnsupportedError('not implemented');\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async setMaxSpatialLayer(localId, spatialLayer) {\n        throw new errors_1.UnsupportedError(' not implemented');\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async setRtpEncodingParameters(localId, params) {\n        throw new errors_1.UnsupportedError('not supported');\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async getSenderStats(localId) {\n        throw new errors_1.UnsupportedError('not implemented');\n    }\n    async sendDataChannel({ ordered, maxPacketLifeTime, maxRetransmits, label, protocol }) {\n        var _a;\n        this._assertSendDirection();\n        const options = {\n            negotiated: true,\n            id: this._nextSendSctpStreamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmitTime: maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('sendDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // Increase next id.\n        this._nextSendSctpStreamId =\n            ++this._nextSendSctpStreamId % SCTP_NUM_STREAMS.MIS;\n        // If this is the first DataChannel we need to create the SDP answer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            const offer = await this._pc.createOffer();\n            const localSdpObject = sdpTransform.parse(offer.sdp);\n            const offerMediaObject = localSdpObject.media\n                .find((m) => m.type === 'application');\n            if (!this._transportReady) {\n                await this._setupTransport({\n                    localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                    localSdpObject\n                });\n            }\n            logger.debug('sendDataChannel() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            this._remoteSdp.sendSctpAssociation({ offerMediaObject });\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        const sctpStreamParameters = {\n            streamId: options.id,\n            ordered: options.ordered,\n            maxPacketLifeTime: options.maxPacketLifeTime,\n            maxRetransmits: options.maxRetransmits\n        };\n        return { dataChannel, sctpStreamParameters };\n    }\n    async receive({ trackId, kind, rtpParameters }) {\n        var _a;\n        this._assertRecvDirection();\n        logger.debug('receive() [trackId:%s, kind:%s]', trackId, kind);\n        const localId = trackId;\n        const mid = kind;\n        const streamId = rtpParameters.rtcp.cname;\n        this._remoteSdp.receive({\n            mid,\n            kind,\n            offerRtpParameters: rtpParameters,\n            streamId,\n            trackId\n        });\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('receive() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        let answer = await this._pc.createAnswer();\n        const localSdpObject = sdpTransform.parse(answer.sdp);\n        const answerMediaObject = localSdpObject.media\n            .find((m) => String(m.mid) === mid);\n        // May need to modify codec parameters in the answer based on codec\n        // parameters in the offer.\n        sdpCommonUtils.applyCodecParameters({\n            offerRtpParameters: rtpParameters,\n            answerMediaObject\n        });\n        answer = { type: 'answer', sdp: sdpTransform.write(localSdpObject) };\n        if (!this._transportReady) {\n            await this._setupTransport({\n                localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                localSdpObject\n            });\n        }\n        logger.debug('receive() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n        const stream = this._pc.getRemoteStreams()\n            .find((s) => s.id === streamId);\n        const track = stream.getTrackById(localId);\n        if (!track)\n            throw new Error('remote track not found');\n        // Insert into the map.\n        this._mapRecvLocalIdInfo.set(localId, { mid, rtpParameters });\n        return { localId, track };\n    }\n    async stopReceiving(localId) {\n        this._assertRecvDirection();\n        logger.debug('stopReceiving() [localId:%s]', localId);\n        const { mid, rtpParameters } = this._mapRecvLocalIdInfo.get(localId) || {};\n        // Remove from the map.\n        this._mapRecvLocalIdInfo.delete(localId);\n        this._remoteSdp.planBStopReceiving({ mid: mid, offerRtpParameters: rtpParameters });\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('stopReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n    }\n    async pauseReceiving(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    localId) {\n        // Unimplemented.\n    }\n    async resumeReceiving(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    localId) {\n        // Unimplemented.\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async getReceiverStats(localId) {\n        throw new errors_1.UnsupportedError('not implemented');\n    }\n    async receiveDataChannel({ sctpStreamParameters, label, protocol }) {\n        var _a;\n        this._assertRecvDirection();\n        const { streamId, ordered, maxPacketLifeTime, maxRetransmits } = sctpStreamParameters;\n        const options = {\n            negotiated: true,\n            id: streamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmitTime: maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('receiveDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // If this is the first DataChannel we need to create the SDP offer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            this._remoteSdp.receiveSctpAssociation({ oldDataChannelSpec: true });\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            if (!this._transportReady) {\n                const localSdpObject = sdpTransform.parse(answer.sdp);\n                await this._setupTransport({\n                    localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                    localSdpObject\n                });\n            }\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        return { dataChannel };\n    }\n    async _setupTransport({ localDtlsRole, localSdpObject }) {\n        if (!localSdpObject)\n            localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        // Get our local DTLS parameters.\n        const dtlsParameters = sdpCommonUtils.extractDtlsParameters({ sdpObject: localSdpObject });\n        // Set our DTLS role.\n        dtlsParameters.role = localDtlsRole;\n        // Update the remote DTLS role in the SDP.\n        this._remoteSdp.updateDtlsRole(localDtlsRole === 'client' ? 'server' : 'client');\n        // Need to tell the remote transport about our parameters.\n        await this.safeEmitAsPromise('@connect', { dtlsParameters });\n        this._transportReady = true;\n    }\n    _assertSendDirection() {\n        if (this._direction !== 'send') {\n            throw new Error('method can just be called for handlers with \"send\" direction');\n        }\n    }\n    _assertRecvDirection() {\n        if (this._direction !== 'recv') {\n            throw new Error('method can just be called for handlers with \"recv\" direction');\n        }\n    }\n}\nexports.Chrome55 = Chrome55;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Firefox60 = void 0;\nconst sdpTransform = __importStar(require(\"sdp-transform\"));\nconst Logger_1 = require(\"../Logger\");\nconst errors_1 = require(\"../errors\");\nconst utils = __importStar(require(\"../utils\"));\nconst ortc = __importStar(require(\"../ortc\"));\nconst sdpCommonUtils = __importStar(require(\"./sdp/commonUtils\"));\nconst sdpUnifiedPlanUtils = __importStar(require(\"./sdp/unifiedPlanUtils\"));\nconst HandlerInterface_1 = require(\"./HandlerInterface\");\nconst RemoteSdp_1 = require(\"./sdp/RemoteSdp\");\nconst logger = new Logger_1.Logger('Firefox60');\nconst SCTP_NUM_STREAMS = { OS: 16, MIS: 2048 };\nclass Firefox60 extends HandlerInterface_1.HandlerInterface {\n    constructor() {\n        super();\n        // Map of RTCTransceivers indexed by MID.\n        this._mapMidTransceiver = new Map();\n        // Local stream for sending.\n        this._sendStream = new MediaStream();\n        // Whether a DataChannel m=application section has been created.\n        this._hasDataChannelMediaSection = false;\n        // Sending DataChannel id value counter. Incremented for each new DataChannel.\n        this._nextSendSctpStreamId = 0;\n        // Got transport local and remote parameters.\n        this._transportReady = false;\n    }\n    /**\n     * Creates a factory function.\n     */\n    static createFactory() {\n        return () => new Firefox60();\n    }\n    get name() {\n        return 'Firefox60';\n    }\n    close() {\n        logger.debug('close()');\n        // Close RTCPeerConnection.\n        if (this._pc) {\n            try {\n                this._pc.close();\n            }\n            catch (error) { }\n        }\n    }\n    async getNativeRtpCapabilities() {\n        logger.debug('getNativeRtpCapabilities()');\n        const pc = new RTCPeerConnection({\n            iceServers: [],\n            iceTransportPolicy: 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require'\n        });\n        // NOTE: We need to add a real video track to get the RID extension mapping.\n        const canvas = document.createElement('canvas');\n        // NOTE: Otherwise Firefox fails in next line.\n        canvas.getContext('2d');\n        const fakeStream = canvas.captureStream();\n        const fakeVideoTrack = fakeStream.getVideoTracks()[0];\n        try {\n            pc.addTransceiver('audio', { direction: 'sendrecv' });\n            const videoTransceiver = pc.addTransceiver(fakeVideoTrack, { direction: 'sendrecv' });\n            const parameters = videoTransceiver.sender.getParameters();\n            const encodings = [\n                { rid: 'r0', maxBitrate: 100000 },\n                { rid: 'r1', maxBitrate: 500000 }\n            ];\n            parameters.encodings = encodings;\n            await videoTransceiver.sender.setParameters(parameters);\n            const offer = await pc.createOffer();\n            try {\n                canvas.remove();\n            }\n            catch (error) { }\n            try {\n                fakeVideoTrack.stop();\n            }\n            catch (error) { }\n            try {\n                pc.close();\n            }\n            catch (error) { }\n            const sdpObject = sdpTransform.parse(offer.sdp);\n            const nativeRtpCapabilities = sdpCommonUtils.extractRtpCapabilities({ sdpObject });\n            return nativeRtpCapabilities;\n        }\n        catch (error) {\n            try {\n                canvas.remove();\n            }\n            catch (error2) { }\n            try {\n                fakeVideoTrack.stop();\n            }\n            catch (error2) { }\n            try {\n                pc.close();\n            }\n            catch (error2) { }\n            throw error;\n        }\n    }\n    async getNativeSctpCapabilities() {\n        logger.debug('getNativeSctpCapabilities()');\n        return {\n            numStreams: SCTP_NUM_STREAMS\n        };\n    }\n    run({ direction, iceParameters, iceCandidates, dtlsParameters, sctpParameters, iceServers, iceTransportPolicy, additionalSettings, proprietaryConstraints, extendedRtpCapabilities }) {\n        logger.debug('run()');\n        this._direction = direction;\n        this._remoteSdp = new RemoteSdp_1.RemoteSdp({\n            iceParameters,\n            iceCandidates,\n            dtlsParameters,\n            sctpParameters\n        });\n        this._sendingRtpParametersByKind =\n            {\n                audio: ortc.getSendingRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRtpParameters('video', extendedRtpCapabilities)\n            };\n        this._sendingRemoteRtpParametersByKind =\n            {\n                audio: ortc.getSendingRemoteRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRemoteRtpParameters('video', extendedRtpCapabilities)\n            };\n        this._pc = new RTCPeerConnection({\n            iceServers: iceServers || [],\n            iceTransportPolicy: iceTransportPolicy || 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require',\n            ...additionalSettings\n        }, proprietaryConstraints);\n        // Handle RTCPeerConnection connection status.\n        this._pc.addEventListener('iceconnectionstatechange', () => {\n            switch (this._pc.iceConnectionState) {\n                case 'checking':\n                    this.emit('@connectionstatechange', 'connecting');\n                    break;\n                case 'connected':\n                case 'completed':\n                    this.emit('@connectionstatechange', 'connected');\n                    break;\n                case 'failed':\n                    this.emit('@connectionstatechange', 'failed');\n                    break;\n                case 'disconnected':\n                    this.emit('@connectionstatechange', 'disconnected');\n                    break;\n                case 'closed':\n                    this.emit('@connectionstatechange', 'closed');\n                    break;\n            }\n        });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async updateIceServers(iceServers) {\n        // NOTE: Firefox does not implement pc.setConfiguration().\n        throw new errors_1.UnsupportedError('not supported');\n    }\n    async restartIce(iceParameters) {\n        logger.debug('restartIce()');\n        // Provide the remote SDP handler with new remote ICE parameters.\n        this._remoteSdp.updateIceParameters(iceParameters);\n        if (!this._transportReady)\n            return;\n        if (this._direction === 'send') {\n            const offer = await this._pc.createOffer({ iceRestart: true });\n            logger.debug('restartIce() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n        }\n        else {\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            logger.debug('restartIce() | calling pc.setLocalDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n        }\n    }\n    async getTransportStats() {\n        return this._pc.getStats();\n    }\n    async send({ track, encodings, codecOptions, codec }) {\n        this._assertSendDirection();\n        logger.debug('send() [kind:%s, track.id:%s]', track.kind, track.id);\n        if (encodings) {\n            encodings = utils.clone(encodings, []);\n            if (encodings.length > 1) {\n                encodings.forEach((encoding, idx) => {\n                    encoding.rid = `r${idx}`;\n                });\n                // Clone the encodings and reverse them because Firefox likes them\n                // from high to low.\n                encodings.reverse();\n            }\n        }\n        const sendingRtpParameters = utils.clone(this._sendingRtpParametersByKind[track.kind], {});\n        // This may throw.\n        sendingRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRtpParameters.codecs, codec);\n        const sendingRemoteRtpParameters = utils.clone(this._sendingRemoteRtpParametersByKind[track.kind], {});\n        // This may throw.\n        sendingRemoteRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRemoteRtpParameters.codecs, codec);\n        // NOTE: Firefox fails sometimes to properly anticipate the closed media\n        // section that it should use, so don't reuse closed media sections.\n        //   https://github.com/versatica/mediasoup-client/issues/104\n        //\n        // const mediaSectionIdx = this._remoteSdp!.getNextMediaSectionIdx();\n        const transceiver = this._pc.addTransceiver(track, { direction: 'sendonly', streams: [this._sendStream] });\n        // NOTE: This is not spec compliants. Encodings should be given in addTransceiver\n        // second argument, but Firefox does not support it.\n        if (encodings) {\n            const parameters = transceiver.sender.getParameters();\n            parameters.encodings = encodings;\n            await transceiver.sender.setParameters(parameters);\n        }\n        const offer = await this._pc.createOffer();\n        let localSdpObject = sdpTransform.parse(offer.sdp);\n        // In Firefox use DTLS role client even if we are the \"offerer\" since\n        // Firefox does not respect ICE-Lite.\n        if (!this._transportReady)\n            await this._setupTransport({ localDtlsRole: 'client', localSdpObject });\n        logger.debug('send() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        // We can now get the transceiver.mid.\n        const localId = transceiver.mid;\n        // Set MID.\n        sendingRtpParameters.mid = localId;\n        localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        const offerMediaObject = localSdpObject.media[localSdpObject.media.length - 1];\n        // Set RTCP CNAME.\n        sendingRtpParameters.rtcp.cname =\n            sdpCommonUtils.getCname({ offerMediaObject });\n        // Set RTP encodings by parsing the SDP offer if no encodings are given.\n        if (!encodings) {\n            sendingRtpParameters.encodings =\n                sdpUnifiedPlanUtils.getRtpEncodings({ offerMediaObject });\n        }\n        // Set RTP encodings by parsing the SDP offer and complete them with given\n        // one if just a single encoding has been given.\n        else if (encodings.length === 1) {\n            const newEncodings = sdpUnifiedPlanUtils.getRtpEncodings({ offerMediaObject });\n            Object.assign(newEncodings[0], encodings[0]);\n            sendingRtpParameters.encodings = newEncodings;\n        }\n        // Otherwise if more than 1 encoding are given use them verbatim (but\n        // reverse them back since we reversed them above to satisfy Firefox).\n        else {\n            sendingRtpParameters.encodings = encodings.reverse();\n        }\n        // If VP8 or H264 and there is effective simulcast, add scalabilityMode to\n        // each encoding.\n        if (sendingRtpParameters.encodings.length > 1 &&\n            (sendingRtpParameters.codecs[0].mimeType.toLowerCase() === 'video/vp8' ||\n                sendingRtpParameters.codecs[0].mimeType.toLowerCase() === 'video/h264')) {\n            for (const encoding of sendingRtpParameters.encodings) {\n                encoding.scalabilityMode = 'S1T3';\n            }\n        }\n        this._remoteSdp.send({\n            offerMediaObject,\n            offerRtpParameters: sendingRtpParameters,\n            answerRtpParameters: sendingRemoteRtpParameters,\n            codecOptions,\n            extmapAllowMixed: true\n        });\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('send() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n        // Store in the map.\n        this._mapMidTransceiver.set(localId, transceiver);\n        return {\n            localId,\n            rtpParameters: sendingRtpParameters,\n            rtpSender: transceiver.sender\n        };\n    }\n    async stopSending(localId) {\n        logger.debug('stopSending() [localId:%s]', localId);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated transceiver not found');\n        transceiver.sender.replaceTrack(null);\n        this._pc.removeTrack(transceiver.sender);\n        // NOTE: Cannot use closeMediaSection() due to the the note above in send()\n        // method.\n        // this._remoteSdp!.closeMediaSection(transceiver.mid);\n        this._remoteSdp.disableMediaSection(transceiver.mid);\n        const offer = await this._pc.createOffer();\n        logger.debug('stopSending() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopSending() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n        this._mapMidTransceiver.delete(localId);\n    }\n    async replaceTrack(localId, track) {\n        this._assertSendDirection();\n        if (track) {\n            logger.debug('replaceTrack() [localId:%s, track.id:%s]', localId, track.id);\n        }\n        else {\n            logger.debug('replaceTrack() [localId:%s, no track]', localId);\n        }\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated RTCRtpTransceiver not found');\n        await transceiver.sender.replaceTrack(track);\n    }\n    async setMaxSpatialLayer(localId, spatialLayer) {\n        this._assertSendDirection();\n        logger.debug('setMaxSpatialLayer() [localId:%s, spatialLayer:%s]', localId, spatialLayer);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated transceiver not found');\n        const parameters = transceiver.sender.getParameters();\n        // NOTE: We require encodings given from low to high, however Firefox\n        // requires them in reverse order, so do magic here.\n        spatialLayer = parameters.encodings.length - 1 - spatialLayer;\n        parameters.encodings.forEach((encoding, idx) => {\n            if (idx >= spatialLayer)\n                encoding.active = true;\n            else\n                encoding.active = false;\n        });\n        await transceiver.sender.setParameters(parameters);\n    }\n    async setRtpEncodingParameters(localId, params) {\n        this._assertSendDirection();\n        logger.debug('setRtpEncodingParameters() [localId:%s, params:%o]', localId, params);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated RTCRtpTransceiver not found');\n        const parameters = transceiver.sender.getParameters();\n        parameters.encodings.forEach((encoding, idx) => {\n            parameters.encodings[idx] = { ...encoding, ...params };\n        });\n        await transceiver.sender.setParameters(parameters);\n    }\n    async getSenderStats(localId) {\n        this._assertSendDirection();\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated RTCRtpTransceiver not found');\n        return transceiver.sender.getStats();\n    }\n    async sendDataChannel({ ordered, maxPacketLifeTime, maxRetransmits, label, protocol }) {\n        this._assertSendDirection();\n        const options = {\n            negotiated: true,\n            id: this._nextSendSctpStreamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('sendDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // Increase next id.\n        this._nextSendSctpStreamId =\n            ++this._nextSendSctpStreamId % SCTP_NUM_STREAMS.MIS;\n        // If this is the first DataChannel we need to create the SDP answer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            const offer = await this._pc.createOffer();\n            const localSdpObject = sdpTransform.parse(offer.sdp);\n            const offerMediaObject = localSdpObject.media\n                .find((m) => m.type === 'application');\n            if (!this._transportReady)\n                await this._setupTransport({ localDtlsRole: 'client', localSdpObject });\n            logger.debug('sendDataChannel() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            this._remoteSdp.sendSctpAssociation({ offerMediaObject });\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        const sctpStreamParameters = {\n            streamId: options.id,\n            ordered: options.ordered,\n            maxPacketLifeTime: options.maxPacketLifeTime,\n            maxRetransmits: options.maxRetransmits\n        };\n        return { dataChannel, sctpStreamParameters };\n    }\n    async receive({ trackId, kind, rtpParameters }) {\n        this._assertRecvDirection();\n        logger.debug('receive() [trackId:%s, kind:%s]', trackId, kind);\n        const localId = rtpParameters.mid || String(this._mapMidTransceiver.size);\n        this._remoteSdp.receive({\n            mid: localId,\n            kind,\n            offerRtpParameters: rtpParameters,\n            streamId: rtpParameters.rtcp.cname,\n            trackId\n        });\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('receive() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        let answer = await this._pc.createAnswer();\n        const localSdpObject = sdpTransform.parse(answer.sdp);\n        const answerMediaObject = localSdpObject.media\n            .find((m) => String(m.mid) === localId);\n        // May need to modify codec parameters in the answer based on codec\n        // parameters in the offer.\n        sdpCommonUtils.applyCodecParameters({\n            offerRtpParameters: rtpParameters,\n            answerMediaObject\n        });\n        answer = { type: 'answer', sdp: sdpTransform.write(localSdpObject) };\n        if (!this._transportReady)\n            await this._setupTransport({ localDtlsRole: 'client', localSdpObject });\n        logger.debug('receive() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n        const transceiver = this._pc.getTransceivers()\n            .find((t) => t.mid === localId);\n        if (!transceiver)\n            throw new Error('new RTCRtpTransceiver not found');\n        // Store in the map.\n        this._mapMidTransceiver.set(localId, transceiver);\n        return {\n            localId,\n            track: transceiver.receiver.track,\n            rtpReceiver: transceiver.receiver\n        };\n    }\n    async stopReceiving(localId) {\n        this._assertRecvDirection();\n        logger.debug('stopReceiving() [localId:%s]', localId);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated RTCRtpTransceiver not found');\n        this._remoteSdp.closeMediaSection(transceiver.mid);\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('stopReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n        this._mapMidTransceiver.delete(localId);\n    }\n    async pauseReceiving(localId) {\n        this._assertRecvDirection();\n        logger.debug('pauseReceiving() [localId:%s]', localId);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated RTCRtpTransceiver not found');\n        transceiver.direction = 'inactive';\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('pauseReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('pauseReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n    }\n    async resumeReceiving(localId) {\n        this._assertRecvDirection();\n        logger.debug('resumeReceiving() [localId:%s]', localId);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated RTCRtpTransceiver not found');\n        transceiver.direction = 'recvonly';\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('resumeReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('resumeReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n    }\n    async getReceiverStats(localId) {\n        this._assertRecvDirection();\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated RTCRtpTransceiver not found');\n        return transceiver.receiver.getStats();\n    }\n    async receiveDataChannel({ sctpStreamParameters, label, protocol }) {\n        this._assertRecvDirection();\n        const { streamId, ordered, maxPacketLifeTime, maxRetransmits } = sctpStreamParameters;\n        const options = {\n            negotiated: true,\n            id: streamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('receiveDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // If this is the first DataChannel we need to create the SDP offer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            this._remoteSdp.receiveSctpAssociation();\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            if (!this._transportReady) {\n                const localSdpObject = sdpTransform.parse(answer.sdp);\n                await this._setupTransport({ localDtlsRole: 'client', localSdpObject });\n            }\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        return { dataChannel };\n    }\n    async _setupTransport({ localDtlsRole, localSdpObject }) {\n        if (!localSdpObject)\n            localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        // Get our local DTLS parameters.\n        const dtlsParameters = sdpCommonUtils.extractDtlsParameters({ sdpObject: localSdpObject });\n        // Set our DTLS role.\n        dtlsParameters.role = localDtlsRole;\n        // Update the remote DTLS role in the SDP.\n        this._remoteSdp.updateDtlsRole(localDtlsRole === 'client' ? 'server' : 'client');\n        // Need to tell the remote transport about our parameters.\n        await this.safeEmitAsPromise('@connect', { dtlsParameters });\n        this._transportReady = true;\n    }\n    _assertSendDirection() {\n        if (this._direction !== 'send') {\n            throw new Error('method can just be called for handlers with \"send\" direction');\n        }\n    }\n    _assertRecvDirection() {\n        if (this._direction !== 'recv') {\n            throw new Error('method can just be called for handlers with \"recv\" direction');\n        }\n    }\n}\nexports.Firefox60 = Firefox60;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Safari12 = void 0;\nconst sdpTransform = __importStar(require(\"sdp-transform\"));\nconst Logger_1 = require(\"../Logger\");\nconst utils = __importStar(require(\"../utils\"));\nconst ortc = __importStar(require(\"../ortc\"));\nconst sdpCommonUtils = __importStar(require(\"./sdp/commonUtils\"));\nconst sdpUnifiedPlanUtils = __importStar(require(\"./sdp/unifiedPlanUtils\"));\nconst HandlerInterface_1 = require(\"./HandlerInterface\");\nconst RemoteSdp_1 = require(\"./sdp/RemoteSdp\");\nconst logger = new Logger_1.Logger('Safari12');\nconst SCTP_NUM_STREAMS = { OS: 1024, MIS: 1024 };\nclass Safari12 extends HandlerInterface_1.HandlerInterface {\n    constructor() {\n        super();\n        // Map of RTCTransceivers indexed by MID.\n        this._mapMidTransceiver = new Map();\n        // Local stream for sending.\n        this._sendStream = new MediaStream();\n        // Whether a DataChannel m=application section has been created.\n        this._hasDataChannelMediaSection = false;\n        // Sending DataChannel id value counter. Incremented for each new DataChannel.\n        this._nextSendSctpStreamId = 0;\n        // Got transport local and remote parameters.\n        this._transportReady = false;\n    }\n    /**\n     * Creates a factory function.\n     */\n    static createFactory() {\n        return () => new Safari12();\n    }\n    get name() {\n        return 'Safari12';\n    }\n    close() {\n        logger.debug('close()');\n        // Close RTCPeerConnection.\n        if (this._pc) {\n            try {\n                this._pc.close();\n            }\n            catch (error) { }\n        }\n    }\n    async getNativeRtpCapabilities() {\n        logger.debug('getNativeRtpCapabilities()');\n        const pc = new RTCPeerConnection({\n            iceServers: [],\n            iceTransportPolicy: 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require'\n        });\n        try {\n            pc.addTransceiver('audio');\n            pc.addTransceiver('video');\n            const offer = await pc.createOffer();\n            try {\n                pc.close();\n            }\n            catch (error) { }\n            const sdpObject = sdpTransform.parse(offer.sdp);\n            const nativeRtpCapabilities = sdpCommonUtils.extractRtpCapabilities({ sdpObject });\n            return nativeRtpCapabilities;\n        }\n        catch (error) {\n            try {\n                pc.close();\n            }\n            catch (error2) { }\n            throw error;\n        }\n    }\n    async getNativeSctpCapabilities() {\n        logger.debug('getNativeSctpCapabilities()');\n        return {\n            numStreams: SCTP_NUM_STREAMS\n        };\n    }\n    run({ direction, iceParameters, iceCandidates, dtlsParameters, sctpParameters, iceServers, iceTransportPolicy, additionalSettings, proprietaryConstraints, extendedRtpCapabilities }) {\n        logger.debug('run()');\n        this._direction = direction;\n        this._remoteSdp = new RemoteSdp_1.RemoteSdp({\n            iceParameters,\n            iceCandidates,\n            dtlsParameters,\n            sctpParameters\n        });\n        this._sendingRtpParametersByKind =\n            {\n                audio: ortc.getSendingRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRtpParameters('video', extendedRtpCapabilities)\n            };\n        this._sendingRemoteRtpParametersByKind =\n            {\n                audio: ortc.getSendingRemoteRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRemoteRtpParameters('video', extendedRtpCapabilities)\n            };\n        if (dtlsParameters.role && dtlsParameters.role !== 'auto') {\n            this._forcedLocalDtlsRole = dtlsParameters.role === 'server'\n                ? 'client'\n                : 'server';\n        }\n        this._pc = new RTCPeerConnection({\n            iceServers: iceServers || [],\n            iceTransportPolicy: iceTransportPolicy || 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require',\n            ...additionalSettings\n        }, proprietaryConstraints);\n        // Handle RTCPeerConnection connection status.\n        this._pc.addEventListener('iceconnectionstatechange', () => {\n            switch (this._pc.iceConnectionState) {\n                case 'checking':\n                    this.emit('@connectionstatechange', 'connecting');\n                    break;\n                case 'connected':\n                case 'completed':\n                    this.emit('@connectionstatechange', 'connected');\n                    break;\n                case 'failed':\n                    this.emit('@connectionstatechange', 'failed');\n                    break;\n                case 'disconnected':\n                    this.emit('@connectionstatechange', 'disconnected');\n                    break;\n                case 'closed':\n                    this.emit('@connectionstatechange', 'closed');\n                    break;\n            }\n        });\n    }\n    async updateIceServers(iceServers) {\n        logger.debug('updateIceServers()');\n        const configuration = this._pc.getConfiguration();\n        configuration.iceServers = iceServers;\n        this._pc.setConfiguration(configuration);\n    }\n    async restartIce(iceParameters) {\n        logger.debug('restartIce()');\n        // Provide the remote SDP handler with new remote ICE parameters.\n        this._remoteSdp.updateIceParameters(iceParameters);\n        if (!this._transportReady)\n            return;\n        if (this._direction === 'send') {\n            const offer = await this._pc.createOffer({ iceRestart: true });\n            logger.debug('restartIce() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n        }\n        else {\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            logger.debug('restartIce() | calling pc.setLocalDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n        }\n    }\n    async getTransportStats() {\n        return this._pc.getStats();\n    }\n    async send({ track, encodings, codecOptions, codec }) {\n        var _a;\n        this._assertSendDirection();\n        logger.debug('send() [kind:%s, track.id:%s]', track.kind, track.id);\n        const sendingRtpParameters = utils.clone(this._sendingRtpParametersByKind[track.kind], {});\n        // This may throw.\n        sendingRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRtpParameters.codecs, codec);\n        const sendingRemoteRtpParameters = utils.clone(this._sendingRemoteRtpParametersByKind[track.kind], {});\n        // This may throw.\n        sendingRemoteRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRemoteRtpParameters.codecs, codec);\n        const mediaSectionIdx = this._remoteSdp.getNextMediaSectionIdx();\n        const transceiver = this._pc.addTransceiver(track, { direction: 'sendonly', streams: [this._sendStream] });\n        let offer = await this._pc.createOffer();\n        let localSdpObject = sdpTransform.parse(offer.sdp);\n        let offerMediaObject;\n        if (!this._transportReady) {\n            await this._setupTransport({\n                localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                localSdpObject\n            });\n        }\n        if (encodings && encodings.length > 1) {\n            logger.debug('send() | enabling legacy simulcast');\n            localSdpObject = sdpTransform.parse(offer.sdp);\n            offerMediaObject = localSdpObject.media[mediaSectionIdx.idx];\n            sdpUnifiedPlanUtils.addLegacySimulcast({\n                offerMediaObject,\n                numStreams: encodings.length\n            });\n            offer = { type: 'offer', sdp: sdpTransform.write(localSdpObject) };\n        }\n        logger.debug('send() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        // We can now get the transceiver.mid.\n        const localId = transceiver.mid;\n        // Set MID.\n        sendingRtpParameters.mid = localId;\n        localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        offerMediaObject = localSdpObject.media[mediaSectionIdx.idx];\n        // Set RTCP CNAME.\n        sendingRtpParameters.rtcp.cname =\n            sdpCommonUtils.getCname({ offerMediaObject });\n        // Set RTP encodings.\n        sendingRtpParameters.encodings =\n            sdpUnifiedPlanUtils.getRtpEncodings({ offerMediaObject });\n        // Complete encodings with given values.\n        if (encodings) {\n            for (let idx = 0; idx < sendingRtpParameters.encodings.length; ++idx) {\n                if (encodings[idx])\n                    Object.assign(sendingRtpParameters.encodings[idx], encodings[idx]);\n            }\n        }\n        // If VP8 or H264 and there is effective simulcast, add scalabilityMode to\n        // each encoding.\n        if (sendingRtpParameters.encodings.length > 1 &&\n            (sendingRtpParameters.codecs[0].mimeType.toLowerCase() === 'video/vp8' ||\n                sendingRtpParameters.codecs[0].mimeType.toLowerCase() === 'video/h264')) {\n            for (const encoding of sendingRtpParameters.encodings) {\n                encoding.scalabilityMode = 'S1T3';\n            }\n        }\n        this._remoteSdp.send({\n            offerMediaObject,\n            reuseMid: mediaSectionIdx.reuseMid,\n            offerRtpParameters: sendingRtpParameters,\n            answerRtpParameters: sendingRemoteRtpParameters,\n            codecOptions\n        });\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('send() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n        // Store in the map.\n        this._mapMidTransceiver.set(localId, transceiver);\n        return {\n            localId,\n            rtpParameters: sendingRtpParameters,\n            rtpSender: transceiver.sender\n        };\n    }\n    async stopSending(localId) {\n        this._assertSendDirection();\n        logger.debug('stopSending() [localId:%s]', localId);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated RTCRtpTransceiver not found');\n        transceiver.sender.replaceTrack(null);\n        this._pc.removeTrack(transceiver.sender);\n        this._remoteSdp.closeMediaSection(transceiver.mid);\n        const offer = await this._pc.createOffer();\n        logger.debug('stopSending() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopSending() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n        this._mapMidTransceiver.delete(localId);\n    }\n    async replaceTrack(localId, track) {\n        this._assertSendDirection();\n        if (track) {\n            logger.debug('replaceTrack() [localId:%s, track.id:%s]', localId, track.id);\n        }\n        else {\n            logger.debug('replaceTrack() [localId:%s, no track]', localId);\n        }\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated RTCRtpTransceiver not found');\n        await transceiver.sender.replaceTrack(track);\n    }\n    async setMaxSpatialLayer(localId, spatialLayer) {\n        this._assertSendDirection();\n        logger.debug('setMaxSpatialLayer() [localId:%s, spatialLayer:%s]', localId, spatialLayer);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated RTCRtpTransceiver not found');\n        const parameters = transceiver.sender.getParameters();\n        parameters.encodings.forEach((encoding, idx) => {\n            if (idx <= spatialLayer)\n                encoding.active = true;\n            else\n                encoding.active = false;\n        });\n        await transceiver.sender.setParameters(parameters);\n    }\n    async setRtpEncodingParameters(localId, params) {\n        this._assertSendDirection();\n        logger.debug('setRtpEncodingParameters() [localId:%s, params:%o]', localId, params);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated RTCRtpTransceiver not found');\n        const parameters = transceiver.sender.getParameters();\n        parameters.encodings.forEach((encoding, idx) => {\n            parameters.encodings[idx] = { ...encoding, ...params };\n        });\n        await transceiver.sender.setParameters(parameters);\n    }\n    async getSenderStats(localId) {\n        this._assertSendDirection();\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated RTCRtpTransceiver not found');\n        return transceiver.sender.getStats();\n    }\n    async sendDataChannel({ ordered, maxPacketLifeTime, maxRetransmits, label, protocol }) {\n        var _a;\n        this._assertSendDirection();\n        const options = {\n            negotiated: true,\n            id: this._nextSendSctpStreamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('sendDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // Increase next id.\n        this._nextSendSctpStreamId =\n            ++this._nextSendSctpStreamId % SCTP_NUM_STREAMS.MIS;\n        // If this is the first DataChannel we need to create the SDP answer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            const offer = await this._pc.createOffer();\n            const localSdpObject = sdpTransform.parse(offer.sdp);\n            const offerMediaObject = localSdpObject.media\n                .find((m) => m.type === 'application');\n            if (!this._transportReady) {\n                await this._setupTransport({\n                    localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                    localSdpObject\n                });\n            }\n            logger.debug('sendDataChannel() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            this._remoteSdp.sendSctpAssociation({ offerMediaObject });\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        const sctpStreamParameters = {\n            streamId: options.id,\n            ordered: options.ordered,\n            maxPacketLifeTime: options.maxPacketLifeTime,\n            maxRetransmits: options.maxRetransmits\n        };\n        return { dataChannel, sctpStreamParameters };\n    }\n    async receive({ trackId, kind, rtpParameters }) {\n        var _a;\n        this._assertRecvDirection();\n        logger.debug('receive() [trackId:%s, kind:%s]', trackId, kind);\n        const localId = rtpParameters.mid || String(this._mapMidTransceiver.size);\n        this._remoteSdp.receive({\n            mid: localId,\n            kind,\n            offerRtpParameters: rtpParameters,\n            streamId: rtpParameters.rtcp.cname,\n            trackId\n        });\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('receive() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        let answer = await this._pc.createAnswer();\n        const localSdpObject = sdpTransform.parse(answer.sdp);\n        const answerMediaObject = localSdpObject.media\n            .find((m) => String(m.mid) === localId);\n        // May need to modify codec parameters in the answer based on codec\n        // parameters in the offer.\n        sdpCommonUtils.applyCodecParameters({\n            offerRtpParameters: rtpParameters,\n            answerMediaObject\n        });\n        answer = { type: 'answer', sdp: sdpTransform.write(localSdpObject) };\n        if (!this._transportReady) {\n            await this._setupTransport({\n                localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                localSdpObject\n            });\n        }\n        logger.debug('receive() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n        const transceiver = this._pc.getTransceivers()\n            .find((t) => t.mid === localId);\n        if (!transceiver)\n            throw new Error('new RTCRtpTransceiver not found');\n        // Store in the map.\n        this._mapMidTransceiver.set(localId, transceiver);\n        return {\n            localId,\n            track: transceiver.receiver.track,\n            rtpReceiver: transceiver.receiver\n        };\n    }\n    async stopReceiving(localId) {\n        this._assertRecvDirection();\n        logger.debug('stopReceiving() [localId:%s]', localId);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated RTCRtpTransceiver not found');\n        this._remoteSdp.closeMediaSection(transceiver.mid);\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('stopReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n        this._mapMidTransceiver.delete(localId);\n    }\n    async pauseReceiving(localId) {\n        this._assertRecvDirection();\n        logger.debug('pauseReceiving() [localId:%s]', localId);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated RTCRtpTransceiver not found');\n        transceiver.direction = 'inactive';\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('pauseReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('pauseReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n    }\n    async resumeReceiving(localId) {\n        this._assertRecvDirection();\n        logger.debug('resumeReceiving() [localId:%s]', localId);\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated RTCRtpTransceiver not found');\n        transceiver.direction = 'recvonly';\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('resumeReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('resumeReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n    }\n    async getReceiverStats(localId) {\n        this._assertRecvDirection();\n        const transceiver = this._mapMidTransceiver.get(localId);\n        if (!transceiver)\n            throw new Error('associated RTCRtpTransceiver not found');\n        return transceiver.receiver.getStats();\n    }\n    async receiveDataChannel({ sctpStreamParameters, label, protocol }) {\n        var _a;\n        this._assertRecvDirection();\n        const { streamId, ordered, maxPacketLifeTime, maxRetransmits } = sctpStreamParameters;\n        const options = {\n            negotiated: true,\n            id: streamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('receiveDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // If this is the first DataChannel we need to create the SDP offer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            this._remoteSdp.receiveSctpAssociation();\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            if (!this._transportReady) {\n                const localSdpObject = sdpTransform.parse(answer.sdp);\n                await this._setupTransport({\n                    localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                    localSdpObject\n                });\n            }\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        return { dataChannel };\n    }\n    async _setupTransport({ localDtlsRole, localSdpObject }) {\n        if (!localSdpObject)\n            localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        // Get our local DTLS parameters.\n        const dtlsParameters = sdpCommonUtils.extractDtlsParameters({ sdpObject: localSdpObject });\n        // Set our DTLS role.\n        dtlsParameters.role = localDtlsRole;\n        // Update the remote DTLS role in the SDP.\n        this._remoteSdp.updateDtlsRole(localDtlsRole === 'client' ? 'server' : 'client');\n        // Need to tell the remote transport about our parameters.\n        await this.safeEmitAsPromise('@connect', { dtlsParameters });\n        this._transportReady = true;\n    }\n    _assertSendDirection() {\n        if (this._direction !== 'send') {\n            throw new Error('method can just be called for handlers with \"send\" direction');\n        }\n    }\n    _assertRecvDirection() {\n        if (this._direction !== 'recv') {\n            throw new Error('method can just be called for handlers with \"recv\" direction');\n        }\n    }\n}\nexports.Safari12 = Safari12;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Safari11 = void 0;\nconst sdpTransform = __importStar(require(\"sdp-transform\"));\nconst Logger_1 = require(\"../Logger\");\nconst utils = __importStar(require(\"../utils\"));\nconst ortc = __importStar(require(\"../ortc\"));\nconst sdpCommonUtils = __importStar(require(\"./sdp/commonUtils\"));\nconst sdpPlanBUtils = __importStar(require(\"./sdp/planBUtils\"));\nconst HandlerInterface_1 = require(\"./HandlerInterface\");\nconst RemoteSdp_1 = require(\"./sdp/RemoteSdp\");\nconst logger = new Logger_1.Logger('Safari11');\nconst SCTP_NUM_STREAMS = { OS: 1024, MIS: 1024 };\nclass Safari11 extends HandlerInterface_1.HandlerInterface {\n    constructor() {\n        super();\n        // Local stream for sending.\n        this._sendStream = new MediaStream();\n        // Map of RTCRtpSender indexed by localId.\n        this._mapSendLocalIdRtpSender = new Map();\n        // Next sending localId.\n        this._nextSendLocalId = 0;\n        // Map of MID, RTP parameters and RTCRtpReceiver indexed by local id.\n        // Value is an Object with mid, rtpParameters and rtpReceiver.\n        this._mapRecvLocalIdInfo = new Map();\n        // Whether a DataChannel m=application section has been created.\n        this._hasDataChannelMediaSection = false;\n        // Sending DataChannel id value counter. Incremented for each new DataChannel.\n        this._nextSendSctpStreamId = 0;\n        // Got transport local and remote parameters.\n        this._transportReady = false;\n    }\n    /**\n     * Creates a factory function.\n     */\n    static createFactory() {\n        return () => new Safari11();\n    }\n    get name() {\n        return 'Safari11';\n    }\n    close() {\n        logger.debug('close()');\n        // Close RTCPeerConnection.\n        if (this._pc) {\n            try {\n                this._pc.close();\n            }\n            catch (error) { }\n        }\n    }\n    async getNativeRtpCapabilities() {\n        logger.debug('getNativeRtpCapabilities()');\n        const pc = new RTCPeerConnection({\n            iceServers: [],\n            iceTransportPolicy: 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require',\n            sdpSemantics: 'plan-b'\n        });\n        try {\n            const offer = await pc.createOffer({\n                offerToReceiveAudio: true,\n                offerToReceiveVideo: true\n            });\n            try {\n                pc.close();\n            }\n            catch (error) { }\n            const sdpObject = sdpTransform.parse(offer.sdp);\n            const nativeRtpCapabilities = sdpCommonUtils.extractRtpCapabilities({ sdpObject });\n            return nativeRtpCapabilities;\n        }\n        catch (error) {\n            try {\n                pc.close();\n            }\n            catch (error2) { }\n            throw error;\n        }\n    }\n    async getNativeSctpCapabilities() {\n        logger.debug('getNativeSctpCapabilities()');\n        return {\n            numStreams: SCTP_NUM_STREAMS\n        };\n    }\n    run({ direction, iceParameters, iceCandidates, dtlsParameters, sctpParameters, iceServers, iceTransportPolicy, additionalSettings, proprietaryConstraints, extendedRtpCapabilities }) {\n        logger.debug('run()');\n        this._direction = direction;\n        this._remoteSdp = new RemoteSdp_1.RemoteSdp({\n            iceParameters,\n            iceCandidates,\n            dtlsParameters,\n            sctpParameters,\n            planB: true\n        });\n        this._sendingRtpParametersByKind =\n            {\n                audio: ortc.getSendingRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRtpParameters('video', extendedRtpCapabilities)\n            };\n        this._sendingRemoteRtpParametersByKind =\n            {\n                audio: ortc.getSendingRemoteRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRemoteRtpParameters('video', extendedRtpCapabilities)\n            };\n        if (dtlsParameters.role && dtlsParameters.role !== 'auto') {\n            this._forcedLocalDtlsRole = dtlsParameters.role === 'server'\n                ? 'client'\n                : 'server';\n        }\n        this._pc = new RTCPeerConnection({\n            iceServers: iceServers || [],\n            iceTransportPolicy: iceTransportPolicy || 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require',\n            ...additionalSettings\n        }, proprietaryConstraints);\n        // Handle RTCPeerConnection connection status.\n        this._pc.addEventListener('iceconnectionstatechange', () => {\n            switch (this._pc.iceConnectionState) {\n                case 'checking':\n                    this.emit('@connectionstatechange', 'connecting');\n                    break;\n                case 'connected':\n                case 'completed':\n                    this.emit('@connectionstatechange', 'connected');\n                    break;\n                case 'failed':\n                    this.emit('@connectionstatechange', 'failed');\n                    break;\n                case 'disconnected':\n                    this.emit('@connectionstatechange', 'disconnected');\n                    break;\n                case 'closed':\n                    this.emit('@connectionstatechange', 'closed');\n                    break;\n            }\n        });\n    }\n    async updateIceServers(iceServers) {\n        logger.debug('updateIceServers()');\n        const configuration = this._pc.getConfiguration();\n        configuration.iceServers = iceServers;\n        this._pc.setConfiguration(configuration);\n    }\n    async restartIce(iceParameters) {\n        logger.debug('restartIce()');\n        // Provide the remote SDP handler with new remote ICE parameters.\n        this._remoteSdp.updateIceParameters(iceParameters);\n        if (!this._transportReady)\n            return;\n        if (this._direction === 'send') {\n            const offer = await this._pc.createOffer({ iceRestart: true });\n            logger.debug('restartIce() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n        }\n        else {\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            logger.debug('restartIce() | calling pc.setLocalDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n        }\n    }\n    async getTransportStats() {\n        return this._pc.getStats();\n    }\n    async send({ track, encodings, codecOptions, codec }) {\n        var _a;\n        this._assertSendDirection();\n        logger.debug('send() [kind:%s, track.id:%s]', track.kind, track.id);\n        if (codec) {\n            logger.warn('send() | codec selection is not available in %s handler', this.name);\n        }\n        this._sendStream.addTrack(track);\n        this._pc.addTrack(track, this._sendStream);\n        let offer = await this._pc.createOffer();\n        let localSdpObject = sdpTransform.parse(offer.sdp);\n        let offerMediaObject;\n        const sendingRtpParameters = utils.clone(this._sendingRtpParametersByKind[track.kind], {});\n        sendingRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRtpParameters.codecs);\n        const sendingRemoteRtpParameters = utils.clone(this._sendingRemoteRtpParametersByKind[track.kind], {});\n        sendingRemoteRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRemoteRtpParameters.codecs);\n        if (!this._transportReady) {\n            await this._setupTransport({\n                localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                localSdpObject\n            });\n        }\n        if (track.kind === 'video' && encodings && encodings.length > 1) {\n            logger.debug('send() | enabling simulcast');\n            localSdpObject = sdpTransform.parse(offer.sdp);\n            offerMediaObject = localSdpObject.media.find((m) => m.type === 'video');\n            sdpPlanBUtils.addLegacySimulcast({\n                offerMediaObject,\n                track,\n                numStreams: encodings.length\n            });\n            offer = { type: 'offer', sdp: sdpTransform.write(localSdpObject) };\n        }\n        logger.debug('send() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        offerMediaObject = localSdpObject.media\n            .find((m) => m.type === track.kind);\n        // Set RTCP CNAME.\n        sendingRtpParameters.rtcp.cname =\n            sdpCommonUtils.getCname({ offerMediaObject });\n        // Set RTP encodings.\n        sendingRtpParameters.encodings =\n            sdpPlanBUtils.getRtpEncodings({ offerMediaObject, track });\n        // Complete encodings with given values.\n        if (encodings) {\n            for (let idx = 0; idx < sendingRtpParameters.encodings.length; ++idx) {\n                if (encodings[idx])\n                    Object.assign(sendingRtpParameters.encodings[idx], encodings[idx]);\n            }\n        }\n        // If VP8 and there is effective simulcast, add scalabilityMode to each\n        // encoding.\n        if (sendingRtpParameters.encodings.length > 1 &&\n            sendingRtpParameters.codecs[0].mimeType.toLowerCase() === 'video/vp8') {\n            for (const encoding of sendingRtpParameters.encodings) {\n                encoding.scalabilityMode = 'S1T3';\n            }\n        }\n        this._remoteSdp.send({\n            offerMediaObject,\n            offerRtpParameters: sendingRtpParameters,\n            answerRtpParameters: sendingRemoteRtpParameters,\n            codecOptions\n        });\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('send() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n        const localId = String(this._nextSendLocalId);\n        this._nextSendLocalId++;\n        const rtpSender = this._pc.getSenders()\n            .find((s) => s.track === track);\n        // Insert into the map.\n        this._mapSendLocalIdRtpSender.set(localId, rtpSender);\n        return {\n            localId: localId,\n            rtpParameters: sendingRtpParameters,\n            rtpSender\n        };\n    }\n    async stopSending(localId) {\n        this._assertSendDirection();\n        const rtpSender = this._mapSendLocalIdRtpSender.get(localId);\n        if (!rtpSender)\n            throw new Error('associated RTCRtpSender not found');\n        if (rtpSender.track)\n            this._sendStream.removeTrack(rtpSender.track);\n        this._mapSendLocalIdRtpSender.delete(localId);\n        const offer = await this._pc.createOffer();\n        logger.debug('stopSending() | calling pc.setLocalDescription() [offer:%o]', offer);\n        try {\n            await this._pc.setLocalDescription(offer);\n        }\n        catch (error) {\n            // NOTE: If there are no sending tracks, setLocalDescription() will fail with\n            // \"Failed to create channels\". If so, ignore it.\n            if (this._sendStream.getTracks().length === 0) {\n                logger.warn('stopSending() | ignoring expected error due no sending tracks: %s', error.toString());\n                return;\n            }\n            throw error;\n        }\n        if (this._pc.signalingState === 'stable')\n            return;\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopSending() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n    }\n    async replaceTrack(localId, track) {\n        this._assertSendDirection();\n        if (track) {\n            logger.debug('replaceTrack() [localId:%s, track.id:%s]', localId, track.id);\n        }\n        else {\n            logger.debug('replaceTrack() [localId:%s, no track]', localId);\n        }\n        const rtpSender = this._mapSendLocalIdRtpSender.get(localId);\n        if (!rtpSender)\n            throw new Error('associated RTCRtpSender not found');\n        const oldTrack = rtpSender.track;\n        await rtpSender.replaceTrack(track);\n        // Remove the old track from the local stream.\n        if (oldTrack)\n            this._sendStream.removeTrack(oldTrack);\n        // Add the new track to the local stream.\n        if (track)\n            this._sendStream.addTrack(track);\n    }\n    async setMaxSpatialLayer(localId, spatialLayer) {\n        this._assertSendDirection();\n        logger.debug('setMaxSpatialLayer() [localId:%s, spatialLayer:%s]', localId, spatialLayer);\n        const rtpSender = this._mapSendLocalIdRtpSender.get(localId);\n        if (!rtpSender)\n            throw new Error('associated RTCRtpSender not found');\n        const parameters = rtpSender.getParameters();\n        parameters.encodings.forEach((encoding, idx) => {\n            if (idx <= spatialLayer)\n                encoding.active = true;\n            else\n                encoding.active = false;\n        });\n        await rtpSender.setParameters(parameters);\n    }\n    async setRtpEncodingParameters(localId, params) {\n        this._assertSendDirection();\n        logger.debug('setRtpEncodingParameters() [localId:%s, params:%o]', localId, params);\n        const rtpSender = this._mapSendLocalIdRtpSender.get(localId);\n        if (!rtpSender)\n            throw new Error('associated RTCRtpSender not found');\n        const parameters = rtpSender.getParameters();\n        parameters.encodings.forEach((encoding, idx) => {\n            parameters.encodings[idx] = { ...encoding, ...params };\n        });\n        await rtpSender.setParameters(parameters);\n    }\n    async getSenderStats(localId) {\n        this._assertSendDirection();\n        const rtpSender = this._mapSendLocalIdRtpSender.get(localId);\n        if (!rtpSender)\n            throw new Error('associated RTCRtpSender not found');\n        return rtpSender.getStats();\n    }\n    async sendDataChannel({ ordered, maxPacketLifeTime, maxRetransmits, label, protocol }) {\n        var _a;\n        this._assertSendDirection();\n        const options = {\n            negotiated: true,\n            id: this._nextSendSctpStreamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('sendDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // Increase next id.\n        this._nextSendSctpStreamId =\n            ++this._nextSendSctpStreamId % SCTP_NUM_STREAMS.MIS;\n        // If this is the first DataChannel we need to create the SDP answer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            const offer = await this._pc.createOffer();\n            const localSdpObject = sdpTransform.parse(offer.sdp);\n            const offerMediaObject = localSdpObject.media\n                .find((m) => m.type === 'application');\n            if (!this._transportReady) {\n                await this._setupTransport({\n                    localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                    localSdpObject\n                });\n            }\n            logger.debug('sendDataChannel() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            this._remoteSdp.sendSctpAssociation({ offerMediaObject });\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        const sctpStreamParameters = {\n            streamId: options.id,\n            ordered: options.ordered,\n            maxPacketLifeTime: options.maxPacketLifeTime,\n            maxRetransmits: options.maxRetransmits\n        };\n        return { dataChannel, sctpStreamParameters };\n    }\n    async receive({ trackId, kind, rtpParameters }) {\n        var _a;\n        this._assertRecvDirection();\n        logger.debug('receive() [trackId:%s, kind:%s]', trackId, kind);\n        const localId = trackId;\n        const mid = kind;\n        this._remoteSdp.receive({\n            mid,\n            kind,\n            offerRtpParameters: rtpParameters,\n            streamId: rtpParameters.rtcp.cname,\n            trackId\n        });\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('receive() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        let answer = await this._pc.createAnswer();\n        const localSdpObject = sdpTransform.parse(answer.sdp);\n        const answerMediaObject = localSdpObject.media\n            .find((m) => String(m.mid) === mid);\n        // May need to modify codec parameters in the answer based on codec\n        // parameters in the offer.\n        sdpCommonUtils.applyCodecParameters({\n            offerRtpParameters: rtpParameters,\n            answerMediaObject\n        });\n        answer = { type: 'answer', sdp: sdpTransform.write(localSdpObject) };\n        if (!this._transportReady) {\n            await this._setupTransport({\n                localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                localSdpObject\n            });\n        }\n        logger.debug('receive() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n        const rtpReceiver = this._pc.getReceivers()\n            .find((r) => r.track && r.track.id === localId);\n        if (!rtpReceiver)\n            throw new Error('new RTCRtpReceiver not');\n        // Insert into the map.\n        this._mapRecvLocalIdInfo.set(localId, { mid, rtpParameters, rtpReceiver });\n        return {\n            localId,\n            track: rtpReceiver.track,\n            rtpReceiver\n        };\n    }\n    async stopReceiving(localId) {\n        this._assertRecvDirection();\n        logger.debug('stopReceiving() [localId:%s]', localId);\n        const { mid, rtpParameters } = this._mapRecvLocalIdInfo.get(localId) || {};\n        // Remove from the map.\n        this._mapRecvLocalIdInfo.delete(localId);\n        this._remoteSdp.planBStopReceiving({ mid: mid, offerRtpParameters: rtpParameters });\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('stopReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n    }\n    async getReceiverStats(localId) {\n        this._assertRecvDirection();\n        const { rtpReceiver } = this._mapRecvLocalIdInfo.get(localId) || {};\n        if (!rtpReceiver)\n            throw new Error('associated RTCRtpReceiver not found');\n        return rtpReceiver.getStats();\n    }\n    async pauseReceiving(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    localId) {\n        // Unimplemented.\n    }\n    async resumeReceiving(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    localId) {\n        // Unimplemented.\n    }\n    async receiveDataChannel({ sctpStreamParameters, label, protocol }) {\n        var _a;\n        this._assertRecvDirection();\n        const { streamId, ordered, maxPacketLifeTime, maxRetransmits } = sctpStreamParameters;\n        const options = {\n            negotiated: true,\n            id: streamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('receiveDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // If this is the first DataChannel we need to create the SDP offer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            this._remoteSdp.receiveSctpAssociation({ oldDataChannelSpec: true });\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            if (!this._transportReady) {\n                const localSdpObject = sdpTransform.parse(answer.sdp);\n                await this._setupTransport({\n                    localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                    localSdpObject\n                });\n            }\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        return { dataChannel };\n    }\n    async _setupTransport({ localDtlsRole, localSdpObject }) {\n        if (!localSdpObject)\n            localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        // Get our local DTLS parameters.\n        const dtlsParameters = sdpCommonUtils.extractDtlsParameters({ sdpObject: localSdpObject });\n        // Set our DTLS role.\n        dtlsParameters.role = localDtlsRole;\n        // Update the remote DTLS role in the SDP.\n        this._remoteSdp.updateDtlsRole(localDtlsRole === 'client' ? 'server' : 'client');\n        // Need to tell the remote transport about our parameters.\n        await this.safeEmitAsPromise('@connect', { dtlsParameters });\n        this._transportReady = true;\n    }\n    _assertSendDirection() {\n        if (this._direction !== 'send') {\n            throw new Error('method can just be called for handlers with \"send\" direction');\n        }\n    }\n    _assertRecvDirection() {\n        if (this._direction !== 'recv') {\n            throw new Error('method can just be called for handlers with \"recv\" direction');\n        }\n    }\n}\nexports.Safari11 = Safari11;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mangleRtpParameters = exports.getCapabilities = void 0;\nconst utils = __importStar(require(\"../../utils\"));\n/**\n * Normalize ORTC based Edge's RTCRtpReceiver.getCapabilities() to produce a full\n * compliant ORTC RTCRtpCapabilities.\n */\nfunction getCapabilities() {\n    const nativeCaps = RTCRtpReceiver.getCapabilities();\n    const caps = utils.clone(nativeCaps, {});\n    for (const codec of caps.codecs) {\n        // Rename numChannels to channels.\n        codec.channels = codec.numChannels;\n        delete codec.numChannels;\n        // Add mimeType.\n        codec.mimeType = codec.mimeType || `${codec.kind}/${codec.name}`;\n        // NOTE: Edge sets some numeric parameters as string rather than number. Fix them.\n        if (codec.parameters) {\n            const parameters = codec.parameters;\n            if (parameters.apt)\n                parameters.apt = Number(parameters.apt);\n            if (parameters['packetization-mode'])\n                parameters['packetization-mode'] = Number(parameters['packetization-mode']);\n        }\n        // Delete emty parameter String in rtcpFeedback.\n        for (const feedback of codec.rtcpFeedback || []) {\n            if (!feedback.parameter)\n                feedback.parameter = '';\n        }\n    }\n    return caps;\n}\nexports.getCapabilities = getCapabilities;\n/**\n * Generate RTCRtpParameters as ORTC based Edge likes.\n */\nfunction mangleRtpParameters(rtpParameters) {\n    const params = utils.clone(rtpParameters, {});\n    // Rename mid to muxId.\n    if (params.mid) {\n        params.muxId = params.mid;\n        delete params.mid;\n    }\n    for (const codec of params.codecs) {\n        // Rename channels to numChannels.\n        if (codec.channels) {\n            codec.numChannels = codec.channels;\n            delete codec.channels;\n        }\n        // Add codec.name (requried by Edge).\n        if (codec.mimeType && !codec.name)\n            codec.name = codec.mimeType.split('/')[1];\n        // Remove mimeType.\n        delete codec.mimeType;\n    }\n    return params;\n}\nexports.mangleRtpParameters = mangleRtpParameters;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Edge11 = void 0;\nconst Logger_1 = require(\"../Logger\");\nconst errors_1 = require(\"../errors\");\nconst utils = __importStar(require(\"../utils\"));\nconst ortc = __importStar(require(\"../ortc\"));\nconst edgeUtils = __importStar(require(\"./ortc/edgeUtils\"));\nconst HandlerInterface_1 = require(\"./HandlerInterface\");\nconst logger = new Logger_1.Logger('Edge11');\nclass Edge11 extends HandlerInterface_1.HandlerInterface {\n    constructor() {\n        super();\n        // Map of RTCRtpSenders indexed by id.\n        this._rtpSenders = new Map();\n        // Map of RTCRtpReceivers indexed by id.\n        this._rtpReceivers = new Map();\n        // Next localId for sending tracks.\n        this._nextSendLocalId = 0;\n        // Got transport local and remote parameters.\n        this._transportReady = false;\n    }\n    /**\n     * Creates a factory function.\n     */\n    static createFactory() {\n        return () => new Edge11();\n    }\n    get name() {\n        return 'Edge11';\n    }\n    close() {\n        logger.debug('close()');\n        // Close the ICE gatherer.\n        // NOTE: Not yet implemented by Edge.\n        try {\n            this._iceGatherer.close();\n        }\n        catch (error) { }\n        // Close the ICE transport.\n        try {\n            this._iceTransport.stop();\n        }\n        catch (error) { }\n        // Close the DTLS transport.\n        try {\n            this._dtlsTransport.stop();\n        }\n        catch (error) { }\n        // Close RTCRtpSenders.\n        for (const rtpSender of this._rtpSenders.values()) {\n            try {\n                rtpSender.stop();\n            }\n            catch (error) { }\n        }\n        // Close RTCRtpReceivers.\n        for (const rtpReceiver of this._rtpReceivers.values()) {\n            try {\n                rtpReceiver.stop();\n            }\n            catch (error) { }\n        }\n    }\n    async getNativeRtpCapabilities() {\n        logger.debug('getNativeRtpCapabilities()');\n        return edgeUtils.getCapabilities();\n    }\n    async getNativeSctpCapabilities() {\n        logger.debug('getNativeSctpCapabilities()');\n        return {\n            numStreams: { OS: 0, MIS: 0 }\n        };\n    }\n    run({ direction, // eslint-disable-line @typescript-eslint/no-unused-vars\n    iceParameters, iceCandidates, dtlsParameters, sctpParameters, // eslint-disable-line @typescript-eslint/no-unused-vars\n    iceServers, iceTransportPolicy, additionalSettings, // eslint-disable-line @typescript-eslint/no-unused-vars\n    proprietaryConstraints, // eslint-disable-line @typescript-eslint/no-unused-vars\n    extendedRtpCapabilities }) {\n        logger.debug('run()');\n        this._sendingRtpParametersByKind =\n            {\n                audio: ortc.getSendingRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRtpParameters('video', extendedRtpCapabilities)\n            };\n        this._remoteIceParameters = iceParameters;\n        this._remoteIceCandidates = iceCandidates;\n        this._remoteDtlsParameters = dtlsParameters;\n        this._cname = `CNAME-${utils.generateRandomNumber()}`;\n        this._setIceGatherer({ iceServers, iceTransportPolicy });\n        this._setIceTransport();\n        this._setDtlsTransport();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async updateIceServers(iceServers) {\n        // NOTE: Edge 11 does not implement iceGatherer.gater().\n        throw new errors_1.UnsupportedError('not supported');\n    }\n    async restartIce(iceParameters) {\n        logger.debug('restartIce()');\n        this._remoteIceParameters = iceParameters;\n        if (!this._transportReady)\n            return;\n        logger.debug('restartIce() | calling iceTransport.start()');\n        this._iceTransport.start(this._iceGatherer, iceParameters, 'controlling');\n        for (const candidate of this._remoteIceCandidates) {\n            this._iceTransport.addRemoteCandidate(candidate);\n        }\n        this._iceTransport.addRemoteCandidate({});\n    }\n    async getTransportStats() {\n        return this._iceTransport.getStats();\n    }\n    async send(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    { track, encodings, codecOptions, codec }) {\n        logger.debug('send() [kind:%s, track.id:%s]', track.kind, track.id);\n        if (!this._transportReady)\n            await this._setupTransport({ localDtlsRole: 'server' });\n        logger.debug('send() | calling new RTCRtpSender()');\n        const rtpSender = new RTCRtpSender(track, this._dtlsTransport);\n        const rtpParameters = utils.clone(this._sendingRtpParametersByKind[track.kind], {});\n        rtpParameters.codecs = ortc.reduceCodecs(rtpParameters.codecs, codec);\n        const useRtx = rtpParameters.codecs\n            .some((_codec) => /.+\\/rtx$/i.test(_codec.mimeType));\n        if (!encodings)\n            encodings = [{}];\n        for (const encoding of encodings) {\n            encoding.ssrc = utils.generateRandomNumber();\n            if (useRtx)\n                encoding.rtx = { ssrc: utils.generateRandomNumber() };\n        }\n        rtpParameters.encodings = encodings;\n        // Fill RTCRtpParameters.rtcp.\n        rtpParameters.rtcp =\n            {\n                cname: this._cname,\n                reducedSize: true,\n                mux: true\n            };\n        // NOTE: Convert our standard RTCRtpParameters into those that Edge\n        // expects.\n        const edgeRtpParameters = edgeUtils.mangleRtpParameters(rtpParameters);\n        logger.debug('send() | calling rtpSender.send() [params:%o]', edgeRtpParameters);\n        await rtpSender.send(edgeRtpParameters);\n        const localId = String(this._nextSendLocalId);\n        this._nextSendLocalId++;\n        // Store it.\n        this._rtpSenders.set(localId, rtpSender);\n        return { localId, rtpParameters, rtpSender };\n    }\n    async stopSending(localId) {\n        logger.debug('stopSending() [localId:%s]', localId);\n        const rtpSender = this._rtpSenders.get(localId);\n        if (!rtpSender)\n            throw new Error('RTCRtpSender not found');\n        this._rtpSenders.delete(localId);\n        try {\n            logger.debug('stopSending() | calling rtpSender.stop()');\n            rtpSender.stop();\n        }\n        catch (error) {\n            logger.warn('stopSending() | rtpSender.stop() failed:%o', error);\n            throw error;\n        }\n    }\n    async replaceTrack(localId, track) {\n        if (track) {\n            logger.debug('replaceTrack() [localId:%s, track.id:%s]', localId, track.id);\n        }\n        else {\n            logger.debug('replaceTrack() [localId:%s, no track]', localId);\n        }\n        const rtpSender = this._rtpSenders.get(localId);\n        if (!rtpSender)\n            throw new Error('RTCRtpSender not found');\n        rtpSender.setTrack(track);\n    }\n    async setMaxSpatialLayer(localId, spatialLayer) {\n        logger.debug('setMaxSpatialLayer() [localId:%s, spatialLayer:%s]', localId, spatialLayer);\n        const rtpSender = this._rtpSenders.get(localId);\n        if (!rtpSender)\n            throw new Error('RTCRtpSender not found');\n        const parameters = rtpSender.getParameters();\n        parameters.encodings\n            .forEach((encoding, idx) => {\n            if (idx <= spatialLayer)\n                encoding.active = true;\n            else\n                encoding.active = false;\n        });\n        await rtpSender.setParameters(parameters);\n    }\n    async setRtpEncodingParameters(localId, params) {\n        logger.debug('setRtpEncodingParameters() [localId:%s, params:%o]', localId, params);\n        const rtpSender = this._rtpSenders.get(localId);\n        if (!rtpSender)\n            throw new Error('RTCRtpSender not found');\n        const parameters = rtpSender.getParameters();\n        parameters.encodings.forEach((encoding, idx) => {\n            parameters.encodings[idx] = { ...encoding, ...params };\n        });\n        await rtpSender.setParameters(parameters);\n    }\n    async getSenderStats(localId) {\n        const rtpSender = this._rtpSenders.get(localId);\n        if (!rtpSender)\n            throw new Error('RTCRtpSender not found');\n        return rtpSender.getStats();\n    }\n    async sendDataChannel(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    options) {\n        throw new errors_1.UnsupportedError('not implemented');\n    }\n    async receive({ trackId, kind, rtpParameters }) {\n        logger.debug('receive() [trackId:%s, kind:%s]', trackId, kind);\n        if (!this._transportReady)\n            await this._setupTransport({ localDtlsRole: 'server' });\n        logger.debug('receive() | calling new RTCRtpReceiver()');\n        const rtpReceiver = new RTCRtpReceiver(this._dtlsTransport, kind);\n        rtpReceiver.addEventListener('error', (event) => {\n            logger.error('rtpReceiver \"error\" event [event:%o]', event);\n        });\n        // NOTE: Convert our standard RTCRtpParameters into those that Edge\n        // expects.\n        const edgeRtpParameters = edgeUtils.mangleRtpParameters(rtpParameters);\n        logger.debug('receive() | calling rtpReceiver.receive() [params:%o]', edgeRtpParameters);\n        await rtpReceiver.receive(edgeRtpParameters);\n        const localId = trackId;\n        // Store it.\n        this._rtpReceivers.set(localId, rtpReceiver);\n        return {\n            localId,\n            track: rtpReceiver.track,\n            rtpReceiver\n        };\n    }\n    async stopReceiving(localId) {\n        logger.debug('stopReceiving() [localId:%s]', localId);\n        const rtpReceiver = this._rtpReceivers.get(localId);\n        if (!rtpReceiver)\n            throw new Error('RTCRtpReceiver not found');\n        this._rtpReceivers.delete(localId);\n        try {\n            logger.debug('stopReceiving() | calling rtpReceiver.stop()');\n            rtpReceiver.stop();\n        }\n        catch (error) {\n            logger.warn('stopReceiving() | rtpReceiver.stop() failed:%o', error);\n        }\n    }\n    async pauseReceiving(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    localId) {\n        // Unimplemented.\n    }\n    async resumeReceiving(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    localId) {\n        // Unimplemented.\n    }\n    async getReceiverStats(localId) {\n        const rtpReceiver = this._rtpReceivers.get(localId);\n        if (!rtpReceiver)\n            throw new Error('RTCRtpReceiver not found');\n        return rtpReceiver.getStats();\n    }\n    async receiveDataChannel(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    options) {\n        throw new errors_1.UnsupportedError('not implemented');\n    }\n    _setIceGatherer({ iceServers, iceTransportPolicy }) {\n        // @ts-ignore\n        const iceGatherer = new RTCIceGatherer({\n            iceServers: iceServers || [],\n            gatherPolicy: iceTransportPolicy || 'all'\n        });\n        iceGatherer.addEventListener('error', (event) => {\n            logger.error('iceGatherer \"error\" event [event:%o]', event);\n        });\n        // NOTE: Not yet implemented by Edge, which starts gathering automatically.\n        try {\n            iceGatherer.gather();\n        }\n        catch (error) {\n            logger.debug('_setIceGatherer() | iceGatherer.gather() failed: %s', error.toString());\n        }\n        this._iceGatherer = iceGatherer;\n    }\n    _setIceTransport() {\n        const iceTransport = new RTCIceTransport(this._iceGatherer);\n        // NOTE: Not yet implemented by Edge.\n        iceTransport.addEventListener('statechange', () => {\n            switch (iceTransport.state) {\n                case 'checking':\n                    this.emit('@connectionstatechange', 'connecting');\n                    break;\n                case 'connected':\n                case 'completed':\n                    this.emit('@connectionstatechange', 'connected');\n                    break;\n                case 'failed':\n                    this.emit('@connectionstatechange', 'failed');\n                    break;\n                case 'disconnected':\n                    this.emit('@connectionstatechange', 'disconnected');\n                    break;\n                case 'closed':\n                    this.emit('@connectionstatechange', 'closed');\n                    break;\n            }\n        });\n        // NOTE: Not standard, but implemented by Edge.\n        iceTransport.addEventListener('icestatechange', () => {\n            switch (iceTransport.state) {\n                case 'checking':\n                    this.emit('@connectionstatechange', 'connecting');\n                    break;\n                case 'connected':\n                case 'completed':\n                    this.emit('@connectionstatechange', 'connected');\n                    break;\n                case 'failed':\n                    this.emit('@connectionstatechange', 'failed');\n                    break;\n                case 'disconnected':\n                    this.emit('@connectionstatechange', 'disconnected');\n                    break;\n                case 'closed':\n                    this.emit('@connectionstatechange', 'closed');\n                    break;\n            }\n        });\n        iceTransport.addEventListener('candidatepairchange', (event) => {\n            logger.debug('iceTransport \"candidatepairchange\" event [pair:%o]', event.pair);\n        });\n        this._iceTransport = iceTransport;\n    }\n    _setDtlsTransport() {\n        const dtlsTransport = new RTCDtlsTransport(this._iceTransport);\n        // NOTE: Not yet implemented by Edge.\n        dtlsTransport.addEventListener('statechange', () => {\n            logger.debug('dtlsTransport \"statechange\" event [state:%s]', dtlsTransport.state);\n        });\n        // NOTE: Not standard, but implemented by Edge.\n        dtlsTransport.addEventListener('dtlsstatechange', () => {\n            logger.debug('dtlsTransport \"dtlsstatechange\" event [state:%s]', dtlsTransport.state);\n            if (dtlsTransport.state === 'closed')\n                this.emit('@connectionstatechange', 'closed');\n        });\n        dtlsTransport.addEventListener('error', (event) => {\n            logger.error('dtlsTransport \"error\" event [event:%o]', event);\n        });\n        this._dtlsTransport = dtlsTransport;\n    }\n    async _setupTransport({ localDtlsRole }) {\n        logger.debug('_setupTransport()');\n        // Get our local DTLS parameters.\n        const dtlsParameters = this._dtlsTransport.getLocalParameters();\n        dtlsParameters.role = localDtlsRole;\n        // Need to tell the remote transport about our parameters.\n        await this.safeEmitAsPromise('@connect', { dtlsParameters });\n        // Start the RTCIceTransport.\n        this._iceTransport.start(this._iceGatherer, this._remoteIceParameters, 'controlling');\n        // Add remote ICE candidates.\n        for (const candidate of this._remoteIceCandidates) {\n            this._iceTransport.addRemoteCandidate(candidate);\n        }\n        // Also signal a 'complete' candidate as per spec.\n        // NOTE: It should be {complete: true} but Edge prefers {}.\n        // NOTE: If we don't signal end of candidates, the Edge RTCIceTransport\n        // won't enter the 'completed' state.\n        this._iceTransport.addRemoteCandidate({});\n        // NOTE: Edge does not like SHA less than 256.\n        this._remoteDtlsParameters.fingerprints = this._remoteDtlsParameters.fingerprints\n            .filter((fingerprint) => {\n            return (fingerprint.algorithm === 'sha-256' ||\n                fingerprint.algorithm === 'sha-384' ||\n                fingerprint.algorithm === 'sha-512');\n        });\n        // Start the RTCDtlsTransport.\n        this._dtlsTransport.start(this._remoteDtlsParameters);\n        this._transportReady = true;\n    }\n}\nexports.Edge11 = Edge11;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReactNative = void 0;\nconst sdpTransform = __importStar(require(\"sdp-transform\"));\nconst Logger_1 = require(\"../Logger\");\nconst errors_1 = require(\"../errors\");\nconst utils = __importStar(require(\"../utils\"));\nconst ortc = __importStar(require(\"../ortc\"));\nconst sdpCommonUtils = __importStar(require(\"./sdp/commonUtils\"));\nconst sdpPlanBUtils = __importStar(require(\"./sdp/planBUtils\"));\nconst HandlerInterface_1 = require(\"./HandlerInterface\");\nconst RemoteSdp_1 = require(\"./sdp/RemoteSdp\");\nconst logger = new Logger_1.Logger('ReactNative');\nconst SCTP_NUM_STREAMS = { OS: 1024, MIS: 1024 };\nclass ReactNative extends HandlerInterface_1.HandlerInterface {\n    constructor() {\n        super();\n        // Local stream for sending.\n        this._sendStream = new MediaStream();\n        // Map of sending MediaStreamTracks indexed by localId.\n        this._mapSendLocalIdTrack = new Map();\n        // Next sending localId.\n        this._nextSendLocalId = 0;\n        // Map of MID, RTP parameters and RTCRtpReceiver indexed by local id.\n        // Value is an Object with mid, rtpParameters and rtpReceiver.\n        this._mapRecvLocalIdInfo = new Map();\n        // Whether a DataChannel m=application section has been created.\n        this._hasDataChannelMediaSection = false;\n        // Sending DataChannel id value counter. Incremented for each new DataChannel.\n        this._nextSendSctpStreamId = 0;\n        // Got transport local and remote parameters.\n        this._transportReady = false;\n    }\n    /**\n     * Creates a factory function.\n     */\n    static createFactory() {\n        return () => new ReactNative();\n    }\n    get name() {\n        return 'ReactNative';\n    }\n    close() {\n        logger.debug('close()');\n        // Free/dispose native MediaStream but DO NOT free/dispose native\n        // MediaStreamTracks (that is parent's business).\n        // @ts-ignore (proprietary API in react-native-webrtc).\n        this._sendStream.release(/* releaseTracks */ false);\n        // Close RTCPeerConnection.\n        if (this._pc) {\n            try {\n                this._pc.close();\n            }\n            catch (error) { }\n        }\n    }\n    async getNativeRtpCapabilities() {\n        logger.debug('getNativeRtpCapabilities()');\n        const pc = new RTCPeerConnection({\n            iceServers: [],\n            iceTransportPolicy: 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require',\n            sdpSemantics: 'plan-b'\n        });\n        try {\n            const offer = await pc.createOffer({\n                offerToReceiveAudio: true,\n                offerToReceiveVideo: true\n            });\n            try {\n                pc.close();\n            }\n            catch (error) { }\n            const sdpObject = sdpTransform.parse(offer.sdp);\n            const nativeRtpCapabilities = sdpCommonUtils.extractRtpCapabilities({ sdpObject });\n            return nativeRtpCapabilities;\n        }\n        catch (error) {\n            try {\n                pc.close();\n            }\n            catch (error2) { }\n            throw error;\n        }\n    }\n    async getNativeSctpCapabilities() {\n        logger.debug('getNativeSctpCapabilities()');\n        return {\n            numStreams: SCTP_NUM_STREAMS\n        };\n    }\n    run({ direction, iceParameters, iceCandidates, dtlsParameters, sctpParameters, iceServers, iceTransportPolicy, additionalSettings, proprietaryConstraints, extendedRtpCapabilities }) {\n        logger.debug('run()');\n        this._direction = direction;\n        this._remoteSdp = new RemoteSdp_1.RemoteSdp({\n            iceParameters,\n            iceCandidates,\n            dtlsParameters,\n            sctpParameters,\n            planB: true\n        });\n        this._sendingRtpParametersByKind =\n            {\n                audio: ortc.getSendingRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRtpParameters('video', extendedRtpCapabilities)\n            };\n        this._sendingRemoteRtpParametersByKind =\n            {\n                audio: ortc.getSendingRemoteRtpParameters('audio', extendedRtpCapabilities),\n                video: ortc.getSendingRemoteRtpParameters('video', extendedRtpCapabilities)\n            };\n        if (dtlsParameters.role && dtlsParameters.role !== 'auto') {\n            this._forcedLocalDtlsRole = dtlsParameters.role === 'server'\n                ? 'client'\n                : 'server';\n        }\n        this._pc = new RTCPeerConnection({\n            iceServers: iceServers || [],\n            iceTransportPolicy: iceTransportPolicy || 'all',\n            bundlePolicy: 'max-bundle',\n            rtcpMuxPolicy: 'require',\n            sdpSemantics: 'plan-b',\n            ...additionalSettings\n        }, proprietaryConstraints);\n        // Handle RTCPeerConnection connection status.\n        this._pc.addEventListener('iceconnectionstatechange', () => {\n            switch (this._pc.iceConnectionState) {\n                case 'checking':\n                    this.emit('@connectionstatechange', 'connecting');\n                    break;\n                case 'connected':\n                case 'completed':\n                    this.emit('@connectionstatechange', 'connected');\n                    break;\n                case 'failed':\n                    this.emit('@connectionstatechange', 'failed');\n                    break;\n                case 'disconnected':\n                    this.emit('@connectionstatechange', 'disconnected');\n                    break;\n                case 'closed':\n                    this.emit('@connectionstatechange', 'closed');\n                    break;\n            }\n        });\n    }\n    async updateIceServers(iceServers) {\n        logger.debug('updateIceServers()');\n        const configuration = this._pc.getConfiguration();\n        configuration.iceServers = iceServers;\n        this._pc.setConfiguration(configuration);\n    }\n    async restartIce(iceParameters) {\n        logger.debug('restartIce()');\n        // Provide the remote SDP handler with new remote ICE parameters.\n        this._remoteSdp.updateIceParameters(iceParameters);\n        if (!this._transportReady)\n            return;\n        if (this._direction === 'send') {\n            const offer = await this._pc.createOffer({ iceRestart: true });\n            logger.debug('restartIce() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n        }\n        else {\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('restartIce() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            logger.debug('restartIce() | calling pc.setLocalDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n        }\n    }\n    async getTransportStats() {\n        return this._pc.getStats();\n    }\n    async send({ track, encodings, codecOptions, codec }) {\n        var _a;\n        this._assertSendDirection();\n        logger.debug('send() [kind:%s, track.id:%s]', track.kind, track.id);\n        if (codec) {\n            logger.warn('send() | codec selection is not available in %s handler', this.name);\n        }\n        this._sendStream.addTrack(track);\n        this._pc.addStream(this._sendStream);\n        let offer = await this._pc.createOffer();\n        let localSdpObject = sdpTransform.parse(offer.sdp);\n        let offerMediaObject;\n        const sendingRtpParameters = utils.clone(this._sendingRtpParametersByKind[track.kind], {});\n        sendingRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRtpParameters.codecs);\n        const sendingRemoteRtpParameters = utils.clone(this._sendingRemoteRtpParametersByKind[track.kind], {});\n        sendingRemoteRtpParameters.codecs =\n            ortc.reduceCodecs(sendingRemoteRtpParameters.codecs);\n        if (!this._transportReady) {\n            await this._setupTransport({\n                localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                localSdpObject\n            });\n        }\n        if (track.kind === 'video' && encodings && encodings.length > 1) {\n            logger.debug('send() | enabling simulcast');\n            localSdpObject = sdpTransform.parse(offer.sdp);\n            offerMediaObject = localSdpObject.media\n                .find((m) => m.type === 'video');\n            sdpPlanBUtils.addLegacySimulcast({\n                offerMediaObject,\n                track,\n                numStreams: encodings.length\n            });\n            offer = { type: 'offer', sdp: sdpTransform.write(localSdpObject) };\n        }\n        logger.debug('send() | calling pc.setLocalDescription() [offer:%o]', offer);\n        await this._pc.setLocalDescription(offer);\n        localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        offerMediaObject = localSdpObject.media\n            .find((m) => m.type === track.kind);\n        // Set RTCP CNAME.\n        sendingRtpParameters.rtcp.cname =\n            sdpCommonUtils.getCname({ offerMediaObject });\n        // Set RTP encodings.\n        sendingRtpParameters.encodings =\n            sdpPlanBUtils.getRtpEncodings({ offerMediaObject, track });\n        // Complete encodings with given values.\n        if (encodings) {\n            for (let idx = 0; idx < sendingRtpParameters.encodings.length; ++idx) {\n                if (encodings[idx])\n                    Object.assign(sendingRtpParameters.encodings[idx], encodings[idx]);\n            }\n        }\n        // If VP8 or H264 and there is effective simulcast, add scalabilityMode to\n        // each encoding.\n        if (sendingRtpParameters.encodings.length > 1 &&\n            (sendingRtpParameters.codecs[0].mimeType.toLowerCase() === 'video/vp8' ||\n                sendingRtpParameters.codecs[0].mimeType.toLowerCase() === 'video/h264')) {\n            for (const encoding of sendingRtpParameters.encodings) {\n                encoding.scalabilityMode = 'S1T3';\n            }\n        }\n        this._remoteSdp.send({\n            offerMediaObject,\n            offerRtpParameters: sendingRtpParameters,\n            answerRtpParameters: sendingRemoteRtpParameters,\n            codecOptions\n        });\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('send() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n        const localId = String(this._nextSendLocalId);\n        this._nextSendLocalId++;\n        // Insert into the map.\n        this._mapSendLocalIdTrack.set(localId, track);\n        return {\n            localId: localId,\n            rtpParameters: sendingRtpParameters\n        };\n    }\n    async stopSending(localId) {\n        this._assertSendDirection();\n        logger.debug('stopSending() [localId:%s]', localId);\n        const track = this._mapSendLocalIdTrack.get(localId);\n        if (!track)\n            throw new Error('track not found');\n        this._mapSendLocalIdTrack.delete(localId);\n        this._sendStream.removeTrack(track);\n        this._pc.addStream(this._sendStream);\n        const offer = await this._pc.createOffer();\n        logger.debug('stopSending() | calling pc.setLocalDescription() [offer:%o]', offer);\n        try {\n            await this._pc.setLocalDescription(offer);\n        }\n        catch (error) {\n            // NOTE: If there are no sending tracks, setLocalDescription() will fail with\n            // \"Failed to create channels\". If so, ignore it.\n            if (this._sendStream.getTracks().length === 0) {\n                logger.warn('stopSending() | ignoring expected error due no sending tracks: %s', error.toString());\n                return;\n            }\n            throw error;\n        }\n        if (this._pc.signalingState === 'stable')\n            return;\n        const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopSending() | calling pc.setRemoteDescription() [answer:%o]', answer);\n        await this._pc.setRemoteDescription(answer);\n    }\n    async replaceTrack(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    localId, track) {\n        throw new errors_1.UnsupportedError('not implemented');\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async setMaxSpatialLayer(localId, spatialLayer) {\n        throw new errors_1.UnsupportedError('not implemented');\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async setRtpEncodingParameters(localId, params) {\n        throw new errors_1.UnsupportedError('not implemented');\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async getSenderStats(localId) {\n        throw new errors_1.UnsupportedError('not implemented');\n    }\n    async sendDataChannel({ ordered, maxPacketLifeTime, maxRetransmits, label, protocol }) {\n        var _a;\n        this._assertSendDirection();\n        const options = {\n            negotiated: true,\n            id: this._nextSendSctpStreamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmitTime: maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('sendDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // Increase next id.\n        this._nextSendSctpStreamId =\n            ++this._nextSendSctpStreamId % SCTP_NUM_STREAMS.MIS;\n        // If this is the first DataChannel we need to create the SDP answer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            const offer = await this._pc.createOffer();\n            const localSdpObject = sdpTransform.parse(offer.sdp);\n            const offerMediaObject = localSdpObject.media\n                .find((m) => m.type === 'application');\n            if (!this._transportReady) {\n                await this._setupTransport({\n                    localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                    localSdpObject\n                });\n            }\n            logger.debug('sendDataChannel() | calling pc.setLocalDescription() [offer:%o]', offer);\n            await this._pc.setLocalDescription(offer);\n            this._remoteSdp.sendSctpAssociation({ offerMediaObject });\n            const answer = { type: 'answer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setRemoteDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        const sctpStreamParameters = {\n            streamId: options.id,\n            ordered: options.ordered,\n            maxPacketLifeTime: options.maxPacketLifeTime,\n            maxRetransmits: options.maxRetransmits\n        };\n        return { dataChannel, sctpStreamParameters };\n    }\n    async receive({ trackId, kind, rtpParameters }) {\n        var _a;\n        this._assertRecvDirection();\n        logger.debug('receive() [trackId:%s, kind:%s]', trackId, kind);\n        const localId = trackId;\n        const mid = kind;\n        let streamId = rtpParameters.rtcp.cname;\n        // NOTE: In React-Native we cannot reuse the same remote MediaStream for new\n        // remote tracks. This is because react-native-webrtc does not react on new\n        // tracks generated within already existing streams, so force the streamId\n        // to be different.\n        logger.debug('receive() | forcing a random remote streamId to avoid well known bug in react-native-webrtc');\n        streamId += `-hack-${utils.generateRandomNumber()}`;\n        this._remoteSdp.receive({\n            mid,\n            kind,\n            offerRtpParameters: rtpParameters,\n            streamId,\n            trackId\n        });\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('receive() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        let answer = await this._pc.createAnswer();\n        const localSdpObject = sdpTransform.parse(answer.sdp);\n        const answerMediaObject = localSdpObject.media\n            .find((m) => String(m.mid) === mid);\n        // May need to modify codec parameters in the answer based on codec\n        // parameters in the offer.\n        sdpCommonUtils.applyCodecParameters({\n            offerRtpParameters: rtpParameters,\n            answerMediaObject\n        });\n        answer = { type: 'answer', sdp: sdpTransform.write(localSdpObject) };\n        if (!this._transportReady) {\n            await this._setupTransport({\n                localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                localSdpObject\n            });\n        }\n        logger.debug('receive() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n        const stream = this._pc.getRemoteStreams()\n            .find((s) => s.id === streamId);\n        const track = stream.getTrackById(localId);\n        if (!track)\n            throw new Error('remote track not found');\n        // Insert into the map.\n        this._mapRecvLocalIdInfo.set(localId, { mid, rtpParameters });\n        return { localId, track };\n    }\n    async stopReceiving(localId) {\n        this._assertRecvDirection();\n        logger.debug('stopReceiving() [localId:%s]', localId);\n        const { mid, rtpParameters } = this._mapRecvLocalIdInfo.get(localId) || {};\n        // Remove from the map.\n        this._mapRecvLocalIdInfo.delete(localId);\n        this._remoteSdp.planBStopReceiving({ mid: mid, offerRtpParameters: rtpParameters });\n        const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n        logger.debug('stopReceiving() | calling pc.setRemoteDescription() [offer:%o]', offer);\n        await this._pc.setRemoteDescription(offer);\n        const answer = await this._pc.createAnswer();\n        logger.debug('stopReceiving() | calling pc.setLocalDescription() [answer:%o]', answer);\n        await this._pc.setLocalDescription(answer);\n    }\n    async pauseReceiving(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    localId) {\n        // Unimplemented.\n    }\n    async resumeReceiving(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    localId) {\n        // Unimplemented.\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async getReceiverStats(localId) {\n        throw new errors_1.UnsupportedError('not implemented');\n    }\n    async receiveDataChannel({ sctpStreamParameters, label, protocol }) {\n        var _a;\n        this._assertRecvDirection();\n        const { streamId, ordered, maxPacketLifeTime, maxRetransmits } = sctpStreamParameters;\n        const options = {\n            negotiated: true,\n            id: streamId,\n            ordered,\n            maxPacketLifeTime,\n            maxRetransmitTime: maxPacketLifeTime,\n            maxRetransmits,\n            protocol\n        };\n        logger.debug('receiveDataChannel() [options:%o]', options);\n        const dataChannel = this._pc.createDataChannel(label, options);\n        // If this is the first DataChannel we need to create the SDP offer with\n        // m=application section.\n        if (!this._hasDataChannelMediaSection) {\n            this._remoteSdp.receiveSctpAssociation({ oldDataChannelSpec: true });\n            const offer = { type: 'offer', sdp: this._remoteSdp.getSdp() };\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]', offer);\n            await this._pc.setRemoteDescription(offer);\n            const answer = await this._pc.createAnswer();\n            if (!this._transportReady) {\n                const localSdpObject = sdpTransform.parse(answer.sdp);\n                await this._setupTransport({\n                    localDtlsRole: (_a = this._forcedLocalDtlsRole) !== null && _a !== void 0 ? _a : 'client',\n                    localSdpObject\n                });\n            }\n            logger.debug('receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]', answer);\n            await this._pc.setLocalDescription(answer);\n            this._hasDataChannelMediaSection = true;\n        }\n        return { dataChannel };\n    }\n    async _setupTransport({ localDtlsRole, localSdpObject }) {\n        if (!localSdpObject)\n            localSdpObject = sdpTransform.parse(this._pc.localDescription.sdp);\n        // Get our local DTLS parameters.\n        const dtlsParameters = sdpCommonUtils.extractDtlsParameters({ sdpObject: localSdpObject });\n        // Set our DTLS role.\n        dtlsParameters.role = localDtlsRole;\n        // Update the remote DTLS role in the SDP.\n        this._remoteSdp.updateDtlsRole(localDtlsRole === 'client' ? 'server' : 'client');\n        // Need to tell the remote transport about our parameters.\n        await this.safeEmitAsPromise('@connect', { dtlsParameters });\n        this._transportReady = true;\n    }\n    _assertSendDirection() {\n        if (this._direction !== 'send') {\n            throw new Error('method can just be called for handlers with \"send\" direction');\n        }\n    }\n    _assertRecvDirection() {\n        if (this._direction !== 'recv') {\n            throw new Error('method can just be called for handlers with \"recv\" direction');\n        }\n    }\n}\nexports.ReactNative = ReactNative;\n","\"use strict\";\n/* global RTCRtpTransceiver */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Device = exports.detectDevice = void 0;\nconst bowser_1 = __importDefault(require(\"bowser\"));\nconst Logger_1 = require(\"./Logger\");\nconst EnhancedEventEmitter_1 = require(\"./EnhancedEventEmitter\");\nconst errors_1 = require(\"./errors\");\nconst utils = __importStar(require(\"./utils\"));\nconst ortc = __importStar(require(\"./ortc\"));\nconst Transport_1 = require(\"./Transport\");\nconst Chrome74_1 = require(\"./handlers/Chrome74\");\nconst Chrome70_1 = require(\"./handlers/Chrome70\");\nconst Chrome67_1 = require(\"./handlers/Chrome67\");\nconst Chrome55_1 = require(\"./handlers/Chrome55\");\nconst Firefox60_1 = require(\"./handlers/Firefox60\");\nconst Safari12_1 = require(\"./handlers/Safari12\");\nconst Safari11_1 = require(\"./handlers/Safari11\");\nconst Edge11_1 = require(\"./handlers/Edge11\");\nconst ReactNative_1 = require(\"./handlers/ReactNative\");\nconst logger = new Logger_1.Logger('Device');\nfunction detectDevice() {\n    // React-Native.\n    // NOTE: react-native-webrtc >= 1.75.0 is required.\n    if (typeof navigator === 'object' && navigator.product === 'ReactNative') {\n        if (typeof RTCPeerConnection === 'undefined') {\n            logger.warn('this._detectDevice() | unsupported ReactNative without RTCPeerConnection');\n            return undefined;\n        }\n        logger.debug('this._detectDevice() | ReactNative handler chosen');\n        return 'ReactNative';\n    }\n    // Browser.\n    else if (typeof navigator === 'object' && typeof navigator.userAgent === 'string') {\n        const ua = navigator.userAgent;\n        const browser = bowser_1.default.getParser(ua);\n        const engine = browser.getEngine();\n        // Chrome, Chromium, and Edge.\n        if (browser.satisfies({ chrome: '>=74', chromium: '>=74', 'microsoft edge': '>=88' })) {\n            return 'Chrome74';\n        }\n        else if (browser.satisfies({ chrome: '>=70', chromium: '>=70' })) {\n            return 'Chrome70';\n        }\n        else if (browser.satisfies({ chrome: '>=67', chromium: '>=67' })) {\n            return 'Chrome67';\n        }\n        else if (browser.satisfies({ chrome: '>=55', chromium: '>=55' })) {\n            return 'Chrome55';\n        }\n        // Firefox.\n        else if (browser.satisfies({ firefox: '>=60' })) {\n            return 'Firefox60';\n        }\n        // Firefox on iOS.\n        else if (browser.satisfies({ ios: { OS: '>=14.3', firefox: '>=30.0' } })) {\n            return 'Safari12';\n        }\n        // Safari with Unified-Plan support enabled.\n        else if (browser.satisfies({ safari: '>=12.0' }) &&\n            typeof RTCRtpTransceiver !== 'undefined' &&\n            RTCRtpTransceiver.prototype.hasOwnProperty('currentDirection')) {\n            return 'Safari12';\n        }\n        // Safari with Plab-B support.\n        else if (browser.satisfies({ safari: '>=11' })) {\n            return 'Safari11';\n        }\n        // Old Edge with ORTC support.\n        else if (browser.satisfies({ 'microsoft edge': '>=11' }) &&\n            browser.satisfies({ 'microsoft edge': '<=18' })) {\n            return 'Edge11';\n        }\n        // Best effort for Chromium based browsers.\n        else if (engine.name && engine.name.toLowerCase() === 'blink') {\n            const match = ua.match(/(?:(?:Chrome|Chromium))[ /](\\w+)/i);\n            if (match) {\n                const version = Number(match[1]);\n                if (version >= 74) {\n                    return 'Chrome74';\n                }\n                else if (version >= 70) {\n                    return 'Chrome70';\n                }\n                else if (version >= 67) {\n                    return 'Chrome67';\n                }\n                else {\n                    return 'Chrome55';\n                }\n            }\n            else {\n                return 'Chrome74';\n            }\n        }\n        // Unsupported browser.\n        else {\n            logger.warn('this._detectDevice() | browser not supported [name:%s, version:%s]', browser.getBrowserName(), browser.getBrowserVersion());\n            return undefined;\n        }\n    }\n    // Unknown device.\n    else {\n        logger.warn('this._detectDevice() | unknown device');\n        return undefined;\n    }\n}\nexports.detectDevice = detectDevice;\nclass Device {\n    /**\n     * Create a new Device to connect to mediasoup server.\n     *\n     * @throws {UnsupportedError} if device is not supported.\n     */\n    constructor({ handlerName, handlerFactory, Handler } = {}) {\n        // Loaded flag.\n        this._loaded = false;\n        // Observer instance.\n        this._observer = new EnhancedEventEmitter_1.EnhancedEventEmitter();\n        logger.debug('constructor()');\n        // Handle deprecated option.\n        if (Handler) {\n            logger.warn('constructor() | Handler option is DEPRECATED, use handlerName or handlerFactory instead');\n            if (typeof Handler === 'string')\n                handlerName = Handler;\n            else\n                throw new TypeError('non string Handler option no longer supported, use handlerFactory instead');\n        }\n        if (handlerName && handlerFactory) {\n            throw new TypeError('just one of handlerName or handlerInterface can be given');\n        }\n        if (handlerFactory) {\n            this._handlerFactory = handlerFactory;\n        }\n        else {\n            if (handlerName) {\n                logger.debug('constructor() | handler given: %s', handlerName);\n            }\n            else {\n                handlerName = detectDevice();\n                if (handlerName)\n                    logger.debug('constructor() | detected handler: %s', handlerName);\n                else\n                    throw new errors_1.UnsupportedError('device not supported');\n            }\n            switch (handlerName) {\n                case 'Chrome74':\n                    this._handlerFactory = Chrome74_1.Chrome74.createFactory();\n                    break;\n                case 'Chrome70':\n                    this._handlerFactory = Chrome70_1.Chrome70.createFactory();\n                    break;\n                case 'Chrome67':\n                    this._handlerFactory = Chrome67_1.Chrome67.createFactory();\n                    break;\n                case 'Chrome55':\n                    this._handlerFactory = Chrome55_1.Chrome55.createFactory();\n                    break;\n                case 'Firefox60':\n                    this._handlerFactory = Firefox60_1.Firefox60.createFactory();\n                    break;\n                case 'Safari12':\n                    this._handlerFactory = Safari12_1.Safari12.createFactory();\n                    break;\n                case 'Safari11':\n                    this._handlerFactory = Safari11_1.Safari11.createFactory();\n                    break;\n                case 'Edge11':\n                    this._handlerFactory = Edge11_1.Edge11.createFactory();\n                    break;\n                case 'ReactNative':\n                    this._handlerFactory = ReactNative_1.ReactNative.createFactory();\n                    break;\n                default:\n                    throw new TypeError(`unknown handlerName \"${handlerName}\"`);\n            }\n        }\n        // Create a temporal handler to get its name.\n        const handler = this._handlerFactory();\n        this._handlerName = handler.name;\n        handler.close();\n        this._extendedRtpCapabilities = undefined;\n        this._recvRtpCapabilities = undefined;\n        this._canProduceByKind =\n            {\n                audio: false,\n                video: false\n            };\n        this._sctpCapabilities = undefined;\n    }\n    /**\n     * The RTC handler name.\n     */\n    get handlerName() {\n        return this._handlerName;\n    }\n    /**\n     * Whether the Device is loaded.\n     */\n    get loaded() {\n        return this._loaded;\n    }\n    /**\n     * RTP capabilities of the Device for receiving media.\n     *\n     * @throws {InvalidStateError} if not loaded.\n     */\n    get rtpCapabilities() {\n        if (!this._loaded)\n            throw new errors_1.InvalidStateError('not loaded');\n        return this._recvRtpCapabilities;\n    }\n    /**\n     * SCTP capabilities of the Device.\n     *\n     * @throws {InvalidStateError} if not loaded.\n     */\n    get sctpCapabilities() {\n        if (!this._loaded)\n            throw new errors_1.InvalidStateError('not loaded');\n        return this._sctpCapabilities;\n    }\n    /**\n     * Observer.\n     *\n     * @emits newtransport - (transport: Transport)\n     */\n    get observer() {\n        return this._observer;\n    }\n    /**\n     * Initialize the Device.\n     */\n    async load({ routerRtpCapabilities }) {\n        logger.debug('load() [routerRtpCapabilities:%o]', routerRtpCapabilities);\n        routerRtpCapabilities = utils.clone(routerRtpCapabilities, undefined);\n        // Temporal handler to get its capabilities.\n        let handler;\n        try {\n            if (this._loaded)\n                throw new errors_1.InvalidStateError('already loaded');\n            // This may throw.\n            ortc.validateRtpCapabilities(routerRtpCapabilities);\n            handler = this._handlerFactory();\n            const nativeRtpCapabilities = await handler.getNativeRtpCapabilities();\n            logger.debug('load() | got native RTP capabilities:%o', nativeRtpCapabilities);\n            // This may throw.\n            ortc.validateRtpCapabilities(nativeRtpCapabilities);\n            // Get extended RTP capabilities.\n            this._extendedRtpCapabilities = ortc.getExtendedRtpCapabilities(nativeRtpCapabilities, routerRtpCapabilities);\n            logger.debug('load() | got extended RTP capabilities:%o', this._extendedRtpCapabilities);\n            // Check whether we can produce audio/video.\n            this._canProduceByKind.audio =\n                ortc.canSend('audio', this._extendedRtpCapabilities);\n            this._canProduceByKind.video =\n                ortc.canSend('video', this._extendedRtpCapabilities);\n            // Generate our receiving RTP capabilities for receiving media.\n            this._recvRtpCapabilities =\n                ortc.getRecvRtpCapabilities(this._extendedRtpCapabilities);\n            // This may throw.\n            ortc.validateRtpCapabilities(this._recvRtpCapabilities);\n            logger.debug('load() | got receiving RTP capabilities:%o', this._recvRtpCapabilities);\n            // Generate our SCTP capabilities.\n            this._sctpCapabilities = await handler.getNativeSctpCapabilities();\n            logger.debug('load() | got native SCTP capabilities:%o', this._sctpCapabilities);\n            // This may throw.\n            ortc.validateSctpCapabilities(this._sctpCapabilities);\n            logger.debug('load() succeeded');\n            this._loaded = true;\n            handler.close();\n        }\n        catch (error) {\n            if (handler)\n                handler.close();\n            throw error;\n        }\n    }\n    /**\n     * Whether we can produce audio/video.\n     *\n     * @throws {InvalidStateError} if not loaded.\n     * @throws {TypeError} if wrong arguments.\n     */\n    canProduce(kind) {\n        if (!this._loaded)\n            throw new errors_1.InvalidStateError('not loaded');\n        else if (kind !== 'audio' && kind !== 'video')\n            throw new TypeError(`invalid kind \"${kind}\"`);\n        return this._canProduceByKind[kind];\n    }\n    /**\n     * Creates a Transport for sending media.\n     *\n     * @throws {InvalidStateError} if not loaded.\n     * @throws {TypeError} if wrong arguments.\n     */\n    createSendTransport({ id, iceParameters, iceCandidates, dtlsParameters, sctpParameters, iceServers, iceTransportPolicy, additionalSettings, proprietaryConstraints, appData = {} }) {\n        logger.debug('createSendTransport()');\n        return this._createTransport({\n            direction: 'send',\n            id: id,\n            iceParameters: iceParameters,\n            iceCandidates: iceCandidates,\n            dtlsParameters: dtlsParameters,\n            sctpParameters: sctpParameters,\n            iceServers: iceServers,\n            iceTransportPolicy: iceTransportPolicy,\n            additionalSettings: additionalSettings,\n            proprietaryConstraints: proprietaryConstraints,\n            appData: appData\n        });\n    }\n    /**\n     * Creates a Transport for receiving media.\n     *\n     * @throws {InvalidStateError} if not loaded.\n     * @throws {TypeError} if wrong arguments.\n     */\n    createRecvTransport({ id, iceParameters, iceCandidates, dtlsParameters, sctpParameters, iceServers, iceTransportPolicy, additionalSettings, proprietaryConstraints, appData = {} }) {\n        logger.debug('createRecvTransport()');\n        return this._createTransport({\n            direction: 'recv',\n            id: id,\n            iceParameters: iceParameters,\n            iceCandidates: iceCandidates,\n            dtlsParameters: dtlsParameters,\n            sctpParameters: sctpParameters,\n            iceServers: iceServers,\n            iceTransportPolicy: iceTransportPolicy,\n            additionalSettings: additionalSettings,\n            proprietaryConstraints: proprietaryConstraints,\n            appData: appData\n        });\n    }\n    _createTransport({ direction, id, iceParameters, iceCandidates, dtlsParameters, sctpParameters, iceServers, iceTransportPolicy, additionalSettings, proprietaryConstraints, appData = {} }) {\n        if (!this._loaded)\n            throw new errors_1.InvalidStateError('not loaded');\n        else if (typeof id !== 'string')\n            throw new TypeError('missing id');\n        else if (typeof iceParameters !== 'object')\n            throw new TypeError('missing iceParameters');\n        else if (!Array.isArray(iceCandidates))\n            throw new TypeError('missing iceCandidates');\n        else if (typeof dtlsParameters !== 'object')\n            throw new TypeError('missing dtlsParameters');\n        else if (sctpParameters && typeof sctpParameters !== 'object')\n            throw new TypeError('wrong sctpParameters');\n        else if (appData && typeof appData !== 'object')\n            throw new TypeError('if given, appData must be an object');\n        // Create a new Transport.\n        const transport = new Transport_1.Transport({\n            direction,\n            id,\n            iceParameters,\n            iceCandidates,\n            dtlsParameters,\n            sctpParameters,\n            iceServers,\n            iceTransportPolicy,\n            additionalSettings,\n            proprietaryConstraints,\n            appData,\n            handlerFactory: this._handlerFactory,\n            extendedRtpCapabilities: this._extendedRtpCapabilities,\n            canProduceByKind: this._canProduceByKind\n        });\n        // Emit observer event.\n        this._observer.safeEmit('newtransport', transport);\n        return transport;\n    }\n}\nexports.Device = Device;\n","\"use strict\";\n/**\n * The RTP capabilities define what mediasoup or an endpoint can receive at\n * media level.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./Device\"), exports);\n__exportStar(require(\"./Transport\"), exports);\n__exportStar(require(\"./Producer\"), exports);\n__exportStar(require(\"./Consumer\"), exports);\n__exportStar(require(\"./DataProducer\"), exports);\n__exportStar(require(\"./DataConsumer\"), exports);\n__exportStar(require(\"./RtpParameters\"), exports);\n__exportStar(require(\"./SctpParameters\"), exports);\n__exportStar(require(\"./handlers/HandlerInterface\"), exports);\n__exportStar(require(\"./errors\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.debug = exports.parseScalabilityMode = exports.detectDevice = exports.Device = exports.version = exports.types = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nexports.debug = debug_1.default;\nconst Device_1 = require(\"./Device\");\nObject.defineProperty(exports, \"Device\", { enumerable: true, get: function () { return Device_1.Device; } });\nObject.defineProperty(exports, \"detectDevice\", { enumerable: true, get: function () { return Device_1.detectDevice; } });\nconst types = __importStar(require(\"./types\"));\nexports.types = types;\n/**\n * Expose mediasoup-client version.\n */\nexports.version = '3.6.47';\n/**\n * Expose parseScalabilityMode() function.\n */\nvar scalabilityModes_1 = require(\"./scalabilityModes\");\nObject.defineProperty(exports, \"parseScalabilityMode\", { enumerable: true, get: function () { return scalabilityModes_1.parse; } });\n","type Timeout = ReturnType<typeof setTimeout>;\n\nexport type TransportState =\n  | \"not-connected\"\n  | \"connected\"\n  | \"connecting\"\n  | \"error\";\nexport class WSTransport {\n    private receiveTimeoutReference?: Timeout;\n    private sendTimeoutReference?: Timeout;\n\n    constructor(\n    /* eslint-disable no-unused-vars */\n    private readonly url: string,\n    private readonly onMessageCallback: (\n      transport: WSTransport,\n      data: string | ArrayBuffer | Blob\n    ) => unknown,\n    private readonly onStateChange?: (state: TransportState) => unknown,\n    private readonly protocols: string[] | undefined = undefined,\n    private autoconnect = true,\n    private receiveMessageTimeoutTime: number|null = 5000,\n    private sendKeepAliveMessageInterval:number|null = 1000 /* eslint-enable no-unused-vars */\n    ) {}\n\n    public async connect() {\n        return this._connect().then(\n            () => true,\n            () => false\n        );\n    }\n\n    public disconnect(code?: number | undefined, reason?: string): void {\n        this.ws?.close(code, reason);\n        if (this.receiveTimeoutReference) {\n            clearTimeout(this.receiveTimeoutReference);\n        }\n        if (this.sendTimeoutReference) {\n            clearTimeout(this.sendTimeoutReference);\n        }\n    }\n\n    public async send(data: string | ArrayBufferLike | Blob | ArrayBufferView) {\n        let ws = this.ws;\n        if (!ws) {\n            if (!this.autoconnect) {\n                throw new Error(\"Not connected\");\n            }\n            ws = await this._connect();\n        }\n        ws.send(data);\n        this.resetNetworkSendTimeout();\n    }\n\n    private ws?: WebSocket;\n    private _wsPromise?: Promise<WebSocket>;\n    private async _connect() {\n        if (!this._wsPromise || this.ws?.readyState === WebSocket.CLOSED) {\n            this._wsPromise = new Promise<WebSocket>((resolve, reject) => {\n                const ws = new WebSocket(this.url, this.protocols);\n                ws.binaryType = \"arraybuffer\";\n                this.onStateChange?.(\"connecting\");\n                const connectionTimer = setTimeout(() => {\n                    reject(new Error(\"Connection timeout\"));\n                    this.onStateChange?.(\"error\");\n                    if (connectionTimer) {\n                        clearTimeout(connectionTimer);\n                    }\n                    ws.close();\n                }, 5000);\n                ws.addEventListener(\"open\", () => {\n                    this.onOpen();\n                    this.ws = ws;\n                    if (connectionTimer) {\n                        clearTimeout(connectionTimer);\n                    }\n                    resolve(ws);\n                });\n\n                ws.addEventListener(\"error\", (e) => {\n                    console.error(e);\n                    this.onError();\n                    reject(e);\n                });\n\n                ws.addEventListener(\"close\", () => this.onClose());\n                ws.addEventListener(\"message\", (e) => this.onMessage(e.data));\n            });\n        }\n        return await this._wsPromise;\n    }\n\n    private onMessage(data: string | ArrayBuffer | Blob) {\n        this.resetNetworkReceiveTimeout();\n        this.onMessageCallback(this, data);\n    }\n\n    private onOpen() {\n        this.resetNetworkSendTimeout();\n        this.resetNetworkReceiveTimeout();\n        this.onStateChange?.(\"connected\");\n    }\n\n    private onClose() {\n        this.ws = undefined;\n        this._wsPromise = undefined;\n        this.onStateChange?.(\"not-connected\");\n    }\n\n    private onError() {\n        this.onStateChange?.(\"error\");\n    }\n\n    private resetNetworkReceiveTimeout(): void {\n        if(this.receiveMessageTimeoutTime === null) { return; }\n        if (this.receiveTimeoutReference) {\n            clearTimeout(this.receiveTimeoutReference);\n        }\n        this.receiveTimeoutReference = setTimeout(\n            () => this.disconnect(4400, \"timeout\"),\n            this.receiveMessageTimeoutTime\n        );\n    }\n\n    private resetNetworkSendTimeout(): void {\n        if(this.sendKeepAliveMessageInterval === null) { return; }\n        if (this.sendTimeoutReference) {\n            clearTimeout(this.sendTimeoutReference);\n        }\n        this.sendTimeoutReference = setTimeout(\n            () => this.send(new Uint8Array(0)),\n            this.sendKeepAliveMessageInterval\n        );\n    }\n}\n","type PromiseCallbacks<S, E> = {\n  resolve: (success: S) => void;\n  reject: (error: E) => void;\n};\n\nexport class PromiseCompleter<\n  Success = void,\n  Failure = Error,\n  PromiseId = string\n> {\n    public constructor(\n    private readonly callbacks = new Map<\n      PromiseId,\n      PromiseCallbacks<Success, Failure>\n    >()\n    ) {}\n\n    public createPromise(id: PromiseId) {\n        if (this.callbacks.has(id)) {\n            throw new Error(`PromiseId(${id}) is already in-use`);\n        }\n        return new Promise<Success>((resolve, reject) => {\n            this.callbacks.set(id, { resolve, reject });\n        });\n    }\n\n    public resolve(id: PromiseId, result: Success) {\n        this.useCallbacks(id).resolve(result);\n    }\n\n    public reject(id: PromiseId, error: Failure) {\n        this.useCallbacks(id).reject(error);\n    }\n\n    private useCallbacks(requestId: PromiseId) {\n        const completer = this.callbacks.get(requestId);\n        if (!completer) {\n            throw new Error(`Recieved response for unknown requestID(${requestId})`);\n        }\n        this.callbacks.delete(requestId);\n        return completer;\n    }\n}\n","/**\n *  ensures the function body is executed only once, unless the function throws an error.\n *  All subsequent calls return the same value as the first call\n **/\nexport const Memoize = <\n    Parameters extends Array<unknown>,\n    Return,\n>(f: {(...args:Parameters): Return}): {(...args:Parameters): Return} => {\n    let cache: {value: Return} | undefined;\n    const wrapper = (...args: Parameters) => {\n        if(!cache) {cache = {value: f(...args)};}\n        return cache.value; \n    };\n    return wrapper;\n};","import {Device, types as MediaSoup} from \"mediasoup-client\";\nimport {NewType} from \"../types\";\nimport {TransportState, WSTransport} from \"../network/websocketTransport\";\nimport {PromiseCompleter} from \"../network/promiseCompleter\";\nimport {Memoize} from \"../memoize\";\nimport EventEmitter from \"eventemitter3\";\n\nexport type SfuId = NewType<string, \"sfuId\">\nexport const newSfuID = (id: string) => id as SfuId;\n\nexport type ProducerId = NewType<string, \"producerId\">\nexport const newProducerID = (id: string) => id as ProducerId;\n\nexport type ConsumerId = NewType<string, \"consumerId\">\nexport const newConsumerID = (id: string) => id as ConsumerId;\n\nexport type RequestId = NewType<string, \"requestId\">\nexport const newRequestID = (id: string) => id as RequestId;\n\nexport type RequestMessage = {\n    id: RequestId,\n    request: Request,\n}\n\ntype Request = {\n    getRouterRtpCapabilities?: unknown;\n    createProducerTransport?: unknown;\n    connectProducerTransport?: TransportConnectRequest;\n    produceTrack?: ProduceTrackRequest;\n\n    setRtpCapabilities?: MediaSoup.RtpCapabilities;\n    createConsumerTransport?: unknown;\n    connectConsumerTransport?: TransportConnectRequest;\n    consumeTrack?: ConsumeTrackRequest;\n\n    pause?: PauseRequest;\n    pauseForEveryone?: PauseRequest;\n    endRoom?: unknown;\n}\n\ntype TransportConnectRequest = { dtlsParameters: MediaSoup.DtlsParameters };\ntype ProduceTrackRequest = { kind: MediaSoup.MediaKind, rtpParameters: MediaSoup.RtpParameters, name: string };\ntype ConsumeTrackRequest = { producerId: ProducerId };\ntype PauseRequest = { paused: boolean, id: ProducerId };\n\nexport type ResponseMessage = {\n    response?: Response,\n\n    pausedSource?: PauseEvent,\n    pausedGlobally?: PauseEvent,\n\n    consumerClosed?: ProducerId,\n    producerClosed?: ProducerId,\n\n    consumerTransportClosed?: unknown,\n    producerTransportClosed?: unknown,\n}\n\ntype Response = {\n    id: RequestId;\n    error: string,\n} | {\n    id: RequestId;\n    result: Result | void,\n}\n\nexport type WebRtcTransportResult = {\n    id: string,\n    iceCandidates: MediaSoup.IceCandidate[],\n    iceParameters: MediaSoup.IceParameters,\n    dtlsParameters: MediaSoup.DtlsParameters,\n    sctpParameters?: MediaSoup.SctpParameters,\n}\n\nexport type Result = {\n    routerRtpCapabilities?: MediaSoup.RtpCapabilities;\n\n    producerTransportCreated?: WebRtcTransportResult;\n    producerCreated?: {\n        producerId: ProducerId,\n        pausedGlobally: boolean,\n    };\n\n    consumerTransportCreated?: WebRtcTransportResult;\n    consumerCreated?: {\n        id: ConsumerId,\n        producerId: ProducerId,\n        kind: MediaSoup.MediaKind,\n        rtpParameters: MediaSoup.RtpParameters,\n    },\n}\n\nexport type PauseEvent = {\n    producerId: ProducerId,\n    paused: boolean\n}\n\nexport class SFU {\n    public async getTrack(producerId: ProducerId) {\n        const producer = this.producers.get(producerId);\n        if(producer) { return producer; }\n\n        const consumer = this.consumers.get(producerId);\n        if(consumer) { return consumer; }\n\n        return await this.consumeTrack(producerId);\n    }\n\n    public async produceTrack(\n        getTrack: () => Promise<MediaStreamTrack>,\n        name: string,\n        sessionId?: string\n    ) {\n        const producer = await this.createProducer(getTrack, name, sessionId);\n        await this.pause(producer.id, false);\n        return producer;\n    }\n\n    public async consumeTrack(producerId: ProducerId) {\n        if(this.producers.has(producerId)) { throw new Error(`Can not create consumer for Track(${producerId})`); }\n        const consumerPromise = this.createConsumer(producerId);\n        this.consumers.set(producerId, consumerPromise);\n        return await consumerPromise;\n    }\n\n    private readonly device = new Device();\n\n    private readonly promiseCompleter = new PromiseCompleter<Result | void, string, RequestId>();\n    private readonly ws: WSTransport;\n    private retryDelay = 1000;\n    private retryAttempts = 0;\n    private retryMaxAttempts = 30;\n    private retryTimer?: NodeJS.Timeout;\n    // Whether we are producing tracks on the SFU.\n    public get producer() {\n        return this.producers.size > 0;\n    }\n\n    public constructor(\n        public readonly id: SfuId,\n        public readonly url: string,\n    ) {\n        this.ws = new WSTransport(\n            url,\n            (_, d) => this.onTransportMessage(d),\n            t => this.onTransportStateChange(t),\n            [\"live-sfu\"],\n            true,\n            null,\n        );\n        this.ws.connect().catch(e => console.error(e));\n    }\n\n    private readonly producerResolvers = new Map<ProducerId, {(producer:Producer):unknown}>();\n    private readonly producers = new Map<ProducerId, Promise<Producer>>();\n    private readonly consumers = new Map<ProducerId, Promise<Consumer>>();\n    public emitter = new EventEmitter<SfuEventMap>();\n    private closed = false;\n\n    public async close() {\n        console.log(`Closing SFU ${this.id}`);\n        this.closed = true;\n        this.producers.forEach(p => p.then(p => p.close()));\n        this.consumers.forEach(c => c.then(c => c.close()));\n        this.ws.disconnect();\n        if (this.retryTimer) {\n            clearTimeout(this.retryTimer);\n            this.retryTimer = undefined;\n        }\n    }\n\n    private async createProducer(\n        getTrack: () => Promise<MediaStreamTrack>,\n        name: string,\n        sessionId?: string,\n    ) {\n        const producerTransport = await this.producerTransport();\n\n        const track = await getTrack();\n        const canProduce = this.device.canProduce(track.kind as MediaSoup.MediaKind);\n        if (!canProduce) { console.warn(`It seems like the remote router is not ready or can not receive '${track.kind}' tracks`); }\n\n        const mediaSoupProducer = await producerTransport.produce({\n            track,\n            zeroRtpOnPause: true,\n            disableTrackOnPause: false,\n            appData: {\n                name,\n                sessionId,\n            },\n        });\n        const producer: Producer = new Producer(\n            mediaSoupProducer,\n            getTrack,\n            (paused: boolean) => this.pause(producer.id, paused),\n            (paused: boolean) => this.pauseGlobally(producer.id, paused),\n        );\n        const resolver = this.producerResolvers.get(producer.id);\n        if(resolver) {\n            this.producerResolvers.delete(producer.id);\n            resolver(producer);\n        } else {\n            console.error(`Could not locate resolver while creating Producer(${producer.id})`);\n        }\n        return producer;\n    }\n\n    private async createConsumer(producerId: ProducerId) {\n        const consumerTransport = await this.consumerTransport();\n        await this.sendRtpCapabilities();\n        const response = await this.request({ consumeTrack: { producerId } });\n        if (!response) { throw new Error(`Received empty response from SFU when trying to consume producerId(${producerId})`); }\n        if (!response.consumerCreated) { throw new Error(`Received response without consumer parameters from SFU when trying to consume producerId(${producerId})`); }\n        console.log(response);\n        const consumer = await consumerTransport.consume(response.consumerCreated);\n        await this.pause(producerId, false);\n        return new Consumer(\n            consumer,\n            (paused: boolean) => this.pause(producerId, paused),\n            (paused: boolean) => this.pauseGlobally(producerId, paused),\n        );\n    }\n\n    public async pauseGlobally(id: ProducerId, paused: boolean) {\n        return await this.request({pauseForEveryone: {id, paused}});\n    }\n\n    public async pause(id: ProducerId, paused: boolean) {\n        return await this.request({pause: {id, paused}});\n    }\n\n    private consumerTransport = Memoize(async () => {\n        await this.loadDevice();\n        const response = await this.request({ createConsumerTransport: {} });\n        if (!response) { throw new Error(\"Empty response from SFU\"); }\n        const { consumerTransportCreated } = response;\n        if (!consumerTransportCreated) { throw new Error(\"Response from SFU does not contain consumer transport\"); }\n\n        const transport = this.device.createRecvTransport(consumerTransportCreated);\n        transport.on(\"connect\", ({ dtlsParameters }, success, error) => this.request({ connectConsumerTransport: { dtlsParameters } }).then(success, error));\n        return transport;\n    });\n\n    private producerTransport = Memoize(async () => {\n        await this.loadDevice();\n        const result = await this.request({ createProducerTransport: {} });\n        if (!result) { throw new Error(\"Empty response from SFU\"); }\n        const { producerTransportCreated } = result;\n        if (!producerTransportCreated) { throw new Error(\"Response from SFU does not contain producer transport\"); }\n\n        const transport = this.device.createSendTransport(producerTransportCreated);\n        transport.on(\"connect\", (connectProducerTransport, callback, error) => this.request({ connectProducerTransport }).then(callback, error));\n        transport.on(\"produce\", async (produceTrack, callback, error) => {\n            try {\n                const response = await this.request({ produceTrack });\n                if(!response) { return error(\"No response from SFU\"); }\n                const { producerCreated } = response;\n                if(!producerCreated) { return error(\"Empty response from SFU\"); }\n                const id = producerCreated.producerId;\n                if(!id) { return error(\"Malformed response from SFU\"); }\n                const producerPromise = new Promise<Producer>(resolver => this.producerResolvers.set(id, resolver));\n                this.producers.set(id, producerPromise);\n                producerPromise.then(p => p.pausedGlobally = producerCreated.pausedGlobally);\n                callback({id});\n            } catch(e) {\n                error(e);\n            }\n        });\n        return transport;\n    });\n\n\n    private sendRtpCapabilities = Memoize(async () => {\n        await this.request({ setRtpCapabilities: this.device.rtpCapabilities });\n    });\n\n\n    private loadDevice = Memoize(async () => {\n        const response = await this.request({ getRouterRtpCapabilities: {} });\n        if (!response) { throw new Error(\"Empty routerRtpCapabilities response from SFU\"); }\n        const routerRtpCapabilities = response.routerRtpCapabilities;\n        if (!routerRtpCapabilities) { throw new Error(\"Response from SFU does not contain routerRtpCapabilities\"); }\n        await this.device.load({ routerRtpCapabilities });\n    });\n\n    private async request(request: Request) {\n        const id = this.generateRequestId();\n        const message: RequestMessage = { id, request };\n        await this.ws.send(JSON.stringify(message));\n        return this.promiseCompleter.createPromise(id);\n    }\n\n    private _requestId = 0;\n    private generateRequestId() { return `${this._requestId++}` as RequestId; }\n\n    private onTransportStateChange(state: TransportState) {\n        switch (state) {\n        case \"error\":\n            console.info(`Transport state changed to ${state}`);\n            this.emitter.emit(\"connectionError\", new SfuConnectionError(\"Transport error\", this.retryAttempts, this.id, this.producer));\n            this.retryAttempts++;\n            if (this.retryAttempts < this.retryMaxAttempts && !this.closed)\n                this.waitRetry().then(() => this.ws.connect().catch(e => console.error(e)));\n            else {\n                if (this.retryTimer) {\n                    clearTimeout(this.retryTimer);\n                    this.retryTimer = undefined;\n                }\n\n                console.log(\"Max retry attempts reached, closing connection\");\n            }\n            break;\n        case \"connected\":\n            console.info(`Transport state changed to ${state}`);\n            this.retryAttempts = 0;\n            if (this.retryTimer) {\n                clearTimeout(this.retryTimer);\n                this.retryTimer = undefined;\n            }\n\n            break;\n        default:\n            console.info(`Transport state changed to ${state}`);\n        }\n    }\n\n    private async waitRetry() {\n        if (this.retryAttempts < 10) {\n            await new Promise(resolve => this.retryTimer = setTimeout(resolve, this.retryDelay));\n        } else if (this.retryAttempts < 20) {\n            await new Promise(resolve => this.retryTimer = setTimeout(resolve, 3 * this.retryDelay));\n        } else {\n            await new Promise(resolve => this.retryTimer = setTimeout(resolve, 5 * this.retryDelay));\n        }\n    }\n\n    private onTransportMessage(data: string | ArrayBuffer | Blob) {\n        const message = this.parse(data);\n        if (!message) {  return this.ws.disconnect(4400); }\n        this.handleMessage(message).catch(e => console.error(e));\n    }\n\n    private parse(data: string | ArrayBuffer | Blob): ResponseMessage | undefined {\n        if (typeof data !== \"string\") { return; }\n        if(data.length === 0) { return {}; }\n        const response = JSON.parse(data.toString());\n        if (typeof response !== \"object\" || !response) { return; }\n        if (response.code !== undefined && response.name !== undefined && response.message !== undefined) {\n            this.emitter.emit(\"authError\", <SfuAuthErrors>response);\n            return;\n        }\n        return response as ResponseMessage;\n    }\n\n    private async handleMessage(message: ResponseMessage) {\n        try {\n            if (message.response) { this.response(message.response); }\n\n            if (message.pausedSource) { await this.onSourcePaused(message.pausedSource); }\n            if (message.pausedGlobally) { await this.onGloballyPaused(message.pausedGlobally); }\n\n            if (message.consumerClosed) { await this.closeTrack(message.consumerClosed); }\n            if (message.producerClosed) { await this.closeTrack(message.producerClosed); }\n        } catch(e) {\n            console.warn(e);\n        }\n    }\n\n    private response(response: Response) {\n        const { id } = response;\n        if (\"error\" in response) {\n            this.promiseCompleter.reject(id, response.error);\n        } else {\n            this.promiseCompleter.resolve(id, response.result);\n        }\n    }\n\n    private async closeTrack(producerId: ProducerId) {\n        (await this.producers.get(producerId))?.close();\n        this.producers.delete(producerId);\n\n        (await this.consumers.get(producerId))?.close();\n        this.consumers.delete(producerId);\n    }\n\n    private async onSourcePaused({ producerId, paused }: PauseEvent) {\n        const consumer = await this.consumers.get(producerId);\n        if(consumer) { consumer.pausedAtSource = paused; }\n    }\n\n    private async onGloballyPaused({ producerId, paused }: PauseEvent) {\n        const producer = await this.producers.get(producerId);\n        console.log(`Producer(${producer?.id}): Global pause (${producerId},${paused})`);\n        if(producer) { producer.pausedGlobally = paused; }\n\n        const consumer = await this.consumers.get(producerId);\n        if(consumer) { consumer.pausedGlobally = paused; }\n    }\n}\n\nexport abstract class Track {\n    public abstract get id(): ProducerId;\n    public abstract get kind(): \"audio\" | \"video\" | undefined;\n    public abstract get track(): MediaStreamTrack | null | undefined;\n\n    public abstract start(): Promise<void>;\n    public abstract stop(): Promise<void>;\n    public abstract close(): void;\n\n    public abstract get isMine(): boolean\n    public abstract get pausedLocally(): boolean\n    public abstract get pausedAtSource(): boolean | undefined\n\n    protected _pausedGlobally?: boolean;\n    public get pausedGlobally() { return this._pausedGlobally; }\n    public set pausedGlobally(pause: boolean | undefined) {\n        console.log(\"consumer set pausedGlobally\", pause);\n        if(this._pausedGlobally === pause) { return; }\n        this._pausedGlobally = pause;\n        this.emitter.emit(\"pausedGlobally\", pause);\n    }\n\n    public readonly on: EventEmitter<TrackEventMap>[\"on\"] = (event, listener) => this.emitter.on(event, listener);\n    public readonly off: EventEmitter<TrackEventMap>[\"off\"] = (event, listener) => this.emitter.off(event, listener);\n    protected readonly emitter = new EventEmitter<TrackEventMap>();\n\n    protected constructor(\n        public readonly requestBroadcastStateChange: (paused: boolean) => Promise<void|Result>\n    ) { }\n}\n\nexport class Producer extends Track {\n    public get id() { return newProducerID(this.producer.id); }\n    public get kind() { return this.producer.kind as \"audio\"|\"video\"; }\n    public get track() { return this.producer.track; }\n    public override get isMine() { return true; }\n    public override get pausedLocally() { return this.producer.paused; }\n    public override get pausedAtSource() { return this.producer.paused; }\n\n    public async start() {\n        if(this.track?.readyState !== \"live\") {\n            const track = await this.getTrack();\n            await this.producer.replaceTrack({track});\n        }\n        await this.pause(false);\n    }\n\n    public async stop() {\n        if(this.producer.track) {\n            await this.producer.replaceTrack({track: null});\n        }\n        await this.pause(true);\n    }\n\n    public close() { this.producer.close(); }\n\n    public constructor(\n        private readonly producer: MediaSoup.Producer,\n        private readonly getTrack: () => Promise<MediaStreamTrack>,\n        private notifyPause: (paused: boolean) => Promise<void|Result>,\n        requestPauseGlobally: (paused: boolean) => Promise<void|Result>\n    ) {\n        super(requestPauseGlobally);\n        console.log(\"producer constructor\", producer);\n        producer.on(\"transportclose\", () => console.log(`Producer(${producer.id})'s Transport closed`));\n        producer.on(\"trackended\", () => console.log(`Producer(${producer.id}) ended`));\n    }\n\n    private async pause(paused: boolean) {\n        await Promise.allSettled([\n            this.notifyPause(paused),\n            paused\n                ? this.producer.pause()\n                : this.producer.resume()\n        ]);\n        this.emitter.emit(\"pausedLocally\", this.pausedLocally);\n    }\n}\n\nexport class Consumer extends Track {\n    public get id() {\n        if(!this.consumer) {throw new Error(\"Consumer has not yet initialized.\"); }\n        return newProducerID(this.consumer.producerId);\n    }\n    public get kind() { return this.consumer.kind as \"audio\"|\"video\"|undefined; }\n    public get track() { return this.consumer.track; }\n    public override get isMine() { return false; }\n    public override get pausedLocally() { return this.consumer.paused; }\n\n    protected _pausedAtSource?: boolean;\n    public get pausedAtSource() { return this._pausedAtSource; }\n    public set pausedAtSource(paused: boolean | undefined) {\n        console.log(\"consumer set pausedAtSource\", paused);\n        if(this._pausedAtSource === paused) { return; }\n        this._pausedAtSource = paused;\n        this.emitter.emit(\"pausedAtSource\", paused);\n    }\n\n    public async start() { await this.pause(false); }\n    public async stop() { await this.pause(true); }\n    public close() { this.consumer.close(); }\n\n    public constructor (\n        private consumer: MediaSoup.Consumer,\n        private notifyPause: (paused: boolean) => Promise<void|Result>,\n        requestPauseGlobally: (paused: boolean) => Promise<void|Result>,\n    ) {\n        super(requestPauseGlobally);\n        console.log(\"consumer constructor\");\n        consumer.on(\"transportclose\", () => console.log(`Consumer(${consumer.id})'s transport closed`));\n        consumer.on(\"trackended\", () => console.log(`Consumer(${consumer.id}) ended`));\n    }\n\n    private async pause(paused: boolean) {\n        if(this.pausedLocally === paused) { return; }\n        await Promise.allSettled([\n            this.notifyPause(paused),\n            paused\n                ? this.consumer.pause()\n                : this.consumer.resume()\n        ]);\n        this.emitter.emit(\"pausedLocally\", this.pausedLocally);\n    }\n}\n\nexport type TrackEventMap = {\n    close: () => void,\n    pausedAtSource: (paused: boolean | undefined) => void,\n    pausedGlobally: (paused: boolean | undefined) => void,\n    pausedLocally: (paused: boolean | undefined) => void,\n}\n\ntype SfuAuthError = Error & {\n    code: number;\n}\n\nexport type AuthenticationError = SfuAuthError & {\n    name: \"AuthenticationError\";\n};\n\nexport type AuthorizationError = SfuAuthError & {\n    name: \"AuthorizationError\";\n};\n\nexport type TokenMismatchError = SfuAuthError & {\n    name: \"TokenMismatchError\";\n};\n\nexport type MissingAuthenticationError = SfuAuthError & {\n    name: \"MissingAuthenticationError\";\n};\n\nexport type MissingAuthorizationError = SfuAuthError & {\n    name: \"MissingAuthorizationError\";\n};\n\nexport type SfuAuthErrors = AuthenticationError | AuthorizationError | TokenMismatchError | MissingAuthenticationError | MissingAuthorizationError;\n\nexport class SfuConnectionError implements Error {\n    public readonly name = \"SfuConnectionError\";\n    constructor(\n        public readonly message: string,\n        public readonly retries: number,\n        public readonly id: SfuId,\n        public readonly producerError: boolean = false) {}\n}\n\nexport type SfuEventMap = {\n    authError: (error: SfuAuthErrors) => void,\n    connectionError: (error: SfuConnectionError) => void,\n}\n","import { ProducerId, SfuId } from \"./sfu\";\nimport { TransportState, WSTransport } from \"./websocketTransport\";\nimport EventEmitter from \"eventemitter3\";\n\nexport type TrackLocation = { sfuId: SfuId, producerId: ProducerId }\nconst trackLocationEquals = (a: TrackLocation, b: TrackLocation) =>\n    (a.producerId === b.producerId)\n    && (a.sfuId === b.sfuId);\n\nexport type TrackInfo = TrackLocation & {\n    name?: string,\n    sessionId?: string,\n};\nconst trackInfoEquals = (a: TrackInfo, b: TrackInfo) =>\n    trackLocationEquals(a,b)\n    && (a.name === b.name)\n    && (a.sessionId === b.sessionId);\n\nexport type TrackInfoEvent = {\n    add: TrackInfo\n} | {\n    remove: ProducerId\n} | {\n    sfuId: SfuId\n}\n\nexport class Room {\n    public readonly on: Room[\"emitter\"][\"on\"] = (event, listener) => this.emitter.on(event, listener);\n    public readonly off: Room[\"emitter\"][\"off\"] = (event, listener) => this.emitter.off(event, listener);\n    public readonly once: Room[\"emitter\"][\"once\"] = (event, listener) => this.emitter.once(event, listener);\n    // The sfu on which the client will attempt to place their tracks.\n    private _producerSfuId?: SfuId;\n\n    public tracks() { return [...(this.trackInfoByProducerId ?? []).values()]; }\n\n    public getSessionTracks(sessionId: string): TrackInfo[] {\n        this.ws.connect().catch((e) =>  console.error(e));\n        const producerIds = this.sessionMap.get(sessionId);\n        if(!producerIds) { return []; }\n        return [...producerIds.values()].flatMap(id => this.trackInfoByProducerId?.get(id) || []);\n    }\n\n    public async getSfuIds() {\n        return this.tracks().map(t => t.sfuId);\n    }\n\n    public async getProducerSfuId(excludeId?: SfuId) {\n        if(this._producerSfuId && excludeId !== this._producerSfuId) { return this._producerSfuId; }\n        this._producerSfuId = undefined;\n        await this.ws.connect();\n        const response = new Promise<SfuId>(resolve => this.once(\"sfuId\", id => resolve(id)));\n        await this.ws.send(JSON.stringify({ excludeId }));\n        return await response;\n    }\n\n    public constructor(\n        public readonly endpoint: string,\n    ) {\n        this.ws = new WSTransport(\n            endpoint,\n            (_, d) => this.onTransportMessage(d),\n            t => this.onTransportStateChange(t),\n            undefined,\n            true,\n            null,\n            5000,\n        );\n    }\n\n    private readonly ws: WSTransport;\n    private readonly emitter = new EventEmitter<RoomEventMap>();\n    private sessionMap = new Map<string, Set<ProducerId>>();\n    private trackInfoByProducerId?: Map<ProducerId,TrackInfo>;\n\n    private onTransportStateChange(state: TransportState) {\n        switch(state) {\n        case \"not-connected\":\n            this.emitter.emit(\"disconnected\");\n            break;\n        }\n    }\n    private onTransportMessage(data: string | ArrayBuffer | Blob) {\n        if (typeof data !== \"string\") { return; }\n        if(data.length === 0) { return; }\n        const events = JSON.parse(data);\n        if (typeof events !== \"object\" || !(events instanceof Array)) { return; }\n        for(const event of <TrackInfoEvent[]>events) { this.handleMessage(event); }\n    }\n\n    private handleMessage(e: TrackInfoEvent) {\n        if(\"add\" in e) { this.addTrackInfo(e.add); }\n        if(\"remove\" in e) { this.removeTrackInfo(e.remove); }\n        if(\"sfuId\" in e) { this.setProducerSfuId(e.sfuId); }\n    }\n\n    private addTrackInfo(trackInfo: TrackInfo) {\n        const currentTrackInfo = this.trackInfoByProducerId?.get(trackInfo.producerId);\n        if(currentTrackInfo && trackInfoEquals(currentTrackInfo, trackInfo)) { return; }\n\n        if(trackInfo.sessionId) { this.addProducerIdToSession(trackInfo.sessionId, trackInfo.producerId); }\n        if(!this.trackInfoByProducerId) {this.trackInfoByProducerId = new Map<ProducerId,TrackInfo>(); }\n\n        this.trackInfoByProducerId.set(trackInfo.producerId, trackInfo);\n        this.emitter.emit(\"tracksUpdated\", this.trackInfoByProducerId);\n    }\n\n    private removeTrackInfo(id: ProducerId) {\n        if(!this.trackInfoByProducerId) { return; }\n        this.removeProducerIdFromSession(id);\n        this.trackInfoByProducerId.delete(id);\n        this.emitter.emit(\"tracksUpdated\", this.trackInfoByProducerId);\n    }\n\n    private addProducerIdToSession(sessionId: string, producerId: ProducerId) {\n        let sessionTracks = this.sessionMap.get(sessionId);\n        if(!sessionTracks) {\n            sessionTracks = new Set<ProducerId>();\n            this.sessionMap.set(sessionId, sessionTracks);\n        }\n        sessionTracks.add(producerId);\n    }\n\n    private removeProducerIdFromSession(id: ProducerId) {\n        if(!this.trackInfoByProducerId) { return; }\n        const trackInfo = this.trackInfoByProducerId.get(id);\n        if(!trackInfo || !trackInfo.sessionId) { return; }\n        this.sessionMap.get(trackInfo.sessionId)?.delete(id);\n    }\n\n    private setProducerSfuId(id: SfuId) {\n        this._producerSfuId = id;\n        this.emitter.emit(\"sfuId\", id);\n    }\n}\n\nexport type RoomEventMap = {\n    tracksUpdated: (tracks: Map<ProducerId,TrackInfo>) => void;\n    disconnected: () => void;\n    sfuId: (sfuId: SfuId) => void;\n}\n","import React from \"react\";\nimport { TrackSender } from \"../network/trackSender\";\nimport {SFU, SfuId, SfuAuthErrors, SfuConnectionError} from \"../network/sfu\";\nimport {Room, TrackLocation} from \"../network/room\";\n\n\nexport class WebRtcManager {\n    public microphoneConstraints?: MediaStreamConstraints[\"audio\"];\n    public readonly microphone = new TrackSender(\n        () => this.selectProducerSfu(),\n        microphoneGetter(() => this.microphoneConstraints),\n        \"microphone\",\n        this.sessionId,\n    );\n\n    public cameraConstraints?: MediaStreamConstraints[\"video\"];\n    public readonly camera = new TrackSender(\n        () => this.selectProducerSfu(),\n        cameraGetter(() => this.cameraConstraints),\n        \"camera\",\n        this.sessionId,\n    );\n\n    public screenshareConstraints?: DisplayMediaStreamConstraints;\n    public readonly screenshare = new TrackSender(\n        () => this.selectProducerSfu(),\n        screenshareGetter(() => this.screenshareConstraints),\n        \"screenshare-video\",\n        this.sessionId,\n    );\n\n    public async getTrack({sfuId, producerId}: TrackLocation) {\n        return await this.sfu(sfuId).getTrack(producerId);\n    }\n\n\n    public async pauseForEveryone({sfuId, producerId}: TrackLocation, paused: boolean) {\n        const sfu = this.sfus.get(sfuId);\n        if(!sfu) {throw new Error(`Not connected to SFU(${sfuId})`); }\n        await sfu.pauseGlobally(producerId, paused);\n    }\n\n    public async pause({sfuId, producerId}: TrackLocation, paused: boolean) {\n        const sfu = this.sfus.get(sfuId);\n        if(!sfu) {throw new Error(`Not connected to SFU(${sfuId})`); }\n        await sfu.pause(producerId, paused);\n    }\n\n    public readonly room: Room;\n\n    public constructor(\n        public readonly baseEndpoint: URL,\n        public readonly sessionId?: string,\n        private onAuthorizationInvalid?: () => unknown,\n        private onAuthorizationExpired?: () => unknown,\n        private onAuthenticationExpired?: () => unknown,\n        private onAuthenticationInvalid?: () => unknown,\n        private onTokenMismatch?: () => unknown,\n        private onMissingAuthenticationToken?: () => unknown,\n        private onMissingAuthorizationToken?: () => unknown\n    ) {\n        if(baseEndpoint.protocol === \"https:\") { baseEndpoint.protocol = \"wss:\"; }\n        if(baseEndpoint.protocol === \"http:\") { baseEndpoint.protocol = \"ws:\"; }\n        const wsEndpoint = new URL(baseEndpoint.toString());\n        wsEndpoint.pathname += \"room\";\n        this.room = new Room(wsEndpoint.toString());\n    }\n\n    private async onSfuConnectionError(error: SfuConnectionError) {\n        try {\n            if (error.producerError && error.retries > 10 && this.sfus.has(error.id)) {\n                console.error(`Cannot seem to reliably connect to SFU(${error.id}), attempting to acquire a different sfu`);\n\n                const sfu = this.sfus.get(error.id);\n                await sfu?.close();\n                this.sfus.delete(error.id);\n                await this.selectProducerSfu(error.id);\n                await Promise.allSettled([\n                    this.camera,\n                    this.microphone,\n                    this.screenshare,    \n                ].flatMap(sender => {\n                    if(sender.sfuId !== error.id) { return; }\n                    return this.camera.changeState(\"switching-sfu\");\n                }));\n            }\n        } catch (e) {\n            console.error(e);\n        }\n\n        console.error(error);\n    }\n\n    private onSfuAuthError(error: SfuAuthErrors) {\n        console.error(error.name);\n        enum SfuAuthErrorCodes {\n            INVALID = 4400,\n            EXPIRED = 4401,\n            NOT_BEFORE = 4403,\n            UNKNOWN_ERROR = 4500\n        }\n\n        switch (error.name) {\n        case \"AuthenticationError\":\n            switch (error.code){\n            case SfuAuthErrorCodes.INVALID:\n                if (this.onAuthenticationInvalid) {\n                    this.onAuthenticationInvalid();\n                } else {\n                    console.error(\"INVALID_AUTHENTICATION not handled\");\n                }\n                break;\n            case SfuAuthErrorCodes.EXPIRED:\n                if (this.onAuthenticationExpired) {\n                    this.onAuthenticationExpired();\n                } else {\n                    console.error(\"EXPIRED_AUTHENTICATION not handled\");\n                }\n                break;\n            case SfuAuthErrorCodes.NOT_BEFORE:\n            case SfuAuthErrorCodes.UNKNOWN_ERROR:\n            default:\n                console.error(JSON.stringify(error));\n            }\n            break;\n        case \"AuthorizationError\":\n            switch (error.code){\n            case SfuAuthErrorCodes.INVALID:\n                if (this.onAuthorizationInvalid) {\n                    this.onAuthorizationInvalid();\n                } else {\n                    console.error(\"INVALID_AUTHORIZATION not handled\");\n                }\n                break;\n            case SfuAuthErrorCodes.EXPIRED:\n                if (this.onAuthorizationExpired) {\n                    this.onAuthorizationExpired();\n                } else {\n                    console.error(\"EXPIRED_AUTHORIZATION not handled\");\n                }\n                break;\n            case SfuAuthErrorCodes.NOT_BEFORE:\n            case SfuAuthErrorCodes.UNKNOWN_ERROR:\n            default:\n                console.error(JSON.stringify(error));\n            }\n            break;\n        case \"TokenMismatchError\":\n            if (this.onTokenMismatch) {\n                this.onTokenMismatch();\n            } else {\n                console.error(\"TOKEN_MISMATCH not handled\");\n            }\n            break;\n        case \"MissingAuthenticationError\":\n            if (this.onMissingAuthenticationToken) {\n                this.onMissingAuthenticationToken();\n            } else {\n                console.error(\"MISSING_AUTHENTICATION_ERROR not handled\");\n            }\n            break;\n        case \"MissingAuthorizationError\":\n            if (this.onMissingAuthorizationToken) {\n                this.onMissingAuthorizationToken();\n            } else {\n                console.error(\"MISSING_AUTHORIZATION_ERROR not handled\");\n            }\n            break;\n        default:\n            console.error(JSON.stringify(error));\n        }\n    }\n\n    private readonly sfus = new Map<SfuId, SFU>();\n\n    private sfu(id: SfuId) {\n        let sfu = this.sfus.get(id);\n        if (!sfu) {\n            const url = this.getSfuUrl(id);\n            sfu = new SFU(id, url);\n            sfu.emitter.on(\"authError\", (err) => this.onSfuAuthError(err));\n            sfu.emitter.on(\"connectionError\", (err) => this.onSfuConnectionError(err));\n            this.sfus.set(id, sfu);\n        }\n        return sfu;\n    }\n\n    private async selectProducerSfu(excludeId?: SfuId) {\n        const id = await this.room.getProducerSfuId(excludeId);\n        return this.sfu(id);\n    }\n\n    private getSfuUrl(id?: SfuId) {\n        const wsEndpoint = new URL(this.baseEndpoint.toString());\n        wsEndpoint.pathname += `sfuid/${id}`;\n        return wsEndpoint.toString();\n    }\n}\n\nconst microphoneGetter = (\n    getAudioConstraints?: () => MediaStreamConstraints[\"audio\"]\n) => () => audioTrack(\n    navigator.mediaDevices.getUserMedia({\n        audio: getAudioConstraints?.() || true,\n    })\n);\n\nconst cameraGetter = (\n    getVideoConstraints?: () => MediaStreamConstraints[\"video\"]\n) => () => videoTrack(\n    navigator.mediaDevices.getUserMedia({\n        video: getVideoConstraints?.() || true,\n    })\n);\n\nconst screenshareGetter = (\n    getConstraints?: () =>  DisplayMediaStreamConstraints|undefined\n) => () => videoTrack(\n    navigator.mediaDevices.getDisplayMedia(getConstraints?.())\n);\n\nexport const audioTrack = async (stream: Promise<MediaStream>) => firstTrack((await stream).getAudioTracks());\nexport const videoTrack = async (stream: Promise<MediaStream>) => firstTrack((await stream).getVideoTracks());\nexport const firstTrack = (tracks: MediaStreamTrack[]) => {\n    const track = tracks[0];\n    if(!track) { throw new Error(\"Could not get media track\"); }\n    if(tracks.length > 1) { console.info(`Got ${tracks.length} media tracks, can only use 1`); }\n    return track;\n};\n\nexport const WebRtcContext = React.createContext<WebRtcManager>(null as any);\nWebRtcContext.displayName = \"KidsloopLiveWebRTC\";\n","import { useCallback, useContext, useEffect, useMemo, useReducer, useState } from \"react\";\nimport { useAsync, useAsyncCallback } from \"react-async-hook\";\nimport { TrackLocation } from \"../../network/room\";\nimport { Consumer, Producer, Track as SfuTrack } from \"../../network/sfu\";\nimport { TrackSender } from \"../../network/trackSender\";\nimport { WebRtcContext } from \"../rtcContext\";\n\nexport const useWebRtcConstraints = (\n    ctx = useContext(WebRtcContext)\n) => {\n    return {\n        getCameraConstraints: () => ctx.cameraConstraints,\n        setCameraConstraints: (\n            constraints?: MediaStreamConstraints[\"audio\"]\n        ) => ctx.cameraConstraints = constraints,\n\n        getMicrophoneConstraints: () => ctx.microphoneConstraints,\n        setMicrophoneConstraints: (\n            constraints?: MediaStreamConstraints[\"video\"]\n        ) => ctx.microphoneConstraints = constraints,\n\n        getScreenshareConstraints: () => ctx.screenshareConstraints,\n        setScreenshareConstraints: (\n            constraints?: DisplayMediaStreamConstraints\n        ) => ctx.screenshareConstraints = constraints,\n    };\n};\n\nexport const useCamera = (ctx = useContext(WebRtcContext)) => useTrackSender(ctx.camera);\nexport const useMicrophone = (ctx = useContext(WebRtcContext)) => useTrackSender(ctx.microphone);\nexport const useScreenshare = (ctx = useContext(WebRtcContext)) => useTrackSender(ctx.screenshare);\n\nexport type StreamNamePair = { audio: string, video: string }\nexport function useStream(sessionId: string, name?: string | StreamNamePair, ctx = useContext(WebRtcContext)) {\n    const audioName = typeof name === \"string\" ? `${name}-audio` : name?.audio ?? \"microphone\";\n    const videoName = typeof name === \"string\" ? `${name}-video` : name?.video ?? \"camera\";\n\n    const getTracks = useCallback(\n        () => {\n            const tracks = ctx.room.getSessionTracks(sessionId);\n            return {\n                audioLocation: tracks.find(t => t.name === audioName),\n                videoLocation: tracks.find(t => t.name === videoName),\n            };\n        },\n        [ctx, sessionId, audioName, videoName],\n    );\n    const [{audioLocation, videoLocation}, setLocations] = useState(getTracks);\n    useEffect(() => {\n        const onUpdate = () => setLocations(getTracks);\n        ctx.room.on(\"tracksUpdated\", onUpdate);\n        return () => { ctx.room.off(\"tracksUpdated\", onUpdate);};\n    }, [setLocations, getTracks, ctx.room]);\n    \n    useEffect(() => {\n        // This useEffect should be removed once there is time to refactor\n        if(sessionId !== ctx.sessionId) { return; }\n        const onUpdate = () => setLocations(getTracks);\n        const senders = [\n            ctx.camera,\n            ctx.microphone,\n            ctx.screenshare,\n        ];\n        senders.forEach(sender => sender.on(\"statechange\", onUpdate));\n        return () => senders.forEach(sender => sender.off(\"statechange\", onUpdate));\n    }, [setLocations, getTracks, sessionId]);\n\n    const audio = useTrack(audioLocation);\n    const video = useTrack(videoLocation);\n\n    const stream = useMediaStreamTracks(\n        audio.track?.track,\n        video.track?.track,\n    );\n    return {\n        audio,\n        video,\n        stream,\n    };\n}\n\n\nexport const useTrack = (\n    location?: TrackLocation,\n    ctx = useContext(WebRtcContext),\n) => {\n    const {\n        currentPromise: trackPromise,\n        result: track\n    } = useAsync(async (l?: TrackLocation) => l && (await ctx.getTrack(l)), [location]);\n\n    const start = useAsyncCallback(async () => (await trackPromise)?.start());\n    const stop = useAsyncCallback(async () => (await trackPromise)?.stop());\n    return {\n        track,\n        hasLocation: Boolean(location),\n        ...useTrackState(track),\n        kind: track?.kind,\n        isMine: track?.isMine,\n        start,\n        stop,\n        pause: useAsyncCallback(async (paused: boolean) => await (paused ? stop : start).execute()),\n        globalPause: useAsyncCallback(async (paused: boolean) => (await trackPromise)?.requestBroadcastStateChange(paused)),\n    };\n};\n\nexport type Track = ReturnType<typeof useTrack>;\n\nconst useTrackSender = (\n    trackSender: TrackSender,\n) => {\n    const rerender = useRerender();\n    useEffect(() => {\n        trackSender.on(\"statechange\", rerender);\n        return () => { trackSender.off(\"statechange\", rerender); };\n    }, [trackSender, rerender]);\n\n    return {\n        ...useTrackState(trackSender.producer),\n        track: trackSender.producer?.track,\n        setSending: useAsyncCallback((send: boolean) => trackSender.changeState(send ? \"sending\" : \"not-sending\")),\n        globalPause: useAsyncCallback(async (paused: boolean) => trackSender.producer?.requestBroadcastStateChange(paused)),\n    };\n};\n\nconst useTrackState = (\n    track?: SfuTrack,\n) => {\n    const rerender = useRerender();\n\n    useEffect(() => {\n        if(!track) { return; }\n        track.on(\"pausedAtSource\", rerender);\n        track.on(\"pausedGlobally\", rerender);\n        track.on(\"pausedLocally\", rerender);\n        return () => {\n            track.off(\"pausedAtSource\", rerender);\n            track.off(\"pausedGlobally\", rerender);\n            track.off(\"pausedLocally\", rerender);\n        };\n    });\n\n    const isActiveLocally = track?.pausedLocally === false;\n    const isActiveAtProducer = track?.pausedAtSource === false;\n    const isActiveGlobally = isActiveAtProducer && track?.pausedGlobally === false;\n\n    return {\n        isConsumable: isActiveGlobally && isActiveLocally,\n        isPausedLocally: track?.pausedLocally !== false,\n        isPausedGlobally: track?.pausedGlobally !== false,\n        isPausedAtSource: track?.pausedAtSource !== false,\n    };\n};\n\nexport const useMediaStreamTracks = (\n    ...nextTrackSet: Array<MediaStreamTrack | null | undefined>\n) => {\n    const stream = useMemo(() => new MediaStream(), []);\n    const previousTrackSet = new Set(stream.getTracks());\n    \n    for(const track of nextTrackSet) {\n        if(!track || track.readyState !== \"live\") { continue; }\n        const isNewTrack = !previousTrackSet.delete(track);\n        if(isNewTrack) { stream.addTrack(track); }\n    }\n\n    for(const track of previousTrackSet) {\n        stream.removeTrack(track);\n    }\n\n    return stream;\n};\n\nconst useRerender = () => useReducer(i => i + 1, 0)[1];\n","// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet } from './url-alphabet/index.js'\n\nif (false) {\n  // All bundlers will remove this block in the production bundle.\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * size) / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.ClassRequest = (function() {\n\n    /**\n     * Properties of a ClassRequest.\n     * @exports IClassRequest\n     * @interface IClassRequest\n     * @property {string|null} [requestId] ClassRequest requestId\n     * @property {IEndClassCommand|null} [endClass] ClassRequest endClass\n     * @property {ISetHostCommand|null} [setHost] ClassRequest setHost\n     * @property {ISetContentCommand|null} [setContent] ClassRequest setContent\n     * @property {ISetActivityStreamIdCommand|null} [setActivityStreamId] ClassRequest setActivityStreamId\n     * @property {IRewardTrophyToUserCommand|null} [rewardTrophyToUser] ClassRequest rewardTrophyToUser\n     * @property {IRewardTrophyToAllCommand|null} [rewardTrophyToAll] ClassRequest rewardTrophyToAll\n     * @property {ISendChatMessageCommand|null} [sendChatMessage] ClassRequest sendChatMessage\n     */\n\n    /**\n     * Constructs a new ClassRequest.\n     * @exports ClassRequest\n     * @classdesc Represents a ClassRequest.\n     * @implements IClassRequest\n     * @constructor\n     * @param {IClassRequest=} [properties] Properties to set\n     */\n    function ClassRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * ClassRequest requestId.\n     * @member {string} requestId\n     * @memberof ClassRequest\n     * @instance\n     */\n    ClassRequest.prototype.requestId = \"\";\n\n    /**\n     * ClassRequest endClass.\n     * @member {IEndClassCommand|null|undefined} endClass\n     * @memberof ClassRequest\n     * @instance\n     */\n    ClassRequest.prototype.endClass = null;\n\n    /**\n     * ClassRequest setHost.\n     * @member {ISetHostCommand|null|undefined} setHost\n     * @memberof ClassRequest\n     * @instance\n     */\n    ClassRequest.prototype.setHost = null;\n\n    /**\n     * ClassRequest setContent.\n     * @member {ISetContentCommand|null|undefined} setContent\n     * @memberof ClassRequest\n     * @instance\n     */\n    ClassRequest.prototype.setContent = null;\n\n    /**\n     * ClassRequest setActivityStreamId.\n     * @member {ISetActivityStreamIdCommand|null|undefined} setActivityStreamId\n     * @memberof ClassRequest\n     * @instance\n     */\n    ClassRequest.prototype.setActivityStreamId = null;\n\n    /**\n     * ClassRequest rewardTrophyToUser.\n     * @member {IRewardTrophyToUserCommand|null|undefined} rewardTrophyToUser\n     * @memberof ClassRequest\n     * @instance\n     */\n    ClassRequest.prototype.rewardTrophyToUser = null;\n\n    /**\n     * ClassRequest rewardTrophyToAll.\n     * @member {IRewardTrophyToAllCommand|null|undefined} rewardTrophyToAll\n     * @memberof ClassRequest\n     * @instance\n     */\n    ClassRequest.prototype.rewardTrophyToAll = null;\n\n    /**\n     * ClassRequest sendChatMessage.\n     * @member {ISendChatMessageCommand|null|undefined} sendChatMessage\n     * @memberof ClassRequest\n     * @instance\n     */\n    ClassRequest.prototype.sendChatMessage = null;\n\n    // OneOf field names bound to virtual getters and setters\n    var $oneOfFields;\n\n    /**\n     * ClassRequest command.\n     * @member {\"endClass\"|\"setHost\"|\"setContent\"|\"setActivityStreamId\"|\"rewardTrophyToUser\"|\"rewardTrophyToAll\"|\"sendChatMessage\"|undefined} command\n     * @memberof ClassRequest\n     * @instance\n     */\n    Object.defineProperty(ClassRequest.prototype, \"command\", {\n        get: $util.oneOfGetter($oneOfFields = [\"endClass\", \"setHost\", \"setContent\", \"setActivityStreamId\", \"rewardTrophyToUser\", \"rewardTrophyToAll\", \"sendChatMessage\"]),\n        set: $util.oneOfSetter($oneOfFields)\n    });\n\n    /**\n     * Creates a new ClassRequest instance using the specified properties.\n     * @function create\n     * @memberof ClassRequest\n     * @static\n     * @param {IClassRequest=} [properties] Properties to set\n     * @returns {ClassRequest} ClassRequest instance\n     */\n    ClassRequest.create = function create(properties) {\n        return new ClassRequest(properties);\n    };\n\n    /**\n     * Encodes the specified ClassRequest message. Does not implicitly {@link ClassRequest.verify|verify} messages.\n     * @function encode\n     * @memberof ClassRequest\n     * @static\n     * @param {IClassRequest} message ClassRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ClassRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.requestId != null && Object.hasOwnProperty.call(message, \"requestId\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.requestId);\n        if (message.endClass != null && Object.hasOwnProperty.call(message, \"endClass\"))\n            $root.EndClassCommand.encode(message.endClass, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n        if (message.setHost != null && Object.hasOwnProperty.call(message, \"setHost\"))\n            $root.SetHostCommand.encode(message.setHost, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n        if (message.setContent != null && Object.hasOwnProperty.call(message, \"setContent\"))\n            $root.SetContentCommand.encode(message.setContent, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n        if (message.setActivityStreamId != null && Object.hasOwnProperty.call(message, \"setActivityStreamId\"))\n            $root.SetActivityStreamIdCommand.encode(message.setActivityStreamId, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();\n        if (message.rewardTrophyToUser != null && Object.hasOwnProperty.call(message, \"rewardTrophyToUser\"))\n            $root.RewardTrophyToUserCommand.encode(message.rewardTrophyToUser, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n        if (message.rewardTrophyToAll != null && Object.hasOwnProperty.call(message, \"rewardTrophyToAll\"))\n            $root.RewardTrophyToAllCommand.encode(message.rewardTrophyToAll, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n        if (message.sendChatMessage != null && Object.hasOwnProperty.call(message, \"sendChatMessage\"))\n            $root.SendChatMessageCommand.encode(message.sendChatMessage, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified ClassRequest message, length delimited. Does not implicitly {@link ClassRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ClassRequest\n     * @static\n     * @param {IClassRequest} message ClassRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ClassRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a ClassRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof ClassRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ClassRequest} ClassRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ClassRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ClassRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.requestId = reader.string();\n                break;\n            case 6:\n                message.endClass = $root.EndClassCommand.decode(reader, reader.uint32());\n                break;\n            case 7:\n                message.setHost = $root.SetHostCommand.decode(reader, reader.uint32());\n                break;\n            case 8:\n                message.setContent = $root.SetContentCommand.decode(reader, reader.uint32());\n                break;\n            case 9:\n                message.setActivityStreamId = $root.SetActivityStreamIdCommand.decode(reader, reader.uint32());\n                break;\n            case 10:\n                message.rewardTrophyToUser = $root.RewardTrophyToUserCommand.decode(reader, reader.uint32());\n                break;\n            case 11:\n                message.rewardTrophyToAll = $root.RewardTrophyToAllCommand.decode(reader, reader.uint32());\n                break;\n            case 12:\n                message.sendChatMessage = $root.SendChatMessageCommand.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a ClassRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ClassRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ClassRequest} ClassRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ClassRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a ClassRequest message.\n     * @function verify\n     * @memberof ClassRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    ClassRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        var properties = {};\n        if (message.requestId != null && message.hasOwnProperty(\"requestId\"))\n            if (!$util.isString(message.requestId))\n                return \"requestId: string expected\";\n        if (message.endClass != null && message.hasOwnProperty(\"endClass\")) {\n            properties.command = 1;\n            {\n                var error = $root.EndClassCommand.verify(message.endClass);\n                if (error)\n                    return \"endClass.\" + error;\n            }\n        }\n        if (message.setHost != null && message.hasOwnProperty(\"setHost\")) {\n            if (properties.command === 1)\n                return \"command: multiple values\";\n            properties.command = 1;\n            {\n                var error = $root.SetHostCommand.verify(message.setHost);\n                if (error)\n                    return \"setHost.\" + error;\n            }\n        }\n        if (message.setContent != null && message.hasOwnProperty(\"setContent\")) {\n            if (properties.command === 1)\n                return \"command: multiple values\";\n            properties.command = 1;\n            {\n                var error = $root.SetContentCommand.verify(message.setContent);\n                if (error)\n                    return \"setContent.\" + error;\n            }\n        }\n        if (message.setActivityStreamId != null && message.hasOwnProperty(\"setActivityStreamId\")) {\n            if (properties.command === 1)\n                return \"command: multiple values\";\n            properties.command = 1;\n            {\n                var error = $root.SetActivityStreamIdCommand.verify(message.setActivityStreamId);\n                if (error)\n                    return \"setActivityStreamId.\" + error;\n            }\n        }\n        if (message.rewardTrophyToUser != null && message.hasOwnProperty(\"rewardTrophyToUser\")) {\n            if (properties.command === 1)\n                return \"command: multiple values\";\n            properties.command = 1;\n            {\n                var error = $root.RewardTrophyToUserCommand.verify(message.rewardTrophyToUser);\n                if (error)\n                    return \"rewardTrophyToUser.\" + error;\n            }\n        }\n        if (message.rewardTrophyToAll != null && message.hasOwnProperty(\"rewardTrophyToAll\")) {\n            if (properties.command === 1)\n                return \"command: multiple values\";\n            properties.command = 1;\n            {\n                var error = $root.RewardTrophyToAllCommand.verify(message.rewardTrophyToAll);\n                if (error)\n                    return \"rewardTrophyToAll.\" + error;\n            }\n        }\n        if (message.sendChatMessage != null && message.hasOwnProperty(\"sendChatMessage\")) {\n            if (properties.command === 1)\n                return \"command: multiple values\";\n            properties.command = 1;\n            {\n                var error = $root.SendChatMessageCommand.verify(message.sendChatMessage);\n                if (error)\n                    return \"sendChatMessage.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a ClassRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ClassRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ClassRequest} ClassRequest\n     */\n    ClassRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.ClassRequest)\n            return object;\n        var message = new $root.ClassRequest();\n        if (object.requestId != null)\n            message.requestId = String(object.requestId);\n        if (object.endClass != null) {\n            if (typeof object.endClass !== \"object\")\n                throw TypeError(\".ClassRequest.endClass: object expected\");\n            message.endClass = $root.EndClassCommand.fromObject(object.endClass);\n        }\n        if (object.setHost != null) {\n            if (typeof object.setHost !== \"object\")\n                throw TypeError(\".ClassRequest.setHost: object expected\");\n            message.setHost = $root.SetHostCommand.fromObject(object.setHost);\n        }\n        if (object.setContent != null) {\n            if (typeof object.setContent !== \"object\")\n                throw TypeError(\".ClassRequest.setContent: object expected\");\n            message.setContent = $root.SetContentCommand.fromObject(object.setContent);\n        }\n        if (object.setActivityStreamId != null) {\n            if (typeof object.setActivityStreamId !== \"object\")\n                throw TypeError(\".ClassRequest.setActivityStreamId: object expected\");\n            message.setActivityStreamId = $root.SetActivityStreamIdCommand.fromObject(object.setActivityStreamId);\n        }\n        if (object.rewardTrophyToUser != null) {\n            if (typeof object.rewardTrophyToUser !== \"object\")\n                throw TypeError(\".ClassRequest.rewardTrophyToUser: object expected\");\n            message.rewardTrophyToUser = $root.RewardTrophyToUserCommand.fromObject(object.rewardTrophyToUser);\n        }\n        if (object.rewardTrophyToAll != null) {\n            if (typeof object.rewardTrophyToAll !== \"object\")\n                throw TypeError(\".ClassRequest.rewardTrophyToAll: object expected\");\n            message.rewardTrophyToAll = $root.RewardTrophyToAllCommand.fromObject(object.rewardTrophyToAll);\n        }\n        if (object.sendChatMessage != null) {\n            if (typeof object.sendChatMessage !== \"object\")\n                throw TypeError(\".ClassRequest.sendChatMessage: object expected\");\n            message.sendChatMessage = $root.SendChatMessageCommand.fromObject(object.sendChatMessage);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a ClassRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ClassRequest\n     * @static\n     * @param {ClassRequest} message ClassRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    ClassRequest.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.requestId = \"\";\n        if (message.requestId != null && message.hasOwnProperty(\"requestId\"))\n            object.requestId = message.requestId;\n        if (message.endClass != null && message.hasOwnProperty(\"endClass\")) {\n            object.endClass = $root.EndClassCommand.toObject(message.endClass, options);\n            if (options.oneofs)\n                object.command = \"endClass\";\n        }\n        if (message.setHost != null && message.hasOwnProperty(\"setHost\")) {\n            object.setHost = $root.SetHostCommand.toObject(message.setHost, options);\n            if (options.oneofs)\n                object.command = \"setHost\";\n        }\n        if (message.setContent != null && message.hasOwnProperty(\"setContent\")) {\n            object.setContent = $root.SetContentCommand.toObject(message.setContent, options);\n            if (options.oneofs)\n                object.command = \"setContent\";\n        }\n        if (message.setActivityStreamId != null && message.hasOwnProperty(\"setActivityStreamId\")) {\n            object.setActivityStreamId = $root.SetActivityStreamIdCommand.toObject(message.setActivityStreamId, options);\n            if (options.oneofs)\n                object.command = \"setActivityStreamId\";\n        }\n        if (message.rewardTrophyToUser != null && message.hasOwnProperty(\"rewardTrophyToUser\")) {\n            object.rewardTrophyToUser = $root.RewardTrophyToUserCommand.toObject(message.rewardTrophyToUser, options);\n            if (options.oneofs)\n                object.command = \"rewardTrophyToUser\";\n        }\n        if (message.rewardTrophyToAll != null && message.hasOwnProperty(\"rewardTrophyToAll\")) {\n            object.rewardTrophyToAll = $root.RewardTrophyToAllCommand.toObject(message.rewardTrophyToAll, options);\n            if (options.oneofs)\n                object.command = \"rewardTrophyToAll\";\n        }\n        if (message.sendChatMessage != null && message.hasOwnProperty(\"sendChatMessage\")) {\n            object.sendChatMessage = $root.SendChatMessageCommand.toObject(message.sendChatMessage, options);\n            if (options.oneofs)\n                object.command = \"sendChatMessage\";\n        }\n        return object;\n    };\n\n    /**\n     * Converts this ClassRequest to JSON.\n     * @function toJSON\n     * @memberof ClassRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    ClassRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ClassRequest;\n})();\n\n$root.ClassResponse = (function() {\n\n    /**\n     * Properties of a ClassResponse.\n     * @exports IClassResponse\n     * @interface IClassResponse\n     * @property {string|null} [id] ClassResponse id\n     * @property {string|null} [error] ClassResponse error\n     */\n\n    /**\n     * Constructs a new ClassResponse.\n     * @exports ClassResponse\n     * @classdesc Represents a ClassResponse.\n     * @implements IClassResponse\n     * @constructor\n     * @param {IClassResponse=} [properties] Properties to set\n     */\n    function ClassResponse(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * ClassResponse id.\n     * @member {string} id\n     * @memberof ClassResponse\n     * @instance\n     */\n    ClassResponse.prototype.id = \"\";\n\n    /**\n     * ClassResponse error.\n     * @member {string} error\n     * @memberof ClassResponse\n     * @instance\n     */\n    ClassResponse.prototype.error = \"\";\n\n    /**\n     * Creates a new ClassResponse instance using the specified properties.\n     * @function create\n     * @memberof ClassResponse\n     * @static\n     * @param {IClassResponse=} [properties] Properties to set\n     * @returns {ClassResponse} ClassResponse instance\n     */\n    ClassResponse.create = function create(properties) {\n        return new ClassResponse(properties);\n    };\n\n    /**\n     * Encodes the specified ClassResponse message. Does not implicitly {@link ClassResponse.verify|verify} messages.\n     * @function encode\n     * @memberof ClassResponse\n     * @static\n     * @param {IClassResponse} message ClassResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ClassResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.id != null && Object.hasOwnProperty.call(message, \"id\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);\n        if (message.error != null && Object.hasOwnProperty.call(message, \"error\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.error);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified ClassResponse message, length delimited. Does not implicitly {@link ClassResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ClassResponse\n     * @static\n     * @param {IClassResponse} message ClassResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ClassResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a ClassResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof ClassResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ClassResponse} ClassResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ClassResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ClassResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.id = reader.string();\n                break;\n            case 2:\n                message.error = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a ClassResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ClassResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ClassResponse} ClassResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ClassResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a ClassResponse message.\n     * @function verify\n     * @memberof ClassResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    ClassResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            if (!$util.isString(message.id))\n                return \"id: string expected\";\n        if (message.error != null && message.hasOwnProperty(\"error\"))\n            if (!$util.isString(message.error))\n                return \"error: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a ClassResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ClassResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ClassResponse} ClassResponse\n     */\n    ClassResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.ClassResponse)\n            return object;\n        var message = new $root.ClassResponse();\n        if (object.id != null)\n            message.id = String(object.id);\n        if (object.error != null)\n            message.error = String(object.error);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a ClassResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ClassResponse\n     * @static\n     * @param {ClassResponse} message ClassResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    ClassResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.id = \"\";\n            object.error = \"\";\n        }\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            object.id = message.id;\n        if (message.error != null && message.hasOwnProperty(\"error\"))\n            object.error = message.error;\n        return object;\n    };\n\n    /**\n     * Converts this ClassResponse to JSON.\n     * @function toJSON\n     * @memberof ClassResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    ClassResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ClassResponse;\n})();\n\n$root.ClassMessage = (function() {\n\n    /**\n     * Properties of a ClassMessage.\n     * @exports IClassMessage\n     * @interface IClassMessage\n     * @property {IClassResponse|null} [response] ClassMessage response\n     * @property {IJoinEvent|null} [joinEvent] ClassMessage joinEvent\n     * @property {IDeviceConnectedEvent|null} [deviceConnected] ClassMessage deviceConnected\n     * @property {IDeviceDisconnectedEvent|null} [deviceDisconnected] ClassMessage deviceDisconnected\n     * @property {IClassEndedEvent|null} [classEnded] ClassMessage classEnded\n     * @property {IHostChangedEvent|null} [hostChanged] ClassMessage hostChanged\n     * @property {IContentChangedEvent|null} [contentChanged] ClassMessage contentChanged\n     * @property {IActivityStreamIdChangedEvent|null} [activityStreamIdChanged] ClassMessage activityStreamIdChanged\n     * @property {ITrophyRewardedToUserEvent|null} [trophyRewardedToUser] ClassMessage trophyRewardedToUser\n     * @property {ITrophyRewardedToAllEvent|null} [trophyRewardedToAll] ClassMessage trophyRewardedToAll\n     * @property {INewChatMessageEvent|null} [newChatMessage] ClassMessage newChatMessage\n     */\n\n    /**\n     * Constructs a new ClassMessage.\n     * @exports ClassMessage\n     * @classdesc Represents a ClassMessage.\n     * @implements IClassMessage\n     * @constructor\n     * @param {IClassMessage=} [properties] Properties to set\n     */\n    function ClassMessage(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * ClassMessage response.\n     * @member {IClassResponse|null|undefined} response\n     * @memberof ClassMessage\n     * @instance\n     */\n    ClassMessage.prototype.response = null;\n\n    /**\n     * ClassMessage joinEvent.\n     * @member {IJoinEvent|null|undefined} joinEvent\n     * @memberof ClassMessage\n     * @instance\n     */\n    ClassMessage.prototype.joinEvent = null;\n\n    /**\n     * ClassMessage deviceConnected.\n     * @member {IDeviceConnectedEvent|null|undefined} deviceConnected\n     * @memberof ClassMessage\n     * @instance\n     */\n    ClassMessage.prototype.deviceConnected = null;\n\n    /**\n     * ClassMessage deviceDisconnected.\n     * @member {IDeviceDisconnectedEvent|null|undefined} deviceDisconnected\n     * @memberof ClassMessage\n     * @instance\n     */\n    ClassMessage.prototype.deviceDisconnected = null;\n\n    /**\n     * ClassMessage classEnded.\n     * @member {IClassEndedEvent|null|undefined} classEnded\n     * @memberof ClassMessage\n     * @instance\n     */\n    ClassMessage.prototype.classEnded = null;\n\n    /**\n     * ClassMessage hostChanged.\n     * @member {IHostChangedEvent|null|undefined} hostChanged\n     * @memberof ClassMessage\n     * @instance\n     */\n    ClassMessage.prototype.hostChanged = null;\n\n    /**\n     * ClassMessage contentChanged.\n     * @member {IContentChangedEvent|null|undefined} contentChanged\n     * @memberof ClassMessage\n     * @instance\n     */\n    ClassMessage.prototype.contentChanged = null;\n\n    /**\n     * ClassMessage activityStreamIdChanged.\n     * @member {IActivityStreamIdChangedEvent|null|undefined} activityStreamIdChanged\n     * @memberof ClassMessage\n     * @instance\n     */\n    ClassMessage.prototype.activityStreamIdChanged = null;\n\n    /**\n     * ClassMessage trophyRewardedToUser.\n     * @member {ITrophyRewardedToUserEvent|null|undefined} trophyRewardedToUser\n     * @memberof ClassMessage\n     * @instance\n     */\n    ClassMessage.prototype.trophyRewardedToUser = null;\n\n    /**\n     * ClassMessage trophyRewardedToAll.\n     * @member {ITrophyRewardedToAllEvent|null|undefined} trophyRewardedToAll\n     * @memberof ClassMessage\n     * @instance\n     */\n    ClassMessage.prototype.trophyRewardedToAll = null;\n\n    /**\n     * ClassMessage newChatMessage.\n     * @member {INewChatMessageEvent|null|undefined} newChatMessage\n     * @memberof ClassMessage\n     * @instance\n     */\n    ClassMessage.prototype.newChatMessage = null;\n\n    // OneOf field names bound to virtual getters and setters\n    var $oneOfFields;\n\n    /**\n     * ClassMessage event.\n     * @member {\"joinEvent\"|\"deviceConnected\"|\"deviceDisconnected\"|\"classEnded\"|\"hostChanged\"|\"contentChanged\"|\"activityStreamIdChanged\"|\"trophyRewardedToUser\"|\"trophyRewardedToAll\"|\"newChatMessage\"|undefined} event\n     * @memberof ClassMessage\n     * @instance\n     */\n    Object.defineProperty(ClassMessage.prototype, \"event\", {\n        get: $util.oneOfGetter($oneOfFields = [\"joinEvent\", \"deviceConnected\", \"deviceDisconnected\", \"classEnded\", \"hostChanged\", \"contentChanged\", \"activityStreamIdChanged\", \"trophyRewardedToUser\", \"trophyRewardedToAll\", \"newChatMessage\"]),\n        set: $util.oneOfSetter($oneOfFields)\n    });\n\n    /**\n     * Creates a new ClassMessage instance using the specified properties.\n     * @function create\n     * @memberof ClassMessage\n     * @static\n     * @param {IClassMessage=} [properties] Properties to set\n     * @returns {ClassMessage} ClassMessage instance\n     */\n    ClassMessage.create = function create(properties) {\n        return new ClassMessage(properties);\n    };\n\n    /**\n     * Encodes the specified ClassMessage message. Does not implicitly {@link ClassMessage.verify|verify} messages.\n     * @function encode\n     * @memberof ClassMessage\n     * @static\n     * @param {IClassMessage} message ClassMessage message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ClassMessage.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.response != null && Object.hasOwnProperty.call(message, \"response\"))\n            $root.ClassResponse.encode(message.response, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        if (message.joinEvent != null && Object.hasOwnProperty.call(message, \"joinEvent\"))\n            $root.JoinEvent.encode(message.joinEvent, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n        if (message.deviceConnected != null && Object.hasOwnProperty.call(message, \"deviceConnected\"))\n            $root.DeviceConnectedEvent.encode(message.deviceConnected, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n        if (message.deviceDisconnected != null && Object.hasOwnProperty.call(message, \"deviceDisconnected\"))\n            $root.DeviceDisconnectedEvent.encode(message.deviceDisconnected, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n        if (message.classEnded != null && Object.hasOwnProperty.call(message, \"classEnded\"))\n            $root.ClassEndedEvent.encode(message.classEnded, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n        if (message.hostChanged != null && Object.hasOwnProperty.call(message, \"hostChanged\"))\n            $root.HostChangedEvent.encode(message.hostChanged, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n        if (message.contentChanged != null && Object.hasOwnProperty.call(message, \"contentChanged\"))\n            $root.ContentChangedEvent.encode(message.contentChanged, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n        if (message.activityStreamIdChanged != null && Object.hasOwnProperty.call(message, \"activityStreamIdChanged\"))\n            $root.ActivityStreamIdChangedEvent.encode(message.activityStreamIdChanged, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();\n        if (message.trophyRewardedToUser != null && Object.hasOwnProperty.call(message, \"trophyRewardedToUser\"))\n            $root.TrophyRewardedToUserEvent.encode(message.trophyRewardedToUser, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n        if (message.trophyRewardedToAll != null && Object.hasOwnProperty.call(message, \"trophyRewardedToAll\"))\n            $root.TrophyRewardedToAllEvent.encode(message.trophyRewardedToAll, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n        if (message.newChatMessage != null && Object.hasOwnProperty.call(message, \"newChatMessage\"))\n            $root.NewChatMessageEvent.encode(message.newChatMessage, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified ClassMessage message, length delimited. Does not implicitly {@link ClassMessage.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ClassMessage\n     * @static\n     * @param {IClassMessage} message ClassMessage message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ClassMessage.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a ClassMessage message from the specified reader or buffer.\n     * @function decode\n     * @memberof ClassMessage\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ClassMessage} ClassMessage\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ClassMessage.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ClassMessage();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.response = $root.ClassResponse.decode(reader, reader.uint32());\n                break;\n            case 3:\n                message.joinEvent = $root.JoinEvent.decode(reader, reader.uint32());\n                break;\n            case 4:\n                message.deviceConnected = $root.DeviceConnectedEvent.decode(reader, reader.uint32());\n                break;\n            case 5:\n                message.deviceDisconnected = $root.DeviceDisconnectedEvent.decode(reader, reader.uint32());\n                break;\n            case 6:\n                message.classEnded = $root.ClassEndedEvent.decode(reader, reader.uint32());\n                break;\n            case 7:\n                message.hostChanged = $root.HostChangedEvent.decode(reader, reader.uint32());\n                break;\n            case 8:\n                message.contentChanged = $root.ContentChangedEvent.decode(reader, reader.uint32());\n                break;\n            case 9:\n                message.activityStreamIdChanged = $root.ActivityStreamIdChangedEvent.decode(reader, reader.uint32());\n                break;\n            case 10:\n                message.trophyRewardedToUser = $root.TrophyRewardedToUserEvent.decode(reader, reader.uint32());\n                break;\n            case 11:\n                message.trophyRewardedToAll = $root.TrophyRewardedToAllEvent.decode(reader, reader.uint32());\n                break;\n            case 12:\n                message.newChatMessage = $root.NewChatMessageEvent.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a ClassMessage message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ClassMessage\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ClassMessage} ClassMessage\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ClassMessage.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a ClassMessage message.\n     * @function verify\n     * @memberof ClassMessage\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    ClassMessage.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        var properties = {};\n        if (message.response != null && message.hasOwnProperty(\"response\")) {\n            var error = $root.ClassResponse.verify(message.response);\n            if (error)\n                return \"response.\" + error;\n        }\n        if (message.joinEvent != null && message.hasOwnProperty(\"joinEvent\")) {\n            properties.event = 1;\n            {\n                var error = $root.JoinEvent.verify(message.joinEvent);\n                if (error)\n                    return \"joinEvent.\" + error;\n            }\n        }\n        if (message.deviceConnected != null && message.hasOwnProperty(\"deviceConnected\")) {\n            if (properties.event === 1)\n                return \"event: multiple values\";\n            properties.event = 1;\n            {\n                var error = $root.DeviceConnectedEvent.verify(message.deviceConnected);\n                if (error)\n                    return \"deviceConnected.\" + error;\n            }\n        }\n        if (message.deviceDisconnected != null && message.hasOwnProperty(\"deviceDisconnected\")) {\n            if (properties.event === 1)\n                return \"event: multiple values\";\n            properties.event = 1;\n            {\n                var error = $root.DeviceDisconnectedEvent.verify(message.deviceDisconnected);\n                if (error)\n                    return \"deviceDisconnected.\" + error;\n            }\n        }\n        if (message.classEnded != null && message.hasOwnProperty(\"classEnded\")) {\n            if (properties.event === 1)\n                return \"event: multiple values\";\n            properties.event = 1;\n            {\n                var error = $root.ClassEndedEvent.verify(message.classEnded);\n                if (error)\n                    return \"classEnded.\" + error;\n            }\n        }\n        if (message.hostChanged != null && message.hasOwnProperty(\"hostChanged\")) {\n            if (properties.event === 1)\n                return \"event: multiple values\";\n            properties.event = 1;\n            {\n                var error = $root.HostChangedEvent.verify(message.hostChanged);\n                if (error)\n                    return \"hostChanged.\" + error;\n            }\n        }\n        if (message.contentChanged != null && message.hasOwnProperty(\"contentChanged\")) {\n            if (properties.event === 1)\n                return \"event: multiple values\";\n            properties.event = 1;\n            {\n                var error = $root.ContentChangedEvent.verify(message.contentChanged);\n                if (error)\n                    return \"contentChanged.\" + error;\n            }\n        }\n        if (message.activityStreamIdChanged != null && message.hasOwnProperty(\"activityStreamIdChanged\")) {\n            if (properties.event === 1)\n                return \"event: multiple values\";\n            properties.event = 1;\n            {\n                var error = $root.ActivityStreamIdChangedEvent.verify(message.activityStreamIdChanged);\n                if (error)\n                    return \"activityStreamIdChanged.\" + error;\n            }\n        }\n        if (message.trophyRewardedToUser != null && message.hasOwnProperty(\"trophyRewardedToUser\")) {\n            if (properties.event === 1)\n                return \"event: multiple values\";\n            properties.event = 1;\n            {\n                var error = $root.TrophyRewardedToUserEvent.verify(message.trophyRewardedToUser);\n                if (error)\n                    return \"trophyRewardedToUser.\" + error;\n            }\n        }\n        if (message.trophyRewardedToAll != null && message.hasOwnProperty(\"trophyRewardedToAll\")) {\n            if (properties.event === 1)\n                return \"event: multiple values\";\n            properties.event = 1;\n            {\n                var error = $root.TrophyRewardedToAllEvent.verify(message.trophyRewardedToAll);\n                if (error)\n                    return \"trophyRewardedToAll.\" + error;\n            }\n        }\n        if (message.newChatMessage != null && message.hasOwnProperty(\"newChatMessage\")) {\n            if (properties.event === 1)\n                return \"event: multiple values\";\n            properties.event = 1;\n            {\n                var error = $root.NewChatMessageEvent.verify(message.newChatMessage);\n                if (error)\n                    return \"newChatMessage.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a ClassMessage message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ClassMessage\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ClassMessage} ClassMessage\n     */\n    ClassMessage.fromObject = function fromObject(object) {\n        if (object instanceof $root.ClassMessage)\n            return object;\n        var message = new $root.ClassMessage();\n        if (object.response != null) {\n            if (typeof object.response !== \"object\")\n                throw TypeError(\".ClassMessage.response: object expected\");\n            message.response = $root.ClassResponse.fromObject(object.response);\n        }\n        if (object.joinEvent != null) {\n            if (typeof object.joinEvent !== \"object\")\n                throw TypeError(\".ClassMessage.joinEvent: object expected\");\n            message.joinEvent = $root.JoinEvent.fromObject(object.joinEvent);\n        }\n        if (object.deviceConnected != null) {\n            if (typeof object.deviceConnected !== \"object\")\n                throw TypeError(\".ClassMessage.deviceConnected: object expected\");\n            message.deviceConnected = $root.DeviceConnectedEvent.fromObject(object.deviceConnected);\n        }\n        if (object.deviceDisconnected != null) {\n            if (typeof object.deviceDisconnected !== \"object\")\n                throw TypeError(\".ClassMessage.deviceDisconnected: object expected\");\n            message.deviceDisconnected = $root.DeviceDisconnectedEvent.fromObject(object.deviceDisconnected);\n        }\n        if (object.classEnded != null) {\n            if (typeof object.classEnded !== \"object\")\n                throw TypeError(\".ClassMessage.classEnded: object expected\");\n            message.classEnded = $root.ClassEndedEvent.fromObject(object.classEnded);\n        }\n        if (object.hostChanged != null) {\n            if (typeof object.hostChanged !== \"object\")\n                throw TypeError(\".ClassMessage.hostChanged: object expected\");\n            message.hostChanged = $root.HostChangedEvent.fromObject(object.hostChanged);\n        }\n        if (object.contentChanged != null) {\n            if (typeof object.contentChanged !== \"object\")\n                throw TypeError(\".ClassMessage.contentChanged: object expected\");\n            message.contentChanged = $root.ContentChangedEvent.fromObject(object.contentChanged);\n        }\n        if (object.activityStreamIdChanged != null) {\n            if (typeof object.activityStreamIdChanged !== \"object\")\n                throw TypeError(\".ClassMessage.activityStreamIdChanged: object expected\");\n            message.activityStreamIdChanged = $root.ActivityStreamIdChangedEvent.fromObject(object.activityStreamIdChanged);\n        }\n        if (object.trophyRewardedToUser != null) {\n            if (typeof object.trophyRewardedToUser !== \"object\")\n                throw TypeError(\".ClassMessage.trophyRewardedToUser: object expected\");\n            message.trophyRewardedToUser = $root.TrophyRewardedToUserEvent.fromObject(object.trophyRewardedToUser);\n        }\n        if (object.trophyRewardedToAll != null) {\n            if (typeof object.trophyRewardedToAll !== \"object\")\n                throw TypeError(\".ClassMessage.trophyRewardedToAll: object expected\");\n            message.trophyRewardedToAll = $root.TrophyRewardedToAllEvent.fromObject(object.trophyRewardedToAll);\n        }\n        if (object.newChatMessage != null) {\n            if (typeof object.newChatMessage !== \"object\")\n                throw TypeError(\".ClassMessage.newChatMessage: object expected\");\n            message.newChatMessage = $root.NewChatMessageEvent.fromObject(object.newChatMessage);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a ClassMessage message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ClassMessage\n     * @static\n     * @param {ClassMessage} message ClassMessage\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    ClassMessage.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.response = null;\n        if (message.response != null && message.hasOwnProperty(\"response\"))\n            object.response = $root.ClassResponse.toObject(message.response, options);\n        if (message.joinEvent != null && message.hasOwnProperty(\"joinEvent\")) {\n            object.joinEvent = $root.JoinEvent.toObject(message.joinEvent, options);\n            if (options.oneofs)\n                object.event = \"joinEvent\";\n        }\n        if (message.deviceConnected != null && message.hasOwnProperty(\"deviceConnected\")) {\n            object.deviceConnected = $root.DeviceConnectedEvent.toObject(message.deviceConnected, options);\n            if (options.oneofs)\n                object.event = \"deviceConnected\";\n        }\n        if (message.deviceDisconnected != null && message.hasOwnProperty(\"deviceDisconnected\")) {\n            object.deviceDisconnected = $root.DeviceDisconnectedEvent.toObject(message.deviceDisconnected, options);\n            if (options.oneofs)\n                object.event = \"deviceDisconnected\";\n        }\n        if (message.classEnded != null && message.hasOwnProperty(\"classEnded\")) {\n            object.classEnded = $root.ClassEndedEvent.toObject(message.classEnded, options);\n            if (options.oneofs)\n                object.event = \"classEnded\";\n        }\n        if (message.hostChanged != null && message.hasOwnProperty(\"hostChanged\")) {\n            object.hostChanged = $root.HostChangedEvent.toObject(message.hostChanged, options);\n            if (options.oneofs)\n                object.event = \"hostChanged\";\n        }\n        if (message.contentChanged != null && message.hasOwnProperty(\"contentChanged\")) {\n            object.contentChanged = $root.ContentChangedEvent.toObject(message.contentChanged, options);\n            if (options.oneofs)\n                object.event = \"contentChanged\";\n        }\n        if (message.activityStreamIdChanged != null && message.hasOwnProperty(\"activityStreamIdChanged\")) {\n            object.activityStreamIdChanged = $root.ActivityStreamIdChangedEvent.toObject(message.activityStreamIdChanged, options);\n            if (options.oneofs)\n                object.event = \"activityStreamIdChanged\";\n        }\n        if (message.trophyRewardedToUser != null && message.hasOwnProperty(\"trophyRewardedToUser\")) {\n            object.trophyRewardedToUser = $root.TrophyRewardedToUserEvent.toObject(message.trophyRewardedToUser, options);\n            if (options.oneofs)\n                object.event = \"trophyRewardedToUser\";\n        }\n        if (message.trophyRewardedToAll != null && message.hasOwnProperty(\"trophyRewardedToAll\")) {\n            object.trophyRewardedToAll = $root.TrophyRewardedToAllEvent.toObject(message.trophyRewardedToAll, options);\n            if (options.oneofs)\n                object.event = \"trophyRewardedToAll\";\n        }\n        if (message.newChatMessage != null && message.hasOwnProperty(\"newChatMessage\")) {\n            object.newChatMessage = $root.NewChatMessageEvent.toObject(message.newChatMessage, options);\n            if (options.oneofs)\n                object.event = \"newChatMessage\";\n        }\n        return object;\n    };\n\n    /**\n     * Converts this ClassMessage to JSON.\n     * @function toJSON\n     * @memberof ClassMessage\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    ClassMessage.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ClassMessage;\n})();\n\n$root.EndClassCommand = (function() {\n\n    /**\n     * Properties of an EndClassCommand.\n     * @exports IEndClassCommand\n     * @interface IEndClassCommand\n     */\n\n    /**\n     * Constructs a new EndClassCommand.\n     * @exports EndClassCommand\n     * @classdesc Represents an EndClassCommand.\n     * @implements IEndClassCommand\n     * @constructor\n     * @param {IEndClassCommand=} [properties] Properties to set\n     */\n    function EndClassCommand(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Creates a new EndClassCommand instance using the specified properties.\n     * @function create\n     * @memberof EndClassCommand\n     * @static\n     * @param {IEndClassCommand=} [properties] Properties to set\n     * @returns {EndClassCommand} EndClassCommand instance\n     */\n    EndClassCommand.create = function create(properties) {\n        return new EndClassCommand(properties);\n    };\n\n    /**\n     * Encodes the specified EndClassCommand message. Does not implicitly {@link EndClassCommand.verify|verify} messages.\n     * @function encode\n     * @memberof EndClassCommand\n     * @static\n     * @param {IEndClassCommand} message EndClassCommand message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    EndClassCommand.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified EndClassCommand message, length delimited. Does not implicitly {@link EndClassCommand.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof EndClassCommand\n     * @static\n     * @param {IEndClassCommand} message EndClassCommand message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    EndClassCommand.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an EndClassCommand message from the specified reader or buffer.\n     * @function decode\n     * @memberof EndClassCommand\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {EndClassCommand} EndClassCommand\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    EndClassCommand.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.EndClassCommand();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes an EndClassCommand message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof EndClassCommand\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {EndClassCommand} EndClassCommand\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    EndClassCommand.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an EndClassCommand message.\n     * @function verify\n     * @memberof EndClassCommand\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    EndClassCommand.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        return null;\n    };\n\n    /**\n     * Creates an EndClassCommand message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof EndClassCommand\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {EndClassCommand} EndClassCommand\n     */\n    EndClassCommand.fromObject = function fromObject(object) {\n        if (object instanceof $root.EndClassCommand)\n            return object;\n        return new $root.EndClassCommand();\n    };\n\n    /**\n     * Creates a plain object from an EndClassCommand message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof EndClassCommand\n     * @static\n     * @param {EndClassCommand} message EndClassCommand\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    EndClassCommand.toObject = function toObject() {\n        return {};\n    };\n\n    /**\n     * Converts this EndClassCommand to JSON.\n     * @function toJSON\n     * @memberof EndClassCommand\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    EndClassCommand.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return EndClassCommand;\n})();\n\n$root.SetHostCommand = (function() {\n\n    /**\n     * Properties of a SetHostCommand.\n     * @exports ISetHostCommand\n     * @interface ISetHostCommand\n     * @property {string|null} [hostDeviceId] SetHostCommand hostDeviceId\n     */\n\n    /**\n     * Constructs a new SetHostCommand.\n     * @exports SetHostCommand\n     * @classdesc Represents a SetHostCommand.\n     * @implements ISetHostCommand\n     * @constructor\n     * @param {ISetHostCommand=} [properties] Properties to set\n     */\n    function SetHostCommand(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SetHostCommand hostDeviceId.\n     * @member {string} hostDeviceId\n     * @memberof SetHostCommand\n     * @instance\n     */\n    SetHostCommand.prototype.hostDeviceId = \"\";\n\n    /**\n     * Creates a new SetHostCommand instance using the specified properties.\n     * @function create\n     * @memberof SetHostCommand\n     * @static\n     * @param {ISetHostCommand=} [properties] Properties to set\n     * @returns {SetHostCommand} SetHostCommand instance\n     */\n    SetHostCommand.create = function create(properties) {\n        return new SetHostCommand(properties);\n    };\n\n    /**\n     * Encodes the specified SetHostCommand message. Does not implicitly {@link SetHostCommand.verify|verify} messages.\n     * @function encode\n     * @memberof SetHostCommand\n     * @static\n     * @param {ISetHostCommand} message SetHostCommand message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SetHostCommand.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.hostDeviceId != null && Object.hasOwnProperty.call(message, \"hostDeviceId\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.hostDeviceId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SetHostCommand message, length delimited. Does not implicitly {@link SetHostCommand.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SetHostCommand\n     * @static\n     * @param {ISetHostCommand} message SetHostCommand message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SetHostCommand.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SetHostCommand message from the specified reader or buffer.\n     * @function decode\n     * @memberof SetHostCommand\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SetHostCommand} SetHostCommand\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SetHostCommand.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SetHostCommand();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.hostDeviceId = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SetHostCommand message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SetHostCommand\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SetHostCommand} SetHostCommand\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SetHostCommand.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SetHostCommand message.\n     * @function verify\n     * @memberof SetHostCommand\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SetHostCommand.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.hostDeviceId != null && message.hasOwnProperty(\"hostDeviceId\"))\n            if (!$util.isString(message.hostDeviceId))\n                return \"hostDeviceId: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SetHostCommand message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SetHostCommand\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SetHostCommand} SetHostCommand\n     */\n    SetHostCommand.fromObject = function fromObject(object) {\n        if (object instanceof $root.SetHostCommand)\n            return object;\n        var message = new $root.SetHostCommand();\n        if (object.hostDeviceId != null)\n            message.hostDeviceId = String(object.hostDeviceId);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SetHostCommand message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SetHostCommand\n     * @static\n     * @param {SetHostCommand} message SetHostCommand\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SetHostCommand.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.hostDeviceId = \"\";\n        if (message.hostDeviceId != null && message.hasOwnProperty(\"hostDeviceId\"))\n            object.hostDeviceId = message.hostDeviceId;\n        return object;\n    };\n\n    /**\n     * Converts this SetHostCommand to JSON.\n     * @function toJSON\n     * @memberof SetHostCommand\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SetHostCommand.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SetHostCommand;\n})();\n\n$root.SetContentCommand = (function() {\n\n    /**\n     * Properties of a SetContentCommand.\n     * @exports ISetContentCommand\n     * @interface ISetContentCommand\n     * @property {IContent|null} [content] SetContentCommand content\n     */\n\n    /**\n     * Constructs a new SetContentCommand.\n     * @exports SetContentCommand\n     * @classdesc Represents a SetContentCommand.\n     * @implements ISetContentCommand\n     * @constructor\n     * @param {ISetContentCommand=} [properties] Properties to set\n     */\n    function SetContentCommand(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SetContentCommand content.\n     * @member {IContent|null|undefined} content\n     * @memberof SetContentCommand\n     * @instance\n     */\n    SetContentCommand.prototype.content = null;\n\n    /**\n     * Creates a new SetContentCommand instance using the specified properties.\n     * @function create\n     * @memberof SetContentCommand\n     * @static\n     * @param {ISetContentCommand=} [properties] Properties to set\n     * @returns {SetContentCommand} SetContentCommand instance\n     */\n    SetContentCommand.create = function create(properties) {\n        return new SetContentCommand(properties);\n    };\n\n    /**\n     * Encodes the specified SetContentCommand message. Does not implicitly {@link SetContentCommand.verify|verify} messages.\n     * @function encode\n     * @memberof SetContentCommand\n     * @static\n     * @param {ISetContentCommand} message SetContentCommand message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SetContentCommand.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.content != null && Object.hasOwnProperty.call(message, \"content\"))\n            $root.Content.encode(message.content, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SetContentCommand message, length delimited. Does not implicitly {@link SetContentCommand.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SetContentCommand\n     * @static\n     * @param {ISetContentCommand} message SetContentCommand message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SetContentCommand.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SetContentCommand message from the specified reader or buffer.\n     * @function decode\n     * @memberof SetContentCommand\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SetContentCommand} SetContentCommand\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SetContentCommand.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SetContentCommand();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.content = $root.Content.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SetContentCommand message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SetContentCommand\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SetContentCommand} SetContentCommand\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SetContentCommand.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SetContentCommand message.\n     * @function verify\n     * @memberof SetContentCommand\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SetContentCommand.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.content != null && message.hasOwnProperty(\"content\")) {\n            var error = $root.Content.verify(message.content);\n            if (error)\n                return \"content.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SetContentCommand message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SetContentCommand\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SetContentCommand} SetContentCommand\n     */\n    SetContentCommand.fromObject = function fromObject(object) {\n        if (object instanceof $root.SetContentCommand)\n            return object;\n        var message = new $root.SetContentCommand();\n        if (object.content != null) {\n            if (typeof object.content !== \"object\")\n                throw TypeError(\".SetContentCommand.content: object expected\");\n            message.content = $root.Content.fromObject(object.content);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SetContentCommand message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SetContentCommand\n     * @static\n     * @param {SetContentCommand} message SetContentCommand\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SetContentCommand.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.content = null;\n        if (message.content != null && message.hasOwnProperty(\"content\"))\n            object.content = $root.Content.toObject(message.content, options);\n        return object;\n    };\n\n    /**\n     * Converts this SetContentCommand to JSON.\n     * @function toJSON\n     * @memberof SetContentCommand\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SetContentCommand.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SetContentCommand;\n})();\n\n$root.SetActivityStreamIdCommand = (function() {\n\n    /**\n     * Properties of a SetActivityStreamIdCommand.\n     * @exports ISetActivityStreamIdCommand\n     * @interface ISetActivityStreamIdCommand\n     * @property {string|null} [activityStreamId] SetActivityStreamIdCommand activityStreamId\n     */\n\n    /**\n     * Constructs a new SetActivityStreamIdCommand.\n     * @exports SetActivityStreamIdCommand\n     * @classdesc Represents a SetActivityStreamIdCommand.\n     * @implements ISetActivityStreamIdCommand\n     * @constructor\n     * @param {ISetActivityStreamIdCommand=} [properties] Properties to set\n     */\n    function SetActivityStreamIdCommand(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SetActivityStreamIdCommand activityStreamId.\n     * @member {string} activityStreamId\n     * @memberof SetActivityStreamIdCommand\n     * @instance\n     */\n    SetActivityStreamIdCommand.prototype.activityStreamId = \"\";\n\n    /**\n     * Creates a new SetActivityStreamIdCommand instance using the specified properties.\n     * @function create\n     * @memberof SetActivityStreamIdCommand\n     * @static\n     * @param {ISetActivityStreamIdCommand=} [properties] Properties to set\n     * @returns {SetActivityStreamIdCommand} SetActivityStreamIdCommand instance\n     */\n    SetActivityStreamIdCommand.create = function create(properties) {\n        return new SetActivityStreamIdCommand(properties);\n    };\n\n    /**\n     * Encodes the specified SetActivityStreamIdCommand message. Does not implicitly {@link SetActivityStreamIdCommand.verify|verify} messages.\n     * @function encode\n     * @memberof SetActivityStreamIdCommand\n     * @static\n     * @param {ISetActivityStreamIdCommand} message SetActivityStreamIdCommand message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SetActivityStreamIdCommand.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.activityStreamId != null && Object.hasOwnProperty.call(message, \"activityStreamId\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.activityStreamId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SetActivityStreamIdCommand message, length delimited. Does not implicitly {@link SetActivityStreamIdCommand.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SetActivityStreamIdCommand\n     * @static\n     * @param {ISetActivityStreamIdCommand} message SetActivityStreamIdCommand message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SetActivityStreamIdCommand.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SetActivityStreamIdCommand message from the specified reader or buffer.\n     * @function decode\n     * @memberof SetActivityStreamIdCommand\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SetActivityStreamIdCommand} SetActivityStreamIdCommand\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SetActivityStreamIdCommand.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SetActivityStreamIdCommand();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.activityStreamId = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SetActivityStreamIdCommand message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SetActivityStreamIdCommand\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SetActivityStreamIdCommand} SetActivityStreamIdCommand\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SetActivityStreamIdCommand.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SetActivityStreamIdCommand message.\n     * @function verify\n     * @memberof SetActivityStreamIdCommand\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SetActivityStreamIdCommand.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.activityStreamId != null && message.hasOwnProperty(\"activityStreamId\"))\n            if (!$util.isString(message.activityStreamId))\n                return \"activityStreamId: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SetActivityStreamIdCommand message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SetActivityStreamIdCommand\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SetActivityStreamIdCommand} SetActivityStreamIdCommand\n     */\n    SetActivityStreamIdCommand.fromObject = function fromObject(object) {\n        if (object instanceof $root.SetActivityStreamIdCommand)\n            return object;\n        var message = new $root.SetActivityStreamIdCommand();\n        if (object.activityStreamId != null)\n            message.activityStreamId = String(object.activityStreamId);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SetActivityStreamIdCommand message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SetActivityStreamIdCommand\n     * @static\n     * @param {SetActivityStreamIdCommand} message SetActivityStreamIdCommand\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SetActivityStreamIdCommand.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.activityStreamId = \"\";\n        if (message.activityStreamId != null && message.hasOwnProperty(\"activityStreamId\"))\n            object.activityStreamId = message.activityStreamId;\n        return object;\n    };\n\n    /**\n     * Converts this SetActivityStreamIdCommand to JSON.\n     * @function toJSON\n     * @memberof SetActivityStreamIdCommand\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SetActivityStreamIdCommand.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SetActivityStreamIdCommand;\n})();\n\n$root.RewardTrophyToUserCommand = (function() {\n\n    /**\n     * Properties of a RewardTrophyToUserCommand.\n     * @exports IRewardTrophyToUserCommand\n     * @interface IRewardTrophyToUserCommand\n     * @property {string|null} [trophyType] RewardTrophyToUserCommand trophyType\n     * @property {string|null} [toUserId] RewardTrophyToUserCommand toUserId\n     */\n\n    /**\n     * Constructs a new RewardTrophyToUserCommand.\n     * @exports RewardTrophyToUserCommand\n     * @classdesc Represents a RewardTrophyToUserCommand.\n     * @implements IRewardTrophyToUserCommand\n     * @constructor\n     * @param {IRewardTrophyToUserCommand=} [properties] Properties to set\n     */\n    function RewardTrophyToUserCommand(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * RewardTrophyToUserCommand trophyType.\n     * @member {string} trophyType\n     * @memberof RewardTrophyToUserCommand\n     * @instance\n     */\n    RewardTrophyToUserCommand.prototype.trophyType = \"\";\n\n    /**\n     * RewardTrophyToUserCommand toUserId.\n     * @member {string} toUserId\n     * @memberof RewardTrophyToUserCommand\n     * @instance\n     */\n    RewardTrophyToUserCommand.prototype.toUserId = \"\";\n\n    /**\n     * Creates a new RewardTrophyToUserCommand instance using the specified properties.\n     * @function create\n     * @memberof RewardTrophyToUserCommand\n     * @static\n     * @param {IRewardTrophyToUserCommand=} [properties] Properties to set\n     * @returns {RewardTrophyToUserCommand} RewardTrophyToUserCommand instance\n     */\n    RewardTrophyToUserCommand.create = function create(properties) {\n        return new RewardTrophyToUserCommand(properties);\n    };\n\n    /**\n     * Encodes the specified RewardTrophyToUserCommand message. Does not implicitly {@link RewardTrophyToUserCommand.verify|verify} messages.\n     * @function encode\n     * @memberof RewardTrophyToUserCommand\n     * @static\n     * @param {IRewardTrophyToUserCommand} message RewardTrophyToUserCommand message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    RewardTrophyToUserCommand.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.trophyType != null && Object.hasOwnProperty.call(message, \"trophyType\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.trophyType);\n        if (message.toUserId != null && Object.hasOwnProperty.call(message, \"toUserId\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.toUserId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified RewardTrophyToUserCommand message, length delimited. Does not implicitly {@link RewardTrophyToUserCommand.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof RewardTrophyToUserCommand\n     * @static\n     * @param {IRewardTrophyToUserCommand} message RewardTrophyToUserCommand message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    RewardTrophyToUserCommand.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a RewardTrophyToUserCommand message from the specified reader or buffer.\n     * @function decode\n     * @memberof RewardTrophyToUserCommand\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {RewardTrophyToUserCommand} RewardTrophyToUserCommand\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    RewardTrophyToUserCommand.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.RewardTrophyToUserCommand();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.trophyType = reader.string();\n                break;\n            case 2:\n                message.toUserId = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a RewardTrophyToUserCommand message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof RewardTrophyToUserCommand\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {RewardTrophyToUserCommand} RewardTrophyToUserCommand\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    RewardTrophyToUserCommand.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a RewardTrophyToUserCommand message.\n     * @function verify\n     * @memberof RewardTrophyToUserCommand\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    RewardTrophyToUserCommand.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.trophyType != null && message.hasOwnProperty(\"trophyType\"))\n            if (!$util.isString(message.trophyType))\n                return \"trophyType: string expected\";\n        if (message.toUserId != null && message.hasOwnProperty(\"toUserId\"))\n            if (!$util.isString(message.toUserId))\n                return \"toUserId: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a RewardTrophyToUserCommand message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof RewardTrophyToUserCommand\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {RewardTrophyToUserCommand} RewardTrophyToUserCommand\n     */\n    RewardTrophyToUserCommand.fromObject = function fromObject(object) {\n        if (object instanceof $root.RewardTrophyToUserCommand)\n            return object;\n        var message = new $root.RewardTrophyToUserCommand();\n        if (object.trophyType != null)\n            message.trophyType = String(object.trophyType);\n        if (object.toUserId != null)\n            message.toUserId = String(object.toUserId);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a RewardTrophyToUserCommand message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof RewardTrophyToUserCommand\n     * @static\n     * @param {RewardTrophyToUserCommand} message RewardTrophyToUserCommand\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    RewardTrophyToUserCommand.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.trophyType = \"\";\n            object.toUserId = \"\";\n        }\n        if (message.trophyType != null && message.hasOwnProperty(\"trophyType\"))\n            object.trophyType = message.trophyType;\n        if (message.toUserId != null && message.hasOwnProperty(\"toUserId\"))\n            object.toUserId = message.toUserId;\n        return object;\n    };\n\n    /**\n     * Converts this RewardTrophyToUserCommand to JSON.\n     * @function toJSON\n     * @memberof RewardTrophyToUserCommand\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    RewardTrophyToUserCommand.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return RewardTrophyToUserCommand;\n})();\n\n$root.RewardTrophyToAllCommand = (function() {\n\n    /**\n     * Properties of a RewardTrophyToAllCommand.\n     * @exports IRewardTrophyToAllCommand\n     * @interface IRewardTrophyToAllCommand\n     * @property {string|null} [trophyType] RewardTrophyToAllCommand trophyType\n     */\n\n    /**\n     * Constructs a new RewardTrophyToAllCommand.\n     * @exports RewardTrophyToAllCommand\n     * @classdesc Represents a RewardTrophyToAllCommand.\n     * @implements IRewardTrophyToAllCommand\n     * @constructor\n     * @param {IRewardTrophyToAllCommand=} [properties] Properties to set\n     */\n    function RewardTrophyToAllCommand(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * RewardTrophyToAllCommand trophyType.\n     * @member {string} trophyType\n     * @memberof RewardTrophyToAllCommand\n     * @instance\n     */\n    RewardTrophyToAllCommand.prototype.trophyType = \"\";\n\n    /**\n     * Creates a new RewardTrophyToAllCommand instance using the specified properties.\n     * @function create\n     * @memberof RewardTrophyToAllCommand\n     * @static\n     * @param {IRewardTrophyToAllCommand=} [properties] Properties to set\n     * @returns {RewardTrophyToAllCommand} RewardTrophyToAllCommand instance\n     */\n    RewardTrophyToAllCommand.create = function create(properties) {\n        return new RewardTrophyToAllCommand(properties);\n    };\n\n    /**\n     * Encodes the specified RewardTrophyToAllCommand message. Does not implicitly {@link RewardTrophyToAllCommand.verify|verify} messages.\n     * @function encode\n     * @memberof RewardTrophyToAllCommand\n     * @static\n     * @param {IRewardTrophyToAllCommand} message RewardTrophyToAllCommand message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    RewardTrophyToAllCommand.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.trophyType != null && Object.hasOwnProperty.call(message, \"trophyType\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.trophyType);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified RewardTrophyToAllCommand message, length delimited. Does not implicitly {@link RewardTrophyToAllCommand.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof RewardTrophyToAllCommand\n     * @static\n     * @param {IRewardTrophyToAllCommand} message RewardTrophyToAllCommand message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    RewardTrophyToAllCommand.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a RewardTrophyToAllCommand message from the specified reader or buffer.\n     * @function decode\n     * @memberof RewardTrophyToAllCommand\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {RewardTrophyToAllCommand} RewardTrophyToAllCommand\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    RewardTrophyToAllCommand.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.RewardTrophyToAllCommand();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.trophyType = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a RewardTrophyToAllCommand message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof RewardTrophyToAllCommand\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {RewardTrophyToAllCommand} RewardTrophyToAllCommand\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    RewardTrophyToAllCommand.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a RewardTrophyToAllCommand message.\n     * @function verify\n     * @memberof RewardTrophyToAllCommand\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    RewardTrophyToAllCommand.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.trophyType != null && message.hasOwnProperty(\"trophyType\"))\n            if (!$util.isString(message.trophyType))\n                return \"trophyType: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a RewardTrophyToAllCommand message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof RewardTrophyToAllCommand\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {RewardTrophyToAllCommand} RewardTrophyToAllCommand\n     */\n    RewardTrophyToAllCommand.fromObject = function fromObject(object) {\n        if (object instanceof $root.RewardTrophyToAllCommand)\n            return object;\n        var message = new $root.RewardTrophyToAllCommand();\n        if (object.trophyType != null)\n            message.trophyType = String(object.trophyType);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a RewardTrophyToAllCommand message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof RewardTrophyToAllCommand\n     * @static\n     * @param {RewardTrophyToAllCommand} message RewardTrophyToAllCommand\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    RewardTrophyToAllCommand.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.trophyType = \"\";\n        if (message.trophyType != null && message.hasOwnProperty(\"trophyType\"))\n            object.trophyType = message.trophyType;\n        return object;\n    };\n\n    /**\n     * Converts this RewardTrophyToAllCommand to JSON.\n     * @function toJSON\n     * @memberof RewardTrophyToAllCommand\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    RewardTrophyToAllCommand.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return RewardTrophyToAllCommand;\n})();\n\n$root.SendChatMessageCommand = (function() {\n\n    /**\n     * Properties of a SendChatMessageCommand.\n     * @exports ISendChatMessageCommand\n     * @interface ISendChatMessageCommand\n     * @property {string|null} [text] SendChatMessageCommand text\n     */\n\n    /**\n     * Constructs a new SendChatMessageCommand.\n     * @exports SendChatMessageCommand\n     * @classdesc Represents a SendChatMessageCommand.\n     * @implements ISendChatMessageCommand\n     * @constructor\n     * @param {ISendChatMessageCommand=} [properties] Properties to set\n     */\n    function SendChatMessageCommand(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SendChatMessageCommand text.\n     * @member {string} text\n     * @memberof SendChatMessageCommand\n     * @instance\n     */\n    SendChatMessageCommand.prototype.text = \"\";\n\n    /**\n     * Creates a new SendChatMessageCommand instance using the specified properties.\n     * @function create\n     * @memberof SendChatMessageCommand\n     * @static\n     * @param {ISendChatMessageCommand=} [properties] Properties to set\n     * @returns {SendChatMessageCommand} SendChatMessageCommand instance\n     */\n    SendChatMessageCommand.create = function create(properties) {\n        return new SendChatMessageCommand(properties);\n    };\n\n    /**\n     * Encodes the specified SendChatMessageCommand message. Does not implicitly {@link SendChatMessageCommand.verify|verify} messages.\n     * @function encode\n     * @memberof SendChatMessageCommand\n     * @static\n     * @param {ISendChatMessageCommand} message SendChatMessageCommand message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SendChatMessageCommand.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.text != null && Object.hasOwnProperty.call(message, \"text\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.text);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SendChatMessageCommand message, length delimited. Does not implicitly {@link SendChatMessageCommand.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SendChatMessageCommand\n     * @static\n     * @param {ISendChatMessageCommand} message SendChatMessageCommand message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SendChatMessageCommand.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SendChatMessageCommand message from the specified reader or buffer.\n     * @function decode\n     * @memberof SendChatMessageCommand\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SendChatMessageCommand} SendChatMessageCommand\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SendChatMessageCommand.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SendChatMessageCommand();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.text = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SendChatMessageCommand message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SendChatMessageCommand\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SendChatMessageCommand} SendChatMessageCommand\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SendChatMessageCommand.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SendChatMessageCommand message.\n     * @function verify\n     * @memberof SendChatMessageCommand\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SendChatMessageCommand.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.text != null && message.hasOwnProperty(\"text\"))\n            if (!$util.isString(message.text))\n                return \"text: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SendChatMessageCommand message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SendChatMessageCommand\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SendChatMessageCommand} SendChatMessageCommand\n     */\n    SendChatMessageCommand.fromObject = function fromObject(object) {\n        if (object instanceof $root.SendChatMessageCommand)\n            return object;\n        var message = new $root.SendChatMessageCommand();\n        if (object.text != null)\n            message.text = String(object.text);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SendChatMessageCommand message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SendChatMessageCommand\n     * @static\n     * @param {SendChatMessageCommand} message SendChatMessageCommand\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SendChatMessageCommand.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.text = \"\";\n        if (message.text != null && message.hasOwnProperty(\"text\"))\n            object.text = message.text;\n        return object;\n    };\n\n    /**\n     * Converts this SendChatMessageCommand to JSON.\n     * @function toJSON\n     * @memberof SendChatMessageCommand\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SendChatMessageCommand.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SendChatMessageCommand;\n})();\n\n$root.JoinEvent = (function() {\n\n    /**\n     * Properties of a JoinEvent.\n     * @exports IJoinEvent\n     * @interface IJoinEvent\n     * @property {IClassState|null} [state] JoinEvent state\n     * @property {string|null} [deviceId] JoinEvent deviceId\n     */\n\n    /**\n     * Constructs a new JoinEvent.\n     * @exports JoinEvent\n     * @classdesc Represents a JoinEvent.\n     * @implements IJoinEvent\n     * @constructor\n     * @param {IJoinEvent=} [properties] Properties to set\n     */\n    function JoinEvent(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * JoinEvent state.\n     * @member {IClassState|null|undefined} state\n     * @memberof JoinEvent\n     * @instance\n     */\n    JoinEvent.prototype.state = null;\n\n    /**\n     * JoinEvent deviceId.\n     * @member {string} deviceId\n     * @memberof JoinEvent\n     * @instance\n     */\n    JoinEvent.prototype.deviceId = \"\";\n\n    /**\n     * Creates a new JoinEvent instance using the specified properties.\n     * @function create\n     * @memberof JoinEvent\n     * @static\n     * @param {IJoinEvent=} [properties] Properties to set\n     * @returns {JoinEvent} JoinEvent instance\n     */\n    JoinEvent.create = function create(properties) {\n        return new JoinEvent(properties);\n    };\n\n    /**\n     * Encodes the specified JoinEvent message. Does not implicitly {@link JoinEvent.verify|verify} messages.\n     * @function encode\n     * @memberof JoinEvent\n     * @static\n     * @param {IJoinEvent} message JoinEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    JoinEvent.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.state != null && Object.hasOwnProperty.call(message, \"state\"))\n            $root.ClassState.encode(message.state, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        if (message.deviceId != null && Object.hasOwnProperty.call(message, \"deviceId\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.deviceId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified JoinEvent message, length delimited. Does not implicitly {@link JoinEvent.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof JoinEvent\n     * @static\n     * @param {IJoinEvent} message JoinEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    JoinEvent.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a JoinEvent message from the specified reader or buffer.\n     * @function decode\n     * @memberof JoinEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {JoinEvent} JoinEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    JoinEvent.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.JoinEvent();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.state = $root.ClassState.decode(reader, reader.uint32());\n                break;\n            case 2:\n                message.deviceId = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a JoinEvent message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof JoinEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {JoinEvent} JoinEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    JoinEvent.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a JoinEvent message.\n     * @function verify\n     * @memberof JoinEvent\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    JoinEvent.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.state != null && message.hasOwnProperty(\"state\")) {\n            var error = $root.ClassState.verify(message.state);\n            if (error)\n                return \"state.\" + error;\n        }\n        if (message.deviceId != null && message.hasOwnProperty(\"deviceId\"))\n            if (!$util.isString(message.deviceId))\n                return \"deviceId: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a JoinEvent message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof JoinEvent\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {JoinEvent} JoinEvent\n     */\n    JoinEvent.fromObject = function fromObject(object) {\n        if (object instanceof $root.JoinEvent)\n            return object;\n        var message = new $root.JoinEvent();\n        if (object.state != null) {\n            if (typeof object.state !== \"object\")\n                throw TypeError(\".JoinEvent.state: object expected\");\n            message.state = $root.ClassState.fromObject(object.state);\n        }\n        if (object.deviceId != null)\n            message.deviceId = String(object.deviceId);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a JoinEvent message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof JoinEvent\n     * @static\n     * @param {JoinEvent} message JoinEvent\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    JoinEvent.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.state = null;\n            object.deviceId = \"\";\n        }\n        if (message.state != null && message.hasOwnProperty(\"state\"))\n            object.state = $root.ClassState.toObject(message.state, options);\n        if (message.deviceId != null && message.hasOwnProperty(\"deviceId\"))\n            object.deviceId = message.deviceId;\n        return object;\n    };\n\n    /**\n     * Converts this JoinEvent to JSON.\n     * @function toJSON\n     * @memberof JoinEvent\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    JoinEvent.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return JoinEvent;\n})();\n\n$root.ClassEndedEvent = (function() {\n\n    /**\n     * Properties of a ClassEndedEvent.\n     * @exports IClassEndedEvent\n     * @interface IClassEndedEvent\n     * @property {number|Long|null} [timestamp] ClassEndedEvent timestamp\n     */\n\n    /**\n     * Constructs a new ClassEndedEvent.\n     * @exports ClassEndedEvent\n     * @classdesc Represents a ClassEndedEvent.\n     * @implements IClassEndedEvent\n     * @constructor\n     * @param {IClassEndedEvent=} [properties] Properties to set\n     */\n    function ClassEndedEvent(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * ClassEndedEvent timestamp.\n     * @member {number|Long} timestamp\n     * @memberof ClassEndedEvent\n     * @instance\n     */\n    ClassEndedEvent.prototype.timestamp = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Creates a new ClassEndedEvent instance using the specified properties.\n     * @function create\n     * @memberof ClassEndedEvent\n     * @static\n     * @param {IClassEndedEvent=} [properties] Properties to set\n     * @returns {ClassEndedEvent} ClassEndedEvent instance\n     */\n    ClassEndedEvent.create = function create(properties) {\n        return new ClassEndedEvent(properties);\n    };\n\n    /**\n     * Encodes the specified ClassEndedEvent message. Does not implicitly {@link ClassEndedEvent.verify|verify} messages.\n     * @function encode\n     * @memberof ClassEndedEvent\n     * @static\n     * @param {IClassEndedEvent} message ClassEndedEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ClassEndedEvent.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.timestamp != null && Object.hasOwnProperty.call(message, \"timestamp\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.timestamp);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified ClassEndedEvent message, length delimited. Does not implicitly {@link ClassEndedEvent.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ClassEndedEvent\n     * @static\n     * @param {IClassEndedEvent} message ClassEndedEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ClassEndedEvent.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a ClassEndedEvent message from the specified reader or buffer.\n     * @function decode\n     * @memberof ClassEndedEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ClassEndedEvent} ClassEndedEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ClassEndedEvent.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ClassEndedEvent();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.timestamp = reader.uint64();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a ClassEndedEvent message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ClassEndedEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ClassEndedEvent} ClassEndedEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ClassEndedEvent.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a ClassEndedEvent message.\n     * @function verify\n     * @memberof ClassEndedEvent\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    ClassEndedEvent.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.timestamp != null && message.hasOwnProperty(\"timestamp\"))\n            if (!$util.isInteger(message.timestamp) && !(message.timestamp && $util.isInteger(message.timestamp.low) && $util.isInteger(message.timestamp.high)))\n                return \"timestamp: integer|Long expected\";\n        return null;\n    };\n\n    /**\n     * Creates a ClassEndedEvent message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ClassEndedEvent\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ClassEndedEvent} ClassEndedEvent\n     */\n    ClassEndedEvent.fromObject = function fromObject(object) {\n        if (object instanceof $root.ClassEndedEvent)\n            return object;\n        var message = new $root.ClassEndedEvent();\n        if (object.timestamp != null)\n            if ($util.Long)\n                (message.timestamp = $util.Long.fromValue(object.timestamp)).unsigned = true;\n            else if (typeof object.timestamp === \"string\")\n                message.timestamp = parseInt(object.timestamp, 10);\n            else if (typeof object.timestamp === \"number\")\n                message.timestamp = object.timestamp;\n            else if (typeof object.timestamp === \"object\")\n                message.timestamp = new $util.LongBits(object.timestamp.low >>> 0, object.timestamp.high >>> 0).toNumber(true);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a ClassEndedEvent message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ClassEndedEvent\n     * @static\n     * @param {ClassEndedEvent} message ClassEndedEvent\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    ClassEndedEvent.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, true);\n                object.timestamp = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.timestamp = options.longs === String ? \"0\" : 0;\n        if (message.timestamp != null && message.hasOwnProperty(\"timestamp\"))\n            if (typeof message.timestamp === \"number\")\n                object.timestamp = options.longs === String ? String(message.timestamp) : message.timestamp;\n            else\n                object.timestamp = options.longs === String ? $util.Long.prototype.toString.call(message.timestamp) : options.longs === Number ? new $util.LongBits(message.timestamp.low >>> 0, message.timestamp.high >>> 0).toNumber(true) : message.timestamp;\n        return object;\n    };\n\n    /**\n     * Converts this ClassEndedEvent to JSON.\n     * @function toJSON\n     * @memberof ClassEndedEvent\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    ClassEndedEvent.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ClassEndedEvent;\n})();\n\n$root.DeviceConnectedEvent = (function() {\n\n    /**\n     * Properties of a DeviceConnectedEvent.\n     * @exports IDeviceConnectedEvent\n     * @interface IDeviceConnectedEvent\n     * @property {string|null} [name] DeviceConnectedEvent name\n     * @property {string|null} [role] DeviceConnectedEvent role\n     * @property {IDevice|null} [device] DeviceConnectedEvent device\n     */\n\n    /**\n     * Constructs a new DeviceConnectedEvent.\n     * @exports DeviceConnectedEvent\n     * @classdesc Represents a DeviceConnectedEvent.\n     * @implements IDeviceConnectedEvent\n     * @constructor\n     * @param {IDeviceConnectedEvent=} [properties] Properties to set\n     */\n    function DeviceConnectedEvent(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * DeviceConnectedEvent name.\n     * @member {string} name\n     * @memberof DeviceConnectedEvent\n     * @instance\n     */\n    DeviceConnectedEvent.prototype.name = \"\";\n\n    /**\n     * DeviceConnectedEvent role.\n     * @member {string} role\n     * @memberof DeviceConnectedEvent\n     * @instance\n     */\n    DeviceConnectedEvent.prototype.role = \"\";\n\n    /**\n     * DeviceConnectedEvent device.\n     * @member {IDevice|null|undefined} device\n     * @memberof DeviceConnectedEvent\n     * @instance\n     */\n    DeviceConnectedEvent.prototype.device = null;\n\n    /**\n     * Creates a new DeviceConnectedEvent instance using the specified properties.\n     * @function create\n     * @memberof DeviceConnectedEvent\n     * @static\n     * @param {IDeviceConnectedEvent=} [properties] Properties to set\n     * @returns {DeviceConnectedEvent} DeviceConnectedEvent instance\n     */\n    DeviceConnectedEvent.create = function create(properties) {\n        return new DeviceConnectedEvent(properties);\n    };\n\n    /**\n     * Encodes the specified DeviceConnectedEvent message. Does not implicitly {@link DeviceConnectedEvent.verify|verify} messages.\n     * @function encode\n     * @memberof DeviceConnectedEvent\n     * @static\n     * @param {IDeviceConnectedEvent} message DeviceConnectedEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    DeviceConnectedEvent.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.name != null && Object.hasOwnProperty.call(message, \"name\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n        if (message.role != null && Object.hasOwnProperty.call(message, \"role\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.role);\n        if (message.device != null && Object.hasOwnProperty.call(message, \"device\"))\n            $root.Device.encode(message.device, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified DeviceConnectedEvent message, length delimited. Does not implicitly {@link DeviceConnectedEvent.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof DeviceConnectedEvent\n     * @static\n     * @param {IDeviceConnectedEvent} message DeviceConnectedEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    DeviceConnectedEvent.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a DeviceConnectedEvent message from the specified reader or buffer.\n     * @function decode\n     * @memberof DeviceConnectedEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {DeviceConnectedEvent} DeviceConnectedEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    DeviceConnectedEvent.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.DeviceConnectedEvent();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.name = reader.string();\n                break;\n            case 2:\n                message.role = reader.string();\n                break;\n            case 3:\n                message.device = $root.Device.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a DeviceConnectedEvent message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof DeviceConnectedEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {DeviceConnectedEvent} DeviceConnectedEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    DeviceConnectedEvent.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a DeviceConnectedEvent message.\n     * @function verify\n     * @memberof DeviceConnectedEvent\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    DeviceConnectedEvent.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.name != null && message.hasOwnProperty(\"name\"))\n            if (!$util.isString(message.name))\n                return \"name: string expected\";\n        if (message.role != null && message.hasOwnProperty(\"role\"))\n            if (!$util.isString(message.role))\n                return \"role: string expected\";\n        if (message.device != null && message.hasOwnProperty(\"device\")) {\n            var error = $root.Device.verify(message.device);\n            if (error)\n                return \"device.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a DeviceConnectedEvent message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof DeviceConnectedEvent\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {DeviceConnectedEvent} DeviceConnectedEvent\n     */\n    DeviceConnectedEvent.fromObject = function fromObject(object) {\n        if (object instanceof $root.DeviceConnectedEvent)\n            return object;\n        var message = new $root.DeviceConnectedEvent();\n        if (object.name != null)\n            message.name = String(object.name);\n        if (object.role != null)\n            message.role = String(object.role);\n        if (object.device != null) {\n            if (typeof object.device !== \"object\")\n                throw TypeError(\".DeviceConnectedEvent.device: object expected\");\n            message.device = $root.Device.fromObject(object.device);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a DeviceConnectedEvent message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof DeviceConnectedEvent\n     * @static\n     * @param {DeviceConnectedEvent} message DeviceConnectedEvent\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    DeviceConnectedEvent.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.name = \"\";\n            object.role = \"\";\n            object.device = null;\n        }\n        if (message.name != null && message.hasOwnProperty(\"name\"))\n            object.name = message.name;\n        if (message.role != null && message.hasOwnProperty(\"role\"))\n            object.role = message.role;\n        if (message.device != null && message.hasOwnProperty(\"device\"))\n            object.device = $root.Device.toObject(message.device, options);\n        return object;\n    };\n\n    /**\n     * Converts this DeviceConnectedEvent to JSON.\n     * @function toJSON\n     * @memberof DeviceConnectedEvent\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    DeviceConnectedEvent.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return DeviceConnectedEvent;\n})();\n\n$root.DeviceDisconnectedEvent = (function() {\n\n    /**\n     * Properties of a DeviceDisconnectedEvent.\n     * @exports IDeviceDisconnectedEvent\n     * @interface IDeviceDisconnectedEvent\n     * @property {string|null} [deviceId] DeviceDisconnectedEvent deviceId\n     */\n\n    /**\n     * Constructs a new DeviceDisconnectedEvent.\n     * @exports DeviceDisconnectedEvent\n     * @classdesc Represents a DeviceDisconnectedEvent.\n     * @implements IDeviceDisconnectedEvent\n     * @constructor\n     * @param {IDeviceDisconnectedEvent=} [properties] Properties to set\n     */\n    function DeviceDisconnectedEvent(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * DeviceDisconnectedEvent deviceId.\n     * @member {string} deviceId\n     * @memberof DeviceDisconnectedEvent\n     * @instance\n     */\n    DeviceDisconnectedEvent.prototype.deviceId = \"\";\n\n    /**\n     * Creates a new DeviceDisconnectedEvent instance using the specified properties.\n     * @function create\n     * @memberof DeviceDisconnectedEvent\n     * @static\n     * @param {IDeviceDisconnectedEvent=} [properties] Properties to set\n     * @returns {DeviceDisconnectedEvent} DeviceDisconnectedEvent instance\n     */\n    DeviceDisconnectedEvent.create = function create(properties) {\n        return new DeviceDisconnectedEvent(properties);\n    };\n\n    /**\n     * Encodes the specified DeviceDisconnectedEvent message. Does not implicitly {@link DeviceDisconnectedEvent.verify|verify} messages.\n     * @function encode\n     * @memberof DeviceDisconnectedEvent\n     * @static\n     * @param {IDeviceDisconnectedEvent} message DeviceDisconnectedEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    DeviceDisconnectedEvent.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.deviceId != null && Object.hasOwnProperty.call(message, \"deviceId\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.deviceId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified DeviceDisconnectedEvent message, length delimited. Does not implicitly {@link DeviceDisconnectedEvent.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof DeviceDisconnectedEvent\n     * @static\n     * @param {IDeviceDisconnectedEvent} message DeviceDisconnectedEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    DeviceDisconnectedEvent.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a DeviceDisconnectedEvent message from the specified reader or buffer.\n     * @function decode\n     * @memberof DeviceDisconnectedEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {DeviceDisconnectedEvent} DeviceDisconnectedEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    DeviceDisconnectedEvent.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.DeviceDisconnectedEvent();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.deviceId = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a DeviceDisconnectedEvent message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof DeviceDisconnectedEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {DeviceDisconnectedEvent} DeviceDisconnectedEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    DeviceDisconnectedEvent.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a DeviceDisconnectedEvent message.\n     * @function verify\n     * @memberof DeviceDisconnectedEvent\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    DeviceDisconnectedEvent.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.deviceId != null && message.hasOwnProperty(\"deviceId\"))\n            if (!$util.isString(message.deviceId))\n                return \"deviceId: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a DeviceDisconnectedEvent message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof DeviceDisconnectedEvent\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {DeviceDisconnectedEvent} DeviceDisconnectedEvent\n     */\n    DeviceDisconnectedEvent.fromObject = function fromObject(object) {\n        if (object instanceof $root.DeviceDisconnectedEvent)\n            return object;\n        var message = new $root.DeviceDisconnectedEvent();\n        if (object.deviceId != null)\n            message.deviceId = String(object.deviceId);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a DeviceDisconnectedEvent message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof DeviceDisconnectedEvent\n     * @static\n     * @param {DeviceDisconnectedEvent} message DeviceDisconnectedEvent\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    DeviceDisconnectedEvent.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.deviceId = \"\";\n        if (message.deviceId != null && message.hasOwnProperty(\"deviceId\"))\n            object.deviceId = message.deviceId;\n        return object;\n    };\n\n    /**\n     * Converts this DeviceDisconnectedEvent to JSON.\n     * @function toJSON\n     * @memberof DeviceDisconnectedEvent\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    DeviceDisconnectedEvent.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return DeviceDisconnectedEvent;\n})();\n\n$root.HostChangedEvent = (function() {\n\n    /**\n     * Properties of a HostChangedEvent.\n     * @exports IHostChangedEvent\n     * @interface IHostChangedEvent\n     * @property {string|null} [hostDeviceId] HostChangedEvent hostDeviceId\n     */\n\n    /**\n     * Constructs a new HostChangedEvent.\n     * @exports HostChangedEvent\n     * @classdesc Represents a HostChangedEvent.\n     * @implements IHostChangedEvent\n     * @constructor\n     * @param {IHostChangedEvent=} [properties] Properties to set\n     */\n    function HostChangedEvent(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * HostChangedEvent hostDeviceId.\n     * @member {string} hostDeviceId\n     * @memberof HostChangedEvent\n     * @instance\n     */\n    HostChangedEvent.prototype.hostDeviceId = \"\";\n\n    /**\n     * Creates a new HostChangedEvent instance using the specified properties.\n     * @function create\n     * @memberof HostChangedEvent\n     * @static\n     * @param {IHostChangedEvent=} [properties] Properties to set\n     * @returns {HostChangedEvent} HostChangedEvent instance\n     */\n    HostChangedEvent.create = function create(properties) {\n        return new HostChangedEvent(properties);\n    };\n\n    /**\n     * Encodes the specified HostChangedEvent message. Does not implicitly {@link HostChangedEvent.verify|verify} messages.\n     * @function encode\n     * @memberof HostChangedEvent\n     * @static\n     * @param {IHostChangedEvent} message HostChangedEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    HostChangedEvent.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.hostDeviceId != null && Object.hasOwnProperty.call(message, \"hostDeviceId\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.hostDeviceId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified HostChangedEvent message, length delimited. Does not implicitly {@link HostChangedEvent.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof HostChangedEvent\n     * @static\n     * @param {IHostChangedEvent} message HostChangedEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    HostChangedEvent.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a HostChangedEvent message from the specified reader or buffer.\n     * @function decode\n     * @memberof HostChangedEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {HostChangedEvent} HostChangedEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    HostChangedEvent.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.HostChangedEvent();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.hostDeviceId = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a HostChangedEvent message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof HostChangedEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {HostChangedEvent} HostChangedEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    HostChangedEvent.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a HostChangedEvent message.\n     * @function verify\n     * @memberof HostChangedEvent\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    HostChangedEvent.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.hostDeviceId != null && message.hasOwnProperty(\"hostDeviceId\"))\n            if (!$util.isString(message.hostDeviceId))\n                return \"hostDeviceId: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a HostChangedEvent message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof HostChangedEvent\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {HostChangedEvent} HostChangedEvent\n     */\n    HostChangedEvent.fromObject = function fromObject(object) {\n        if (object instanceof $root.HostChangedEvent)\n            return object;\n        var message = new $root.HostChangedEvent();\n        if (object.hostDeviceId != null)\n            message.hostDeviceId = String(object.hostDeviceId);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a HostChangedEvent message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof HostChangedEvent\n     * @static\n     * @param {HostChangedEvent} message HostChangedEvent\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    HostChangedEvent.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.hostDeviceId = \"\";\n        if (message.hostDeviceId != null && message.hasOwnProperty(\"hostDeviceId\"))\n            object.hostDeviceId = message.hostDeviceId;\n        return object;\n    };\n\n    /**\n     * Converts this HostChangedEvent to JSON.\n     * @function toJSON\n     * @memberof HostChangedEvent\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    HostChangedEvent.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return HostChangedEvent;\n})();\n\n$root.ContentChangedEvent = (function() {\n\n    /**\n     * Properties of a ContentChangedEvent.\n     * @exports IContentChangedEvent\n     * @interface IContentChangedEvent\n     * @property {IContent|null} [content] ContentChangedEvent content\n     */\n\n    /**\n     * Constructs a new ContentChangedEvent.\n     * @exports ContentChangedEvent\n     * @classdesc Represents a ContentChangedEvent.\n     * @implements IContentChangedEvent\n     * @constructor\n     * @param {IContentChangedEvent=} [properties] Properties to set\n     */\n    function ContentChangedEvent(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * ContentChangedEvent content.\n     * @member {IContent|null|undefined} content\n     * @memberof ContentChangedEvent\n     * @instance\n     */\n    ContentChangedEvent.prototype.content = null;\n\n    /**\n     * Creates a new ContentChangedEvent instance using the specified properties.\n     * @function create\n     * @memberof ContentChangedEvent\n     * @static\n     * @param {IContentChangedEvent=} [properties] Properties to set\n     * @returns {ContentChangedEvent} ContentChangedEvent instance\n     */\n    ContentChangedEvent.create = function create(properties) {\n        return new ContentChangedEvent(properties);\n    };\n\n    /**\n     * Encodes the specified ContentChangedEvent message. Does not implicitly {@link ContentChangedEvent.verify|verify} messages.\n     * @function encode\n     * @memberof ContentChangedEvent\n     * @static\n     * @param {IContentChangedEvent} message ContentChangedEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ContentChangedEvent.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.content != null && Object.hasOwnProperty.call(message, \"content\"))\n            $root.Content.encode(message.content, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified ContentChangedEvent message, length delimited. Does not implicitly {@link ContentChangedEvent.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ContentChangedEvent\n     * @static\n     * @param {IContentChangedEvent} message ContentChangedEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ContentChangedEvent.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a ContentChangedEvent message from the specified reader or buffer.\n     * @function decode\n     * @memberof ContentChangedEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ContentChangedEvent} ContentChangedEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ContentChangedEvent.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ContentChangedEvent();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.content = $root.Content.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a ContentChangedEvent message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ContentChangedEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ContentChangedEvent} ContentChangedEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ContentChangedEvent.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a ContentChangedEvent message.\n     * @function verify\n     * @memberof ContentChangedEvent\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    ContentChangedEvent.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.content != null && message.hasOwnProperty(\"content\")) {\n            var error = $root.Content.verify(message.content);\n            if (error)\n                return \"content.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a ContentChangedEvent message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ContentChangedEvent\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ContentChangedEvent} ContentChangedEvent\n     */\n    ContentChangedEvent.fromObject = function fromObject(object) {\n        if (object instanceof $root.ContentChangedEvent)\n            return object;\n        var message = new $root.ContentChangedEvent();\n        if (object.content != null) {\n            if (typeof object.content !== \"object\")\n                throw TypeError(\".ContentChangedEvent.content: object expected\");\n            message.content = $root.Content.fromObject(object.content);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a ContentChangedEvent message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ContentChangedEvent\n     * @static\n     * @param {ContentChangedEvent} message ContentChangedEvent\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    ContentChangedEvent.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.content = null;\n        if (message.content != null && message.hasOwnProperty(\"content\"))\n            object.content = $root.Content.toObject(message.content, options);\n        return object;\n    };\n\n    /**\n     * Converts this ContentChangedEvent to JSON.\n     * @function toJSON\n     * @memberof ContentChangedEvent\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    ContentChangedEvent.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ContentChangedEvent;\n})();\n\n$root.ActivityStreamIdChangedEvent = (function() {\n\n    /**\n     * Properties of an ActivityStreamIdChangedEvent.\n     * @exports IActivityStreamIdChangedEvent\n     * @interface IActivityStreamIdChangedEvent\n     * @property {string|null} [deviceId] ActivityStreamIdChangedEvent deviceId\n     * @property {string|null} [activityStreamId] ActivityStreamIdChangedEvent activityStreamId\n     */\n\n    /**\n     * Constructs a new ActivityStreamIdChangedEvent.\n     * @exports ActivityStreamIdChangedEvent\n     * @classdesc Represents an ActivityStreamIdChangedEvent.\n     * @implements IActivityStreamIdChangedEvent\n     * @constructor\n     * @param {IActivityStreamIdChangedEvent=} [properties] Properties to set\n     */\n    function ActivityStreamIdChangedEvent(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * ActivityStreamIdChangedEvent deviceId.\n     * @member {string} deviceId\n     * @memberof ActivityStreamIdChangedEvent\n     * @instance\n     */\n    ActivityStreamIdChangedEvent.prototype.deviceId = \"\";\n\n    /**\n     * ActivityStreamIdChangedEvent activityStreamId.\n     * @member {string} activityStreamId\n     * @memberof ActivityStreamIdChangedEvent\n     * @instance\n     */\n    ActivityStreamIdChangedEvent.prototype.activityStreamId = \"\";\n\n    /**\n     * Creates a new ActivityStreamIdChangedEvent instance using the specified properties.\n     * @function create\n     * @memberof ActivityStreamIdChangedEvent\n     * @static\n     * @param {IActivityStreamIdChangedEvent=} [properties] Properties to set\n     * @returns {ActivityStreamIdChangedEvent} ActivityStreamIdChangedEvent instance\n     */\n    ActivityStreamIdChangedEvent.create = function create(properties) {\n        return new ActivityStreamIdChangedEvent(properties);\n    };\n\n    /**\n     * Encodes the specified ActivityStreamIdChangedEvent message. Does not implicitly {@link ActivityStreamIdChangedEvent.verify|verify} messages.\n     * @function encode\n     * @memberof ActivityStreamIdChangedEvent\n     * @static\n     * @param {IActivityStreamIdChangedEvent} message ActivityStreamIdChangedEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ActivityStreamIdChangedEvent.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.deviceId != null && Object.hasOwnProperty.call(message, \"deviceId\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.deviceId);\n        if (message.activityStreamId != null && Object.hasOwnProperty.call(message, \"activityStreamId\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.activityStreamId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified ActivityStreamIdChangedEvent message, length delimited. Does not implicitly {@link ActivityStreamIdChangedEvent.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ActivityStreamIdChangedEvent\n     * @static\n     * @param {IActivityStreamIdChangedEvent} message ActivityStreamIdChangedEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ActivityStreamIdChangedEvent.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes an ActivityStreamIdChangedEvent message from the specified reader or buffer.\n     * @function decode\n     * @memberof ActivityStreamIdChangedEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ActivityStreamIdChangedEvent} ActivityStreamIdChangedEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ActivityStreamIdChangedEvent.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ActivityStreamIdChangedEvent();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.deviceId = reader.string();\n                break;\n            case 2:\n                message.activityStreamId = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes an ActivityStreamIdChangedEvent message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ActivityStreamIdChangedEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ActivityStreamIdChangedEvent} ActivityStreamIdChangedEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ActivityStreamIdChangedEvent.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies an ActivityStreamIdChangedEvent message.\n     * @function verify\n     * @memberof ActivityStreamIdChangedEvent\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    ActivityStreamIdChangedEvent.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.deviceId != null && message.hasOwnProperty(\"deviceId\"))\n            if (!$util.isString(message.deviceId))\n                return \"deviceId: string expected\";\n        if (message.activityStreamId != null && message.hasOwnProperty(\"activityStreamId\"))\n            if (!$util.isString(message.activityStreamId))\n                return \"activityStreamId: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates an ActivityStreamIdChangedEvent message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ActivityStreamIdChangedEvent\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ActivityStreamIdChangedEvent} ActivityStreamIdChangedEvent\n     */\n    ActivityStreamIdChangedEvent.fromObject = function fromObject(object) {\n        if (object instanceof $root.ActivityStreamIdChangedEvent)\n            return object;\n        var message = new $root.ActivityStreamIdChangedEvent();\n        if (object.deviceId != null)\n            message.deviceId = String(object.deviceId);\n        if (object.activityStreamId != null)\n            message.activityStreamId = String(object.activityStreamId);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from an ActivityStreamIdChangedEvent message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ActivityStreamIdChangedEvent\n     * @static\n     * @param {ActivityStreamIdChangedEvent} message ActivityStreamIdChangedEvent\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    ActivityStreamIdChangedEvent.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.deviceId = \"\";\n            object.activityStreamId = \"\";\n        }\n        if (message.deviceId != null && message.hasOwnProperty(\"deviceId\"))\n            object.deviceId = message.deviceId;\n        if (message.activityStreamId != null && message.hasOwnProperty(\"activityStreamId\"))\n            object.activityStreamId = message.activityStreamId;\n        return object;\n    };\n\n    /**\n     * Converts this ActivityStreamIdChangedEvent to JSON.\n     * @function toJSON\n     * @memberof ActivityStreamIdChangedEvent\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    ActivityStreamIdChangedEvent.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ActivityStreamIdChangedEvent;\n})();\n\n$root.TrophyRewardedToUserEvent = (function() {\n\n    /**\n     * Properties of a TrophyRewardedToUserEvent.\n     * @exports ITrophyRewardedToUserEvent\n     * @interface ITrophyRewardedToUserEvent\n     * @property {ITrophy|null} [trophy] TrophyRewardedToUserEvent trophy\n     * @property {string|null} [toUserId] TrophyRewardedToUserEvent toUserId\n     */\n\n    /**\n     * Constructs a new TrophyRewardedToUserEvent.\n     * @exports TrophyRewardedToUserEvent\n     * @classdesc Represents a TrophyRewardedToUserEvent.\n     * @implements ITrophyRewardedToUserEvent\n     * @constructor\n     * @param {ITrophyRewardedToUserEvent=} [properties] Properties to set\n     */\n    function TrophyRewardedToUserEvent(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * TrophyRewardedToUserEvent trophy.\n     * @member {ITrophy|null|undefined} trophy\n     * @memberof TrophyRewardedToUserEvent\n     * @instance\n     */\n    TrophyRewardedToUserEvent.prototype.trophy = null;\n\n    /**\n     * TrophyRewardedToUserEvent toUserId.\n     * @member {string} toUserId\n     * @memberof TrophyRewardedToUserEvent\n     * @instance\n     */\n    TrophyRewardedToUserEvent.prototype.toUserId = \"\";\n\n    /**\n     * Creates a new TrophyRewardedToUserEvent instance using the specified properties.\n     * @function create\n     * @memberof TrophyRewardedToUserEvent\n     * @static\n     * @param {ITrophyRewardedToUserEvent=} [properties] Properties to set\n     * @returns {TrophyRewardedToUserEvent} TrophyRewardedToUserEvent instance\n     */\n    TrophyRewardedToUserEvent.create = function create(properties) {\n        return new TrophyRewardedToUserEvent(properties);\n    };\n\n    /**\n     * Encodes the specified TrophyRewardedToUserEvent message. Does not implicitly {@link TrophyRewardedToUserEvent.verify|verify} messages.\n     * @function encode\n     * @memberof TrophyRewardedToUserEvent\n     * @static\n     * @param {ITrophyRewardedToUserEvent} message TrophyRewardedToUserEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    TrophyRewardedToUserEvent.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.trophy != null && Object.hasOwnProperty.call(message, \"trophy\"))\n            $root.Trophy.encode(message.trophy, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        if (message.toUserId != null && Object.hasOwnProperty.call(message, \"toUserId\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.toUserId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified TrophyRewardedToUserEvent message, length delimited. Does not implicitly {@link TrophyRewardedToUserEvent.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof TrophyRewardedToUserEvent\n     * @static\n     * @param {ITrophyRewardedToUserEvent} message TrophyRewardedToUserEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    TrophyRewardedToUserEvent.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a TrophyRewardedToUserEvent message from the specified reader or buffer.\n     * @function decode\n     * @memberof TrophyRewardedToUserEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {TrophyRewardedToUserEvent} TrophyRewardedToUserEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    TrophyRewardedToUserEvent.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.TrophyRewardedToUserEvent();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.trophy = $root.Trophy.decode(reader, reader.uint32());\n                break;\n            case 2:\n                message.toUserId = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a TrophyRewardedToUserEvent message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof TrophyRewardedToUserEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {TrophyRewardedToUserEvent} TrophyRewardedToUserEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    TrophyRewardedToUserEvent.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a TrophyRewardedToUserEvent message.\n     * @function verify\n     * @memberof TrophyRewardedToUserEvent\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    TrophyRewardedToUserEvent.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.trophy != null && message.hasOwnProperty(\"trophy\")) {\n            var error = $root.Trophy.verify(message.trophy);\n            if (error)\n                return \"trophy.\" + error;\n        }\n        if (message.toUserId != null && message.hasOwnProperty(\"toUserId\"))\n            if (!$util.isString(message.toUserId))\n                return \"toUserId: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a TrophyRewardedToUserEvent message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof TrophyRewardedToUserEvent\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {TrophyRewardedToUserEvent} TrophyRewardedToUserEvent\n     */\n    TrophyRewardedToUserEvent.fromObject = function fromObject(object) {\n        if (object instanceof $root.TrophyRewardedToUserEvent)\n            return object;\n        var message = new $root.TrophyRewardedToUserEvent();\n        if (object.trophy != null) {\n            if (typeof object.trophy !== \"object\")\n                throw TypeError(\".TrophyRewardedToUserEvent.trophy: object expected\");\n            message.trophy = $root.Trophy.fromObject(object.trophy);\n        }\n        if (object.toUserId != null)\n            message.toUserId = String(object.toUserId);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a TrophyRewardedToUserEvent message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof TrophyRewardedToUserEvent\n     * @static\n     * @param {TrophyRewardedToUserEvent} message TrophyRewardedToUserEvent\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    TrophyRewardedToUserEvent.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.trophy = null;\n            object.toUserId = \"\";\n        }\n        if (message.trophy != null && message.hasOwnProperty(\"trophy\"))\n            object.trophy = $root.Trophy.toObject(message.trophy, options);\n        if (message.toUserId != null && message.hasOwnProperty(\"toUserId\"))\n            object.toUserId = message.toUserId;\n        return object;\n    };\n\n    /**\n     * Converts this TrophyRewardedToUserEvent to JSON.\n     * @function toJSON\n     * @memberof TrophyRewardedToUserEvent\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    TrophyRewardedToUserEvent.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return TrophyRewardedToUserEvent;\n})();\n\n$root.TrophyRewardedToAllEvent = (function() {\n\n    /**\n     * Properties of a TrophyRewardedToAllEvent.\n     * @exports ITrophyRewardedToAllEvent\n     * @interface ITrophyRewardedToAllEvent\n     * @property {ITrophy|null} [trophy] TrophyRewardedToAllEvent trophy\n     */\n\n    /**\n     * Constructs a new TrophyRewardedToAllEvent.\n     * @exports TrophyRewardedToAllEvent\n     * @classdesc Represents a TrophyRewardedToAllEvent.\n     * @implements ITrophyRewardedToAllEvent\n     * @constructor\n     * @param {ITrophyRewardedToAllEvent=} [properties] Properties to set\n     */\n    function TrophyRewardedToAllEvent(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * TrophyRewardedToAllEvent trophy.\n     * @member {ITrophy|null|undefined} trophy\n     * @memberof TrophyRewardedToAllEvent\n     * @instance\n     */\n    TrophyRewardedToAllEvent.prototype.trophy = null;\n\n    /**\n     * Creates a new TrophyRewardedToAllEvent instance using the specified properties.\n     * @function create\n     * @memberof TrophyRewardedToAllEvent\n     * @static\n     * @param {ITrophyRewardedToAllEvent=} [properties] Properties to set\n     * @returns {TrophyRewardedToAllEvent} TrophyRewardedToAllEvent instance\n     */\n    TrophyRewardedToAllEvent.create = function create(properties) {\n        return new TrophyRewardedToAllEvent(properties);\n    };\n\n    /**\n     * Encodes the specified TrophyRewardedToAllEvent message. Does not implicitly {@link TrophyRewardedToAllEvent.verify|verify} messages.\n     * @function encode\n     * @memberof TrophyRewardedToAllEvent\n     * @static\n     * @param {ITrophyRewardedToAllEvent} message TrophyRewardedToAllEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    TrophyRewardedToAllEvent.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.trophy != null && Object.hasOwnProperty.call(message, \"trophy\"))\n            $root.Trophy.encode(message.trophy, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified TrophyRewardedToAllEvent message, length delimited. Does not implicitly {@link TrophyRewardedToAllEvent.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof TrophyRewardedToAllEvent\n     * @static\n     * @param {ITrophyRewardedToAllEvent} message TrophyRewardedToAllEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    TrophyRewardedToAllEvent.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a TrophyRewardedToAllEvent message from the specified reader or buffer.\n     * @function decode\n     * @memberof TrophyRewardedToAllEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {TrophyRewardedToAllEvent} TrophyRewardedToAllEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    TrophyRewardedToAllEvent.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.TrophyRewardedToAllEvent();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.trophy = $root.Trophy.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a TrophyRewardedToAllEvent message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof TrophyRewardedToAllEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {TrophyRewardedToAllEvent} TrophyRewardedToAllEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    TrophyRewardedToAllEvent.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a TrophyRewardedToAllEvent message.\n     * @function verify\n     * @memberof TrophyRewardedToAllEvent\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    TrophyRewardedToAllEvent.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.trophy != null && message.hasOwnProperty(\"trophy\")) {\n            var error = $root.Trophy.verify(message.trophy);\n            if (error)\n                return \"trophy.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a TrophyRewardedToAllEvent message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof TrophyRewardedToAllEvent\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {TrophyRewardedToAllEvent} TrophyRewardedToAllEvent\n     */\n    TrophyRewardedToAllEvent.fromObject = function fromObject(object) {\n        if (object instanceof $root.TrophyRewardedToAllEvent)\n            return object;\n        var message = new $root.TrophyRewardedToAllEvent();\n        if (object.trophy != null) {\n            if (typeof object.trophy !== \"object\")\n                throw TypeError(\".TrophyRewardedToAllEvent.trophy: object expected\");\n            message.trophy = $root.Trophy.fromObject(object.trophy);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a TrophyRewardedToAllEvent message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof TrophyRewardedToAllEvent\n     * @static\n     * @param {TrophyRewardedToAllEvent} message TrophyRewardedToAllEvent\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    TrophyRewardedToAllEvent.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.trophy = null;\n        if (message.trophy != null && message.hasOwnProperty(\"trophy\"))\n            object.trophy = $root.Trophy.toObject(message.trophy, options);\n        return object;\n    };\n\n    /**\n     * Converts this TrophyRewardedToAllEvent to JSON.\n     * @function toJSON\n     * @memberof TrophyRewardedToAllEvent\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    TrophyRewardedToAllEvent.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return TrophyRewardedToAllEvent;\n})();\n\n$root.NewChatMessageEvent = (function() {\n\n    /**\n     * Properties of a NewChatMessageEvent.\n     * @exports INewChatMessageEvent\n     * @interface INewChatMessageEvent\n     * @property {IChatMessage|null} [chatMessage] NewChatMessageEvent chatMessage\n     */\n\n    /**\n     * Constructs a new NewChatMessageEvent.\n     * @exports NewChatMessageEvent\n     * @classdesc Represents a NewChatMessageEvent.\n     * @implements INewChatMessageEvent\n     * @constructor\n     * @param {INewChatMessageEvent=} [properties] Properties to set\n     */\n    function NewChatMessageEvent(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * NewChatMessageEvent chatMessage.\n     * @member {IChatMessage|null|undefined} chatMessage\n     * @memberof NewChatMessageEvent\n     * @instance\n     */\n    NewChatMessageEvent.prototype.chatMessage = null;\n\n    /**\n     * Creates a new NewChatMessageEvent instance using the specified properties.\n     * @function create\n     * @memberof NewChatMessageEvent\n     * @static\n     * @param {INewChatMessageEvent=} [properties] Properties to set\n     * @returns {NewChatMessageEvent} NewChatMessageEvent instance\n     */\n    NewChatMessageEvent.create = function create(properties) {\n        return new NewChatMessageEvent(properties);\n    };\n\n    /**\n     * Encodes the specified NewChatMessageEvent message. Does not implicitly {@link NewChatMessageEvent.verify|verify} messages.\n     * @function encode\n     * @memberof NewChatMessageEvent\n     * @static\n     * @param {INewChatMessageEvent} message NewChatMessageEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    NewChatMessageEvent.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.chatMessage != null && Object.hasOwnProperty.call(message, \"chatMessage\"))\n            $root.ChatMessage.encode(message.chatMessage, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified NewChatMessageEvent message, length delimited. Does not implicitly {@link NewChatMessageEvent.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof NewChatMessageEvent\n     * @static\n     * @param {INewChatMessageEvent} message NewChatMessageEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    NewChatMessageEvent.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a NewChatMessageEvent message from the specified reader or buffer.\n     * @function decode\n     * @memberof NewChatMessageEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {NewChatMessageEvent} NewChatMessageEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    NewChatMessageEvent.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NewChatMessageEvent();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.chatMessage = $root.ChatMessage.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a NewChatMessageEvent message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof NewChatMessageEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {NewChatMessageEvent} NewChatMessageEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    NewChatMessageEvent.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a NewChatMessageEvent message.\n     * @function verify\n     * @memberof NewChatMessageEvent\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    NewChatMessageEvent.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.chatMessage != null && message.hasOwnProperty(\"chatMessage\")) {\n            var error = $root.ChatMessage.verify(message.chatMessage);\n            if (error)\n                return \"chatMessage.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a NewChatMessageEvent message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof NewChatMessageEvent\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {NewChatMessageEvent} NewChatMessageEvent\n     */\n    NewChatMessageEvent.fromObject = function fromObject(object) {\n        if (object instanceof $root.NewChatMessageEvent)\n            return object;\n        var message = new $root.NewChatMessageEvent();\n        if (object.chatMessage != null) {\n            if (typeof object.chatMessage !== \"object\")\n                throw TypeError(\".NewChatMessageEvent.chatMessage: object expected\");\n            message.chatMessage = $root.ChatMessage.fromObject(object.chatMessage);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a NewChatMessageEvent message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof NewChatMessageEvent\n     * @static\n     * @param {NewChatMessageEvent} message NewChatMessageEvent\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    NewChatMessageEvent.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.chatMessage = null;\n        if (message.chatMessage != null && message.hasOwnProperty(\"chatMessage\"))\n            object.chatMessage = $root.ChatMessage.toObject(message.chatMessage, options);\n        return object;\n    };\n\n    /**\n     * Converts this NewChatMessageEvent to JSON.\n     * @function toJSON\n     * @memberof NewChatMessageEvent\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    NewChatMessageEvent.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return NewChatMessageEvent;\n})();\n\n$root.ClassState = (function() {\n\n    /**\n     * Properties of a ClassState.\n     * @exports IClassState\n     * @interface IClassState\n     * @property {Object.<string,IUser>|null} [users] ClassState users\n     * @property {Object.<string,IDevice>|null} [devices] ClassState devices\n     * @property {Array.<IChatMessage>|null} [chatMessages] ClassState chatMessages\n     * @property {IContent|null} [content] ClassState content\n     * @property {string|null} [hostDeviceId] ClassState hostDeviceId\n     * @property {number|Long|null} [classEndedTime] ClassState classEndedTime\n     */\n\n    /**\n     * Constructs a new ClassState.\n     * @exports ClassState\n     * @classdesc Represents a ClassState.\n     * @implements IClassState\n     * @constructor\n     * @param {IClassState=} [properties] Properties to set\n     */\n    function ClassState(properties) {\n        this.users = {};\n        this.devices = {};\n        this.chatMessages = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * ClassState users.\n     * @member {Object.<string,IUser>} users\n     * @memberof ClassState\n     * @instance\n     */\n    ClassState.prototype.users = $util.emptyObject;\n\n    /**\n     * ClassState devices.\n     * @member {Object.<string,IDevice>} devices\n     * @memberof ClassState\n     * @instance\n     */\n    ClassState.prototype.devices = $util.emptyObject;\n\n    /**\n     * ClassState chatMessages.\n     * @member {Array.<IChatMessage>} chatMessages\n     * @memberof ClassState\n     * @instance\n     */\n    ClassState.prototype.chatMessages = $util.emptyArray;\n\n    /**\n     * ClassState content.\n     * @member {IContent|null|undefined} content\n     * @memberof ClassState\n     * @instance\n     */\n    ClassState.prototype.content = null;\n\n    /**\n     * ClassState hostDeviceId.\n     * @member {string} hostDeviceId\n     * @memberof ClassState\n     * @instance\n     */\n    ClassState.prototype.hostDeviceId = \"\";\n\n    /**\n     * ClassState classEndedTime.\n     * @member {number|Long} classEndedTime\n     * @memberof ClassState\n     * @instance\n     */\n    ClassState.prototype.classEndedTime = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Creates a new ClassState instance using the specified properties.\n     * @function create\n     * @memberof ClassState\n     * @static\n     * @param {IClassState=} [properties] Properties to set\n     * @returns {ClassState} ClassState instance\n     */\n    ClassState.create = function create(properties) {\n        return new ClassState(properties);\n    };\n\n    /**\n     * Encodes the specified ClassState message. Does not implicitly {@link ClassState.verify|verify} messages.\n     * @function encode\n     * @memberof ClassState\n     * @static\n     * @param {IClassState} message ClassState message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ClassState.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.users != null && Object.hasOwnProperty.call(message, \"users\"))\n            for (var keys = Object.keys(message.users), i = 0; i < keys.length; ++i) {\n                writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);\n                $root.User.encode(message.users[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();\n            }\n        if (message.devices != null && Object.hasOwnProperty.call(message, \"devices\"))\n            for (var keys = Object.keys(message.devices), i = 0; i < keys.length; ++i) {\n                writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);\n                $root.Device.encode(message.devices[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();\n            }\n        if (message.chatMessages != null && message.chatMessages.length)\n            for (var i = 0; i < message.chatMessages.length; ++i)\n                $root.ChatMessage.encode(message.chatMessages[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n        if (message.content != null && Object.hasOwnProperty.call(message, \"content\"))\n            $root.Content.encode(message.content, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n        if (message.hostDeviceId != null && Object.hasOwnProperty.call(message, \"hostDeviceId\"))\n            writer.uint32(/* id 5, wireType 2 =*/42).string(message.hostDeviceId);\n        if (message.classEndedTime != null && Object.hasOwnProperty.call(message, \"classEndedTime\"))\n            writer.uint32(/* id 6, wireType 0 =*/48).uint64(message.classEndedTime);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified ClassState message, length delimited. Does not implicitly {@link ClassState.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ClassState\n     * @static\n     * @param {IClassState} message ClassState message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ClassState.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a ClassState message from the specified reader or buffer.\n     * @function decode\n     * @memberof ClassState\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ClassState} ClassState\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ClassState.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ClassState(), key, value;\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (message.users === $util.emptyObject)\n                    message.users = {};\n                var end2 = reader.uint32() + reader.pos;\n                key = \"\";\n                value = null;\n                while (reader.pos < end2) {\n                    var tag2 = reader.uint32();\n                    switch (tag2 >>> 3) {\n                    case 1:\n                        key = reader.string();\n                        break;\n                    case 2:\n                        value = $root.User.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag2 & 7);\n                        break;\n                    }\n                }\n                message.users[key] = value;\n                break;\n            case 2:\n                if (message.devices === $util.emptyObject)\n                    message.devices = {};\n                var end2 = reader.uint32() + reader.pos;\n                key = \"\";\n                value = null;\n                while (reader.pos < end2) {\n                    var tag2 = reader.uint32();\n                    switch (tag2 >>> 3) {\n                    case 1:\n                        key = reader.string();\n                        break;\n                    case 2:\n                        value = $root.Device.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag2 & 7);\n                        break;\n                    }\n                }\n                message.devices[key] = value;\n                break;\n            case 3:\n                if (!(message.chatMessages && message.chatMessages.length))\n                    message.chatMessages = [];\n                message.chatMessages.push($root.ChatMessage.decode(reader, reader.uint32()));\n                break;\n            case 4:\n                message.content = $root.Content.decode(reader, reader.uint32());\n                break;\n            case 5:\n                message.hostDeviceId = reader.string();\n                break;\n            case 6:\n                message.classEndedTime = reader.uint64();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a ClassState message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ClassState\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ClassState} ClassState\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ClassState.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a ClassState message.\n     * @function verify\n     * @memberof ClassState\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    ClassState.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.users != null && message.hasOwnProperty(\"users\")) {\n            if (!$util.isObject(message.users))\n                return \"users: object expected\";\n            var key = Object.keys(message.users);\n            for (var i = 0; i < key.length; ++i) {\n                var error = $root.User.verify(message.users[key[i]]);\n                if (error)\n                    return \"users.\" + error;\n            }\n        }\n        if (message.devices != null && message.hasOwnProperty(\"devices\")) {\n            if (!$util.isObject(message.devices))\n                return \"devices: object expected\";\n            var key = Object.keys(message.devices);\n            for (var i = 0; i < key.length; ++i) {\n                var error = $root.Device.verify(message.devices[key[i]]);\n                if (error)\n                    return \"devices.\" + error;\n            }\n        }\n        if (message.chatMessages != null && message.hasOwnProperty(\"chatMessages\")) {\n            if (!Array.isArray(message.chatMessages))\n                return \"chatMessages: array expected\";\n            for (var i = 0; i < message.chatMessages.length; ++i) {\n                var error = $root.ChatMessage.verify(message.chatMessages[i]);\n                if (error)\n                    return \"chatMessages.\" + error;\n            }\n        }\n        if (message.content != null && message.hasOwnProperty(\"content\")) {\n            var error = $root.Content.verify(message.content);\n            if (error)\n                return \"content.\" + error;\n        }\n        if (message.hostDeviceId != null && message.hasOwnProperty(\"hostDeviceId\"))\n            if (!$util.isString(message.hostDeviceId))\n                return \"hostDeviceId: string expected\";\n        if (message.classEndedTime != null && message.hasOwnProperty(\"classEndedTime\"))\n            if (!$util.isInteger(message.classEndedTime) && !(message.classEndedTime && $util.isInteger(message.classEndedTime.low) && $util.isInteger(message.classEndedTime.high)))\n                return \"classEndedTime: integer|Long expected\";\n        return null;\n    };\n\n    /**\n     * Creates a ClassState message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ClassState\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ClassState} ClassState\n     */\n    ClassState.fromObject = function fromObject(object) {\n        if (object instanceof $root.ClassState)\n            return object;\n        var message = new $root.ClassState();\n        if (object.users) {\n            if (typeof object.users !== \"object\")\n                throw TypeError(\".ClassState.users: object expected\");\n            message.users = {};\n            for (var keys = Object.keys(object.users), i = 0; i < keys.length; ++i) {\n                if (typeof object.users[keys[i]] !== \"object\")\n                    throw TypeError(\".ClassState.users: object expected\");\n                message.users[keys[i]] = $root.User.fromObject(object.users[keys[i]]);\n            }\n        }\n        if (object.devices) {\n            if (typeof object.devices !== \"object\")\n                throw TypeError(\".ClassState.devices: object expected\");\n            message.devices = {};\n            for (var keys = Object.keys(object.devices), i = 0; i < keys.length; ++i) {\n                if (typeof object.devices[keys[i]] !== \"object\")\n                    throw TypeError(\".ClassState.devices: object expected\");\n                message.devices[keys[i]] = $root.Device.fromObject(object.devices[keys[i]]);\n            }\n        }\n        if (object.chatMessages) {\n            if (!Array.isArray(object.chatMessages))\n                throw TypeError(\".ClassState.chatMessages: array expected\");\n            message.chatMessages = [];\n            for (var i = 0; i < object.chatMessages.length; ++i) {\n                if (typeof object.chatMessages[i] !== \"object\")\n                    throw TypeError(\".ClassState.chatMessages: object expected\");\n                message.chatMessages[i] = $root.ChatMessage.fromObject(object.chatMessages[i]);\n            }\n        }\n        if (object.content != null) {\n            if (typeof object.content !== \"object\")\n                throw TypeError(\".ClassState.content: object expected\");\n            message.content = $root.Content.fromObject(object.content);\n        }\n        if (object.hostDeviceId != null)\n            message.hostDeviceId = String(object.hostDeviceId);\n        if (object.classEndedTime != null)\n            if ($util.Long)\n                (message.classEndedTime = $util.Long.fromValue(object.classEndedTime)).unsigned = true;\n            else if (typeof object.classEndedTime === \"string\")\n                message.classEndedTime = parseInt(object.classEndedTime, 10);\n            else if (typeof object.classEndedTime === \"number\")\n                message.classEndedTime = object.classEndedTime;\n            else if (typeof object.classEndedTime === \"object\")\n                message.classEndedTime = new $util.LongBits(object.classEndedTime.low >>> 0, object.classEndedTime.high >>> 0).toNumber(true);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a ClassState message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ClassState\n     * @static\n     * @param {ClassState} message ClassState\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    ClassState.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.chatMessages = [];\n        if (options.objects || options.defaults) {\n            object.users = {};\n            object.devices = {};\n        }\n        if (options.defaults) {\n            object.content = null;\n            object.hostDeviceId = \"\";\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, true);\n                object.classEndedTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.classEndedTime = options.longs === String ? \"0\" : 0;\n        }\n        var keys2;\n        if (message.users && (keys2 = Object.keys(message.users)).length) {\n            object.users = {};\n            for (var j = 0; j < keys2.length; ++j)\n                object.users[keys2[j]] = $root.User.toObject(message.users[keys2[j]], options);\n        }\n        if (message.devices && (keys2 = Object.keys(message.devices)).length) {\n            object.devices = {};\n            for (var j = 0; j < keys2.length; ++j)\n                object.devices[keys2[j]] = $root.Device.toObject(message.devices[keys2[j]], options);\n        }\n        if (message.chatMessages && message.chatMessages.length) {\n            object.chatMessages = [];\n            for (var j = 0; j < message.chatMessages.length; ++j)\n                object.chatMessages[j] = $root.ChatMessage.toObject(message.chatMessages[j], options);\n        }\n        if (message.content != null && message.hasOwnProperty(\"content\"))\n            object.content = $root.Content.toObject(message.content, options);\n        if (message.hostDeviceId != null && message.hasOwnProperty(\"hostDeviceId\"))\n            object.hostDeviceId = message.hostDeviceId;\n        if (message.classEndedTime != null && message.hasOwnProperty(\"classEndedTime\"))\n            if (typeof message.classEndedTime === \"number\")\n                object.classEndedTime = options.longs === String ? String(message.classEndedTime) : message.classEndedTime;\n            else\n                object.classEndedTime = options.longs === String ? $util.Long.prototype.toString.call(message.classEndedTime) : options.longs === Number ? new $util.LongBits(message.classEndedTime.low >>> 0, message.classEndedTime.high >>> 0).toNumber(true) : message.classEndedTime;\n        return object;\n    };\n\n    /**\n     * Converts this ClassState to JSON.\n     * @function toJSON\n     * @memberof ClassState\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    ClassState.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ClassState;\n})();\n\n$root.User = (function() {\n\n    /**\n     * Properties of a User.\n     * @exports IUser\n     * @interface IUser\n     * @property {string|null} [id] User id\n     * @property {string|null} [name] User name\n     * @property {string|null} [role] User role\n     * @property {Array.<string>|null} [deviceIds] User deviceIds\n     * @property {Array.<ITrophy>|null} [trophies] User trophies\n     */\n\n    /**\n     * Constructs a new User.\n     * @exports User\n     * @classdesc Represents a User.\n     * @implements IUser\n     * @constructor\n     * @param {IUser=} [properties] Properties to set\n     */\n    function User(properties) {\n        this.deviceIds = [];\n        this.trophies = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * User id.\n     * @member {string} id\n     * @memberof User\n     * @instance\n     */\n    User.prototype.id = \"\";\n\n    /**\n     * User name.\n     * @member {string} name\n     * @memberof User\n     * @instance\n     */\n    User.prototype.name = \"\";\n\n    /**\n     * User role.\n     * @member {string} role\n     * @memberof User\n     * @instance\n     */\n    User.prototype.role = \"\";\n\n    /**\n     * User deviceIds.\n     * @member {Array.<string>} deviceIds\n     * @memberof User\n     * @instance\n     */\n    User.prototype.deviceIds = $util.emptyArray;\n\n    /**\n     * User trophies.\n     * @member {Array.<ITrophy>} trophies\n     * @memberof User\n     * @instance\n     */\n    User.prototype.trophies = $util.emptyArray;\n\n    /**\n     * Creates a new User instance using the specified properties.\n     * @function create\n     * @memberof User\n     * @static\n     * @param {IUser=} [properties] Properties to set\n     * @returns {User} User instance\n     */\n    User.create = function create(properties) {\n        return new User(properties);\n    };\n\n    /**\n     * Encodes the specified User message. Does not implicitly {@link User.verify|verify} messages.\n     * @function encode\n     * @memberof User\n     * @static\n     * @param {IUser} message User message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    User.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.id != null && Object.hasOwnProperty.call(message, \"id\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);\n        if (message.name != null && Object.hasOwnProperty.call(message, \"name\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);\n        if (message.role != null && Object.hasOwnProperty.call(message, \"role\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.role);\n        if (message.deviceIds != null && message.deviceIds.length)\n            for (var i = 0; i < message.deviceIds.length; ++i)\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.deviceIds[i]);\n        if (message.trophies != null && message.trophies.length)\n            for (var i = 0; i < message.trophies.length; ++i)\n                $root.Trophy.encode(message.trophies[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified User message, length delimited. Does not implicitly {@link User.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof User\n     * @static\n     * @param {IUser} message User message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    User.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a User message from the specified reader or buffer.\n     * @function decode\n     * @memberof User\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {User} User\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    User.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.User();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.id = reader.string();\n                break;\n            case 2:\n                message.name = reader.string();\n                break;\n            case 3:\n                message.role = reader.string();\n                break;\n            case 4:\n                if (!(message.deviceIds && message.deviceIds.length))\n                    message.deviceIds = [];\n                message.deviceIds.push(reader.string());\n                break;\n            case 5:\n                if (!(message.trophies && message.trophies.length))\n                    message.trophies = [];\n                message.trophies.push($root.Trophy.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a User message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof User\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {User} User\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    User.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a User message.\n     * @function verify\n     * @memberof User\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    User.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            if (!$util.isString(message.id))\n                return \"id: string expected\";\n        if (message.name != null && message.hasOwnProperty(\"name\"))\n            if (!$util.isString(message.name))\n                return \"name: string expected\";\n        if (message.role != null && message.hasOwnProperty(\"role\"))\n            if (!$util.isString(message.role))\n                return \"role: string expected\";\n        if (message.deviceIds != null && message.hasOwnProperty(\"deviceIds\")) {\n            if (!Array.isArray(message.deviceIds))\n                return \"deviceIds: array expected\";\n            for (var i = 0; i < message.deviceIds.length; ++i)\n                if (!$util.isString(message.deviceIds[i]))\n                    return \"deviceIds: string[] expected\";\n        }\n        if (message.trophies != null && message.hasOwnProperty(\"trophies\")) {\n            if (!Array.isArray(message.trophies))\n                return \"trophies: array expected\";\n            for (var i = 0; i < message.trophies.length; ++i) {\n                var error = $root.Trophy.verify(message.trophies[i]);\n                if (error)\n                    return \"trophies.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a User message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof User\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {User} User\n     */\n    User.fromObject = function fromObject(object) {\n        if (object instanceof $root.User)\n            return object;\n        var message = new $root.User();\n        if (object.id != null)\n            message.id = String(object.id);\n        if (object.name != null)\n            message.name = String(object.name);\n        if (object.role != null)\n            message.role = String(object.role);\n        if (object.deviceIds) {\n            if (!Array.isArray(object.deviceIds))\n                throw TypeError(\".User.deviceIds: array expected\");\n            message.deviceIds = [];\n            for (var i = 0; i < object.deviceIds.length; ++i)\n                message.deviceIds[i] = String(object.deviceIds[i]);\n        }\n        if (object.trophies) {\n            if (!Array.isArray(object.trophies))\n                throw TypeError(\".User.trophies: array expected\");\n            message.trophies = [];\n            for (var i = 0; i < object.trophies.length; ++i) {\n                if (typeof object.trophies[i] !== \"object\")\n                    throw TypeError(\".User.trophies: object expected\");\n                message.trophies[i] = $root.Trophy.fromObject(object.trophies[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a User message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof User\n     * @static\n     * @param {User} message User\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    User.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults) {\n            object.deviceIds = [];\n            object.trophies = [];\n        }\n        if (options.defaults) {\n            object.id = \"\";\n            object.name = \"\";\n            object.role = \"\";\n        }\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            object.id = message.id;\n        if (message.name != null && message.hasOwnProperty(\"name\"))\n            object.name = message.name;\n        if (message.role != null && message.hasOwnProperty(\"role\"))\n            object.role = message.role;\n        if (message.deviceIds && message.deviceIds.length) {\n            object.deviceIds = [];\n            for (var j = 0; j < message.deviceIds.length; ++j)\n                object.deviceIds[j] = message.deviceIds[j];\n        }\n        if (message.trophies && message.trophies.length) {\n            object.trophies = [];\n            for (var j = 0; j < message.trophies.length; ++j)\n                object.trophies[j] = $root.Trophy.toObject(message.trophies[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this User to JSON.\n     * @function toJSON\n     * @memberof User\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    User.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return User;\n})();\n\n$root.Trophy = (function() {\n\n    /**\n     * Properties of a Trophy.\n     * @exports ITrophy\n     * @interface ITrophy\n     * @property {number|Long|null} [timestamp] Trophy timestamp\n     * @property {string|null} [type] Trophy type\n     * @property {string|null} [fromUserId] Trophy fromUserId\n     */\n\n    /**\n     * Constructs a new Trophy.\n     * @exports Trophy\n     * @classdesc Represents a Trophy.\n     * @implements ITrophy\n     * @constructor\n     * @param {ITrophy=} [properties] Properties to set\n     */\n    function Trophy(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Trophy timestamp.\n     * @member {number|Long} timestamp\n     * @memberof Trophy\n     * @instance\n     */\n    Trophy.prototype.timestamp = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Trophy type.\n     * @member {string} type\n     * @memberof Trophy\n     * @instance\n     */\n    Trophy.prototype.type = \"\";\n\n    /**\n     * Trophy fromUserId.\n     * @member {string} fromUserId\n     * @memberof Trophy\n     * @instance\n     */\n    Trophy.prototype.fromUserId = \"\";\n\n    /**\n     * Creates a new Trophy instance using the specified properties.\n     * @function create\n     * @memberof Trophy\n     * @static\n     * @param {ITrophy=} [properties] Properties to set\n     * @returns {Trophy} Trophy instance\n     */\n    Trophy.create = function create(properties) {\n        return new Trophy(properties);\n    };\n\n    /**\n     * Encodes the specified Trophy message. Does not implicitly {@link Trophy.verify|verify} messages.\n     * @function encode\n     * @memberof Trophy\n     * @static\n     * @param {ITrophy} message Trophy message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Trophy.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.timestamp != null && Object.hasOwnProperty.call(message, \"timestamp\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.timestamp);\n        if (message.type != null && Object.hasOwnProperty.call(message, \"type\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.type);\n        if (message.fromUserId != null && Object.hasOwnProperty.call(message, \"fromUserId\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.fromUserId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified Trophy message, length delimited. Does not implicitly {@link Trophy.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof Trophy\n     * @static\n     * @param {ITrophy} message Trophy message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Trophy.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a Trophy message from the specified reader or buffer.\n     * @function decode\n     * @memberof Trophy\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {Trophy} Trophy\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Trophy.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Trophy();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.timestamp = reader.uint64();\n                break;\n            case 2:\n                message.type = reader.string();\n                break;\n            case 3:\n                message.fromUserId = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a Trophy message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof Trophy\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {Trophy} Trophy\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Trophy.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a Trophy message.\n     * @function verify\n     * @memberof Trophy\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    Trophy.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.timestamp != null && message.hasOwnProperty(\"timestamp\"))\n            if (!$util.isInteger(message.timestamp) && !(message.timestamp && $util.isInteger(message.timestamp.low) && $util.isInteger(message.timestamp.high)))\n                return \"timestamp: integer|Long expected\";\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            if (!$util.isString(message.type))\n                return \"type: string expected\";\n        if (message.fromUserId != null && message.hasOwnProperty(\"fromUserId\"))\n            if (!$util.isString(message.fromUserId))\n                return \"fromUserId: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a Trophy message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Trophy\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {Trophy} Trophy\n     */\n    Trophy.fromObject = function fromObject(object) {\n        if (object instanceof $root.Trophy)\n            return object;\n        var message = new $root.Trophy();\n        if (object.timestamp != null)\n            if ($util.Long)\n                (message.timestamp = $util.Long.fromValue(object.timestamp)).unsigned = true;\n            else if (typeof object.timestamp === \"string\")\n                message.timestamp = parseInt(object.timestamp, 10);\n            else if (typeof object.timestamp === \"number\")\n                message.timestamp = object.timestamp;\n            else if (typeof object.timestamp === \"object\")\n                message.timestamp = new $util.LongBits(object.timestamp.low >>> 0, object.timestamp.high >>> 0).toNumber(true);\n        if (object.type != null)\n            message.type = String(object.type);\n        if (object.fromUserId != null)\n            message.fromUserId = String(object.fromUserId);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a Trophy message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Trophy\n     * @static\n     * @param {Trophy} message Trophy\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Trophy.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, true);\n                object.timestamp = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.timestamp = options.longs === String ? \"0\" : 0;\n            object.type = \"\";\n            object.fromUserId = \"\";\n        }\n        if (message.timestamp != null && message.hasOwnProperty(\"timestamp\"))\n            if (typeof message.timestamp === \"number\")\n                object.timestamp = options.longs === String ? String(message.timestamp) : message.timestamp;\n            else\n                object.timestamp = options.longs === String ? $util.Long.prototype.toString.call(message.timestamp) : options.longs === Number ? new $util.LongBits(message.timestamp.low >>> 0, message.timestamp.high >>> 0).toNumber(true) : message.timestamp;\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            object.type = message.type;\n        if (message.fromUserId != null && message.hasOwnProperty(\"fromUserId\"))\n            object.fromUserId = message.fromUserId;\n        return object;\n    };\n\n    /**\n     * Converts this Trophy to JSON.\n     * @function toJSON\n     * @memberof Trophy\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Trophy.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Trophy;\n})();\n\n$root.Device = (function() {\n\n    /**\n     * Properties of a Device.\n     * @exports IDevice\n     * @interface IDevice\n     * @property {string|null} [id] Device id\n     * @property {string|null} [userId] Device userId\n     * @property {string|null} [activityStreamId] Device activityStreamId\n     * @property {Array.<string>|null} [webRtcStreamIds] Device webRtcStreamIds\n     */\n\n    /**\n     * Constructs a new Device.\n     * @exports Device\n     * @classdesc Represents a Device.\n     * @implements IDevice\n     * @constructor\n     * @param {IDevice=} [properties] Properties to set\n     */\n    function Device(properties) {\n        this.webRtcStreamIds = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Device id.\n     * @member {string} id\n     * @memberof Device\n     * @instance\n     */\n    Device.prototype.id = \"\";\n\n    /**\n     * Device userId.\n     * @member {string} userId\n     * @memberof Device\n     * @instance\n     */\n    Device.prototype.userId = \"\";\n\n    /**\n     * Device activityStreamId.\n     * @member {string} activityStreamId\n     * @memberof Device\n     * @instance\n     */\n    Device.prototype.activityStreamId = \"\";\n\n    /**\n     * Device webRtcStreamIds.\n     * @member {Array.<string>} webRtcStreamIds\n     * @memberof Device\n     * @instance\n     */\n    Device.prototype.webRtcStreamIds = $util.emptyArray;\n\n    /**\n     * Creates a new Device instance using the specified properties.\n     * @function create\n     * @memberof Device\n     * @static\n     * @param {IDevice=} [properties] Properties to set\n     * @returns {Device} Device instance\n     */\n    Device.create = function create(properties) {\n        return new Device(properties);\n    };\n\n    /**\n     * Encodes the specified Device message. Does not implicitly {@link Device.verify|verify} messages.\n     * @function encode\n     * @memberof Device\n     * @static\n     * @param {IDevice} message Device message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Device.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.id != null && Object.hasOwnProperty.call(message, \"id\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);\n        if (message.userId != null && Object.hasOwnProperty.call(message, \"userId\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.userId);\n        if (message.activityStreamId != null && Object.hasOwnProperty.call(message, \"activityStreamId\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.activityStreamId);\n        if (message.webRtcStreamIds != null && message.webRtcStreamIds.length)\n            for (var i = 0; i < message.webRtcStreamIds.length; ++i)\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.webRtcStreamIds[i]);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified Device message, length delimited. Does not implicitly {@link Device.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof Device\n     * @static\n     * @param {IDevice} message Device message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Device.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a Device message from the specified reader or buffer.\n     * @function decode\n     * @memberof Device\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {Device} Device\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Device.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Device();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.id = reader.string();\n                break;\n            case 2:\n                message.userId = reader.string();\n                break;\n            case 3:\n                message.activityStreamId = reader.string();\n                break;\n            case 4:\n                if (!(message.webRtcStreamIds && message.webRtcStreamIds.length))\n                    message.webRtcStreamIds = [];\n                message.webRtcStreamIds.push(reader.string());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a Device message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof Device\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {Device} Device\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Device.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a Device message.\n     * @function verify\n     * @memberof Device\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    Device.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            if (!$util.isString(message.id))\n                return \"id: string expected\";\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            if (!$util.isString(message.userId))\n                return \"userId: string expected\";\n        if (message.activityStreamId != null && message.hasOwnProperty(\"activityStreamId\"))\n            if (!$util.isString(message.activityStreamId))\n                return \"activityStreamId: string expected\";\n        if (message.webRtcStreamIds != null && message.hasOwnProperty(\"webRtcStreamIds\")) {\n            if (!Array.isArray(message.webRtcStreamIds))\n                return \"webRtcStreamIds: array expected\";\n            for (var i = 0; i < message.webRtcStreamIds.length; ++i)\n                if (!$util.isString(message.webRtcStreamIds[i]))\n                    return \"webRtcStreamIds: string[] expected\";\n        }\n        return null;\n    };\n\n    /**\n     * Creates a Device message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Device\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {Device} Device\n     */\n    Device.fromObject = function fromObject(object) {\n        if (object instanceof $root.Device)\n            return object;\n        var message = new $root.Device();\n        if (object.id != null)\n            message.id = String(object.id);\n        if (object.userId != null)\n            message.userId = String(object.userId);\n        if (object.activityStreamId != null)\n            message.activityStreamId = String(object.activityStreamId);\n        if (object.webRtcStreamIds) {\n            if (!Array.isArray(object.webRtcStreamIds))\n                throw TypeError(\".Device.webRtcStreamIds: array expected\");\n            message.webRtcStreamIds = [];\n            for (var i = 0; i < object.webRtcStreamIds.length; ++i)\n                message.webRtcStreamIds[i] = String(object.webRtcStreamIds[i]);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a Device message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Device\n     * @static\n     * @param {Device} message Device\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Device.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.webRtcStreamIds = [];\n        if (options.defaults) {\n            object.id = \"\";\n            object.userId = \"\";\n            object.activityStreamId = \"\";\n        }\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            object.id = message.id;\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            object.userId = message.userId;\n        if (message.activityStreamId != null && message.hasOwnProperty(\"activityStreamId\"))\n            object.activityStreamId = message.activityStreamId;\n        if (message.webRtcStreamIds && message.webRtcStreamIds.length) {\n            object.webRtcStreamIds = [];\n            for (var j = 0; j < message.webRtcStreamIds.length; ++j)\n                object.webRtcStreamIds[j] = message.webRtcStreamIds[j];\n        }\n        return object;\n    };\n\n    /**\n     * Converts this Device to JSON.\n     * @function toJSON\n     * @memberof Device\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Device.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Device;\n})();\n\n$root.ChatMessage = (function() {\n\n    /**\n     * Properties of a ChatMessage.\n     * @exports IChatMessage\n     * @interface IChatMessage\n     * @property {string|null} [userId] ChatMessage userId\n     * @property {number|Long|null} [timestamp] ChatMessage timestamp\n     * @property {string|null} [text] ChatMessage text\n     */\n\n    /**\n     * Constructs a new ChatMessage.\n     * @exports ChatMessage\n     * @classdesc Represents a ChatMessage.\n     * @implements IChatMessage\n     * @constructor\n     * @param {IChatMessage=} [properties] Properties to set\n     */\n    function ChatMessage(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * ChatMessage userId.\n     * @member {string} userId\n     * @memberof ChatMessage\n     * @instance\n     */\n    ChatMessage.prototype.userId = \"\";\n\n    /**\n     * ChatMessage timestamp.\n     * @member {number|Long} timestamp\n     * @memberof ChatMessage\n     * @instance\n     */\n    ChatMessage.prototype.timestamp = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * ChatMessage text.\n     * @member {string} text\n     * @memberof ChatMessage\n     * @instance\n     */\n    ChatMessage.prototype.text = \"\";\n\n    /**\n     * Creates a new ChatMessage instance using the specified properties.\n     * @function create\n     * @memberof ChatMessage\n     * @static\n     * @param {IChatMessage=} [properties] Properties to set\n     * @returns {ChatMessage} ChatMessage instance\n     */\n    ChatMessage.create = function create(properties) {\n        return new ChatMessage(properties);\n    };\n\n    /**\n     * Encodes the specified ChatMessage message. Does not implicitly {@link ChatMessage.verify|verify} messages.\n     * @function encode\n     * @memberof ChatMessage\n     * @static\n     * @param {IChatMessage} message ChatMessage message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ChatMessage.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.userId != null && Object.hasOwnProperty.call(message, \"userId\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.userId);\n        if (message.timestamp != null && Object.hasOwnProperty.call(message, \"timestamp\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.timestamp);\n        if (message.text != null && Object.hasOwnProperty.call(message, \"text\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.text);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified ChatMessage message, length delimited. Does not implicitly {@link ChatMessage.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof ChatMessage\n     * @static\n     * @param {IChatMessage} message ChatMessage message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    ChatMessage.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a ChatMessage message from the specified reader or buffer.\n     * @function decode\n     * @memberof ChatMessage\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {ChatMessage} ChatMessage\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ChatMessage.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ChatMessage();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.userId = reader.string();\n                break;\n            case 2:\n                message.timestamp = reader.uint64();\n                break;\n            case 3:\n                message.text = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a ChatMessage message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof ChatMessage\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {ChatMessage} ChatMessage\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    ChatMessage.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a ChatMessage message.\n     * @function verify\n     * @memberof ChatMessage\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    ChatMessage.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            if (!$util.isString(message.userId))\n                return \"userId: string expected\";\n        if (message.timestamp != null && message.hasOwnProperty(\"timestamp\"))\n            if (!$util.isInteger(message.timestamp) && !(message.timestamp && $util.isInteger(message.timestamp.low) && $util.isInteger(message.timestamp.high)))\n                return \"timestamp: integer|Long expected\";\n        if (message.text != null && message.hasOwnProperty(\"text\"))\n            if (!$util.isString(message.text))\n                return \"text: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a ChatMessage message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof ChatMessage\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {ChatMessage} ChatMessage\n     */\n    ChatMessage.fromObject = function fromObject(object) {\n        if (object instanceof $root.ChatMessage)\n            return object;\n        var message = new $root.ChatMessage();\n        if (object.userId != null)\n            message.userId = String(object.userId);\n        if (object.timestamp != null)\n            if ($util.Long)\n                (message.timestamp = $util.Long.fromValue(object.timestamp)).unsigned = true;\n            else if (typeof object.timestamp === \"string\")\n                message.timestamp = parseInt(object.timestamp, 10);\n            else if (typeof object.timestamp === \"number\")\n                message.timestamp = object.timestamp;\n            else if (typeof object.timestamp === \"object\")\n                message.timestamp = new $util.LongBits(object.timestamp.low >>> 0, object.timestamp.high >>> 0).toNumber(true);\n        if (object.text != null)\n            message.text = String(object.text);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a ChatMessage message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof ChatMessage\n     * @static\n     * @param {ChatMessage} message ChatMessage\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    ChatMessage.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.userId = \"\";\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, true);\n                object.timestamp = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.timestamp = options.longs === String ? \"0\" : 0;\n            object.text = \"\";\n        }\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            object.userId = message.userId;\n        if (message.timestamp != null && message.hasOwnProperty(\"timestamp\"))\n            if (typeof message.timestamp === \"number\")\n                object.timestamp = options.longs === String ? String(message.timestamp) : message.timestamp;\n            else\n                object.timestamp = options.longs === String ? $util.Long.prototype.toString.call(message.timestamp) : options.longs === Number ? new $util.LongBits(message.timestamp.low >>> 0, message.timestamp.high >>> 0).toNumber(true) : message.timestamp;\n        if (message.text != null && message.hasOwnProperty(\"text\"))\n            object.text = message.text;\n        return object;\n    };\n\n    /**\n     * Converts this ChatMessage to JSON.\n     * @function toJSON\n     * @memberof ChatMessage\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    ChatMessage.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return ChatMessage;\n})();\n\n$root.Content = (function() {\n\n    /**\n     * Properties of a Content.\n     * @exports IContent\n     * @interface IContent\n     * @property {string|null} [type] Content type\n     * @property {string|null} [contentLocation] Content contentLocation\n     */\n\n    /**\n     * Constructs a new Content.\n     * @exports Content\n     * @classdesc Represents a Content.\n     * @implements IContent\n     * @constructor\n     * @param {IContent=} [properties] Properties to set\n     */\n    function Content(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Content type.\n     * @member {string} type\n     * @memberof Content\n     * @instance\n     */\n    Content.prototype.type = \"\";\n\n    /**\n     * Content contentLocation.\n     * @member {string} contentLocation\n     * @memberof Content\n     * @instance\n     */\n    Content.prototype.contentLocation = \"\";\n\n    /**\n     * Creates a new Content instance using the specified properties.\n     * @function create\n     * @memberof Content\n     * @static\n     * @param {IContent=} [properties] Properties to set\n     * @returns {Content} Content instance\n     */\n    Content.create = function create(properties) {\n        return new Content(properties);\n    };\n\n    /**\n     * Encodes the specified Content message. Does not implicitly {@link Content.verify|verify} messages.\n     * @function encode\n     * @memberof Content\n     * @static\n     * @param {IContent} message Content message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Content.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.type != null && Object.hasOwnProperty.call(message, \"type\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);\n        if (message.contentLocation != null && Object.hasOwnProperty.call(message, \"contentLocation\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.contentLocation);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified Content message, length delimited. Does not implicitly {@link Content.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof Content\n     * @static\n     * @param {IContent} message Content message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Content.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a Content message from the specified reader or buffer.\n     * @function decode\n     * @memberof Content\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {Content} Content\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Content.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Content();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.type = reader.string();\n                break;\n            case 2:\n                message.contentLocation = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a Content message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof Content\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {Content} Content\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Content.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a Content message.\n     * @function verify\n     * @memberof Content\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    Content.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            if (!$util.isString(message.type))\n                return \"type: string expected\";\n        if (message.contentLocation != null && message.hasOwnProperty(\"contentLocation\"))\n            if (!$util.isString(message.contentLocation))\n                return \"contentLocation: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a Content message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Content\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {Content} Content\n     */\n    Content.fromObject = function fromObject(object) {\n        if (object instanceof $root.Content)\n            return object;\n        var message = new $root.Content();\n        if (object.type != null)\n            message.type = String(object.type);\n        if (object.contentLocation != null)\n            message.contentLocation = String(object.contentLocation);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a Content message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Content\n     * @static\n     * @param {Content} message Content\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Content.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.type = \"\";\n            object.contentLocation = \"\";\n        }\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            object.type = message.type;\n        if (message.contentLocation != null && message.hasOwnProperty(\"contentLocation\"))\n            object.contentLocation = message.contentLocation;\n        return object;\n    };\n\n    /**\n     * Converts this Content to JSON.\n     * @function toJSON\n     * @memberof Content\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Content.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Content;\n})();\n\nmodule.exports = $root;\n","import _objectSpread from '@babel/runtime/helpers/esm/objectSpread2';\n\n/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */\nfunction formatProdErrorMessage(code) {\n  return \"Minified Redux error #\" + code + \"; visit https://redux.js.org/Errors?code=\" + code + \" for the full message or \" + 'use the non-minified dev environment for full errors. ';\n}\n\n// Inlined version of the `symbol-observable` polyfill\nvar $$observable = (function () {\n  return typeof Symbol === 'function' && Symbol.observable || '@@observable';\n})();\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of\nfunction miniKindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n  var type = typeof val;\n\n  switch (type) {\n    case 'boolean':\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'function':\n      {\n        return type;\n      }\n  }\n\n  if (Array.isArray(val)) return 'array';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  var constructorName = ctorName(val);\n\n  switch (constructorName) {\n    case 'Symbol':\n    case 'Promise':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Map':\n    case 'Set':\n      return constructorName;\n  } // other\n\n\n  return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n}\n\nfunction ctorName(val) {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\n\nfunction isError(val) {\n  return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';\n}\n\nfunction kindOf(val) {\n  var typeOfVal = typeof val;\n\n  if (process.env.NODE_ENV !== 'production') {\n    typeOfVal = miniKindOf(val);\n  }\n\n  return typeOfVal;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(0) : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(1) : \"Expected the enhancer to be a function. Instead, received: '\" + kindOf(enhancer) + \"'\");\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(2) : \"Expected the root reducer to be a function. Instead, received: '\" + kindOf(reducer) + \"'\");\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(3) : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(4) : \"Expected the listener to be a function. Instead, received: '\" + kindOf(listener) + \"'\");\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(5) : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(6) : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(7) : \"Actions must be plain objects. Instead, the actual type was: '\" + kindOf(action) + \"'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.\");\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(8) : 'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.');\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(9) : 'Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(10) : \"Expected the nextReducer to be a function. Instead, received: '\" + kindOf(nextReducer));\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(11) : \"Expected the observer to be an object. Instead, received: '\" + kindOf(observer) + \"'\");\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + kindOf(inputState) + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(12) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(13) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle '\" + ActionTypes.INIT + \"' or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var actionType = action && action.type;\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(14) : \"When called with an action of type \" + (actionType ? \"\\\"\" + String(actionType) + \"\\\"\" : '(unknown type)') + \", the slice reducer for key \\\"\" + _key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\");\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(16) : \"bindActionCreators expected an object or a function, but instead received: '\" + kindOf(actionCreators) + \"'. \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(15) : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread(_objectSpread({}, store), {}, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore };\n","import { createAction, createReducer } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport { DeviceID } from \"../models\";\nimport { TransportState } from \"../network/websocketTransport\";\nimport { ValueOf } from \"../types\";\nimport { classActions } from \"./class\";\n\nexport const setConnectionState = createAction<TransportState>(\n    \"setConnectionState\"\n);\nexport const connectionStatus = createReducer<TransportState>(\n    \"not-connected\",\n    (builder) => builder.addCase(setConnectionState, (_, { payload }) => payload)\n);\n\nexport const myDeviceId = createReducer<DeviceID | null>(null, (builder) =>\n    builder.addCase(classActions.join, (_, { payload }) => payload.deviceId)\n);\n\nexport const networkReducer = combineReducers({\n    connectionStatus,\n    myDeviceId,\n});\n\nconst networkActions = {\n    setConnectionState,\n};\n\nexport type NetworkAction = ReturnType<ValueOf<typeof networkActions>>;\n","import { Store } from \"@reduxjs/toolkit\";\nimport { nanoid } from \"nanoid\";\nimport {\n    Action,\n    ClassActionType,\n    classSliceActionPrefix,\n    NetworkHandlerCallback,\n    State,\n} from \"../ui\";\nimport { NewType } from \"../types\";\nimport {\n    ClassRequest,\n    IClassRequest,\n    ClassMessage,\n    IClassResponse,\n} from \"../protobuf\";\nimport { messageToClassAction } from \"../protobuf/actions\";\nimport { EventEmitter } from \"eventemitter3\";\nimport { setConnectionState } from \"../redux/network\";\nimport { TransportState, WSTransport } from \"./websocketTransport\";\nimport { PromiseCompleter } from \"./promiseCompleter\";\n\nexport type RequestID = NewType<string, \"RequestID\">;\nexport const newRequestId = (value: string): RequestID => value as RequestID;\n\nexport class Network<ApplicationState = unknown> {\n    private readonly rpc = new PromiseCompleter<void, string, RequestID>();\n    private transport?: WSTransport;\n\n    private readonly actionEmitter = new EventEmitter();\n    constructor(\n    /* eslint-disable no-unused-vars */\n    public readonly store: Store<ApplicationState, Action>,\n    public readonly selector: (\n      s: ApplicationState\n    ) => State /* eslint-enable no-unused-vars */\n    ) {}\n\n    public onClassAction<T extends ClassActionType = ClassActionType>(\n        actionType: T,\n        f: NetworkHandlerCallback<T>\n    ) {\n    // TODO: This event mapping is highly specific to the class slice, how to accomodate additional reducers/slices\n        const event = `${classSliceActionPrefix}/${actionType}`;\n        this.actionEmitter.addListener(event, f);\n        return () => {\n            this.actionEmitter.removeListener(event, f);\n        };\n    }\n\n    public async connect(url: string) {\n        if (this.transport) {\n            this.transport.disconnect();\n        }\n        this.transport = new WSTransport(\n            url,\n            (t, d) => this.onNetworkMessage(t, d),\n            (s) => this.onStateChange(s),\n            [\"live\"],\n            true\n        );\n        return await this.transport.connect();\n    }\n\n    public disconnect(code?: number, reason?: string) {\n        this.transport?.disconnect(code, reason);\n    }\n\n    private onStateChange(state: TransportState) {\n        this.store.dispatch(setConnectionState(state));\n    }\n\n    private onNetworkMessage(transport: WSTransport, data: unknown) {\n        if (!(data instanceof ArrayBuffer)) {\n            transport.disconnect(4401, \"Binary only protocol\");\n            return;\n        }\n        try {\n            if (data.byteLength <= 0) {\n                return;\n            }\n            const message = ClassMessage.decode(new Uint8Array(data));\n\n            if (message.response) {\n                this.handleResponse(message.response);\n            }\n\n            const action = messageToClassAction(message);\n            if (!action) {\n                return;\n            }\n\n            this.store.dispatch(action);\n            const state = this.selector(this.store.getState());\n            this.actionEmitter.emit(action.type, action.payload, state);\n        } catch (e) {\n            console.error(e);\n            transport.disconnect(4400, \"Parse error\");\n        }\n    }\n\n    private handleResponse(response: IClassResponse) {\n        if (!response.id) {\n            return;\n        }\n        const requestId = newRequestId(response.id);\n        if (response.error) {\n            this.rpc.reject(requestId, response.error);\n        } else {\n            this.rpc.resolve(requestId);\n        }\n    }\n\n    public async send(command: IClassRequest): Promise<void> {\n        if (!this.transport) {\n            throw Error(\"WebSocket has not been initialised\");\n        }\n        const requestId = nanoid() as RequestID;\n        const bytes = ClassRequest.encode({ requestId, ...command }).finish();\n        await this.transport.send(bytes);\n        return this.rpc.createPromise(requestId);\n    }\n}\n","import React, { useMemo, ReactNode } from \"react\";\nimport { useStore } from \"react-redux\";\nimport { Action, State } from \"../redux/reducer\";\nimport { Network } from \"../network/network\";\nimport NetworkContext from \"./networkContext\";\n\nexport interface NetworkProviderProps<ApplicationState = unknown> {\n  children?: ReactNode;\n  selector: (state: ApplicationState) => State;\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function NetworkProvider<ApplicationState = unknown>({\n    children,\n    selector,\n}: NetworkProviderProps<ApplicationState>) {\n    const store = useStore<ApplicationState, Action>();\n    const value = useMemo(() => new Network(store, selector), [store, selector]);\n    return (\n        <NetworkContext.Provider value={value as Network<unknown>}>\n            {children}\n        </NetworkContext.Provider>\n    );\n}\n","import React, { ReactNode, useMemo } from \"react\";\nimport { WebRtcContext, WebRtcManager } from \"./rtcContext\";\nexport interface WebRtcProviderProps {\n    children?: ReactNode;\n    endpoint: URL;\n    sessionId?: string;\n    onAuthorizationInvalid?: () => unknown;\n    onAuthorizationExpired?: () => unknown;\n    onAuthenticationInvalid?: () => unknown;\n    onAuthenticationExpired?: () => unknown;\n    onTokenMismatch?: () => unknown;\n    onMissingAuthenticationToken?: () => unknown;\n    onMissingAuthorizationToken?: () => unknown;\n}\n\nexport function WebRtcProvider({\n    children,\n    endpoint,\n    sessionId,\n    onAuthorizationInvalid,\n    onAuthorizationExpired,\n    onAuthenticationInvalid,\n    onAuthenticationExpired,\n    onTokenMismatch,\n    onMissingAuthenticationToken,\n    onMissingAuthorizationToken,\n}: WebRtcProviderProps) {\n    const value = useMemo(() => new WebRtcManager(\n        endpoint,\n        sessionId,\n        onAuthorizationInvalid,\n        onAuthorizationExpired,\n        onAuthenticationInvalid,\n        onAuthenticationExpired,\n        onTokenMismatch,\n        onMissingAuthenticationToken,\n        onMissingAuthorizationToken), []);\n    return (\n        <WebRtcContext.Provider value={value}>\n            {children}\n        </WebRtcContext.Provider>\n    );\n}\n","import { combineReducers } from \"redux\";\nimport { ClassAction, classReducer } from \"./class\";\nimport { NetworkAction, networkReducer } from \"./network\";\n\nexport const reducer = combineReducers({\n  class: classReducer,\n  network: networkReducer,\n});\n\nexport type State = ReturnType<typeof reducer>\nexport type Action =\n  | ClassAction\n  | NetworkAction\n","import { newUserRole, UserRole } from \"./models\";\n\nexport const roles = {\n    /** Consider using isTeacher() for comparison */\n    Teacher: newUserRole(\"teacher\"),\n    /** Consider using isStudent() for comparison */\n    Student: newUserRole(\"student\"),\n};\n\nexport function isTeacher({ role }: { role: UserRole }) {\n    return role === roles.Teacher;\n}\n\nexport function isStudent({ role }: { role: UserRole }) {\n    return role === roles.Student;\n}\n"],"names":["FeedbackType","QuickFeedbackType","ContentType","newUserId","value","newDeviceId","newActivityStreamId","newWebRtcStreamId","newTimestamp","newTrophyType","newUserRole","role","toLowerCase","values","o","Object","isAllowedToBecomeHost","INITIAL_ROOM_STATE","users","devices","chatMessages","content","type","Blank","contentLocation","hostDeviceId","undefined","classEndTime","join","_state","action","payload","state","endClass","timestamp","deviceConnect","name","device","id","userId","user","deviceIds","push","trophies","deviceDisconnect","deviceId","userIds","keys","sort","setHost","setContent","addChatMessage","chatMessage","setActivityStreamId","activityStreamId","activityStreamID","rewardTrophyToUser","to","trophy","rewardTrophyToAll","forEach","classSliceActionPrefix","classSlice","createSlice","initialState","reducers","classReducer","reducer","classActions","actions","validateChatMessage","text","console","error","validateContentType","validateContent","validateState","classState","m","validChatMessage","validContent","validatedDevice","validateDevice","validUser","validateUser","priorDeviceCount","length","filter","hasOwnProperty","classEndedTime","validTrophy","validateTrophy","map","webRtcStreamIds","webRTCStreamIDs","fromUserId","from","messageToClassAction","message","activityStreamIdChanged","activityStreamIdChangedAction","classEnded","classEndedAction","contentChanged","contentChangedAction","deviceConnected","deviceConnectedAction","deviceDisconnected","deviceDisconnectedAction","hostChanged","hostChangedAction","newChatMessage","newChatMessageAction","joinEvent","joinAction","trophyRewardedToAll","trophyRewardedToAllAction","trophyRewardedToUser","trophyRewardedToUserAction","event","toUserId","NetworkContext","React","createContext","useJoinClass","network","useContext","execute","joinClass","status","useAsyncCallback","url","connect","onError","e","useLeaveClass","leaveClass","reason","disconnect","useEndClass","useNetworkAction","useRewardTrophyToAll","trophyType","useRewardTrophyToUser","useSendChatMessage","sendChatMessage","useSetActivityStreamId","useSetContent","useSetHost","buildRequest","async","args","request","send","useNetworkHandler","actionType","callback","useEffect","onClassAction","useNetworkState","selector","equalityCheck","useSelector","displayName","newUserDeviceId","JSON","stringify","useUserDevices","filterRole","userDevices","class","resolveUserDevice","useHostUserDevice","useLocalUserDevice","myDeviceId","has","prototype","prefix","Events","EE","fn","context","once","this","addListener","emitter","TypeError","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","events","names","call","slice","getOwnPropertySymbols","concat","listeners","handlers","i","l","ee","Array","listenerCount","emit","a1","a2","a3","a4","a5","len","arguments","removeListener","apply","j","on","removeAllListeners","off","prefixed","module","TrackSender","constructor","getSfu","getTrack","sessionId","producer","_producer","stateChange","Promise","r","promise","stateSending","stateNotSending","stateSwitchSfu","resolve","finally","sfuId","sfu","start","produceTrack","stop","close","s","h","d","w","y","ms","val","options","parse","isFinite","long","fmtLong","fmtShort","Error","str","String","match","exec","n","parseFloat","msAbs","Math","abs","round","plural","isPlural","setup","env","createDebug","namespace","prevTime","namespacesCache","enabledCache","enableOverride","debug","enabled","self","curr","Number","Date","diff","prev","coerce","unshift","index","replace","format","formatter","formatters","splice","formatArgs","log","useColors","color","selectColor","extend","destroy","defineProperty","enumerable","configurable","get","namespaces","set","v","init","delimiter","newDebug","toNamespace","regexp","toString","substring","default","stack","disable","skips","enable","save","split","RegExp","substr","test","humanize","require$$0","warn","key","hash","charCodeAt","colors","load","common","exports","c","lastC","storage","setItem","removeItem","getItem","process","DEBUG","window","__nwjs","navigator","userAgent","document","documentElement","style","WebkitAppearance","firebug","exception","table","parseInt","$1","localStorage","localstorage","warned","t","Symbol","toStringTag","__esModule","bind","p","getFirstMatch","getSecondMatch","matchAndReturnConst","getWindowsVersionName","getMacOSVersionName","getAndroidVersionName","getVersionPrecision","compareVersions","a","max","u","reverse","min","find","assign","getBrowserAlias","BROWSER_ALIASES_MAP","getBrowserTypeByAlias","BROWSER_MAP","ENGINE_MAP","OS_MAP","PLATFORMS_MAP","Bada","BlackBerry","Chrome","Chromium","Electron","Epiphany","Firefox","Focus","Generic","Googlebot","Maxthon","Opera","PhantomJS","Puffin","QupZilla","QQ","QQLite","Safari","Sailfish","SeaMonkey","Sleipnir","Swing","Tizen","Vivaldi","WeChat","Roku","amazon_silk","android","bada","blackberry","chrome","chromium","electron","epiphany","firefox","focus","generic","googlebot","google_search","ie","k_meleon","maxthon","edge","mz","naver","opera","opera_coast","phantomjs","puffin","qupzilla","qq","qqlite","safari","sailfish","samsung_internet","seamonkey","sleipnir","swing","tizen","uc","vivaldi","webos","wechat","yandex","tablet","mobile","desktop","tv","WindowsPhone","Windows","MacOS","iOS","Android","WebOS","Linux","ChromeOS","PlayStation4","EdgeHTML","Blink","Trident","Presto","Gecko","WebKit","writable","getParser","getResult","_ua","parsedResult","getUA","parseBrowser","browser","some","describe","getBrowser","getBrowserName","getBrowserVersion","version","getOS","os","parseOS","getOSName","getOSVersion","getPlatform","platform","parsePlatform","getPlatformType","getEngine","engine","parseEngine","getEngineName","satisfies","isOS","isPlatform","f","isBrowser","compareVersion","indexOf","isEngine","is","search","versionName","vendor","model","__importDefault","mod","Logger_1","debug_1","APP_NAME","Logger","_debug","_warn","_error","info","EnhancedEventEmitter_1","events_1","require$$1","logger","EnhancedEventEmitter","super","setMaxListeners","Infinity","safeEmit","numListeners","Boolean","reject","errors","UnsupportedError","captureStackTrace","InvalidStateError","clone","data","defaultValue","generateRandomNumber","random","utils","Level1","ProfileLevelId","profile","level","DefaultProfileLevelId","BitPattern","_mask","byteMaskString","_maskedValue","isMatch","ProfilePattern","profile_idc","profile_iop","ProfilePatterns","isLevelAsymmetryAllowed","params","level_asymmetry_allowed","profile_level_id_numeric","level_idc","pattern","profile_level_id","profile_idc_iop_string","levelStr","parseProfileLevelId","params1","params2","profile_level_id_1","parseSdpProfileLevelId","profile_level_id_2","local_supported_params","remote_offered_params","local_profile_level_id","remote_profile_level_id","local_level","remote_level","min_level","b","isLessLevel","answer_level","profileLevelIdToString","__createBinding","k","k2","__setModuleDefault","__importStar","result","ortc","h264","RTP_PROBATOR_MID","RTP_PROBATOR_SSRC","RTP_PROBATOR_CODEC_PAYLOAD_TYPE","validateRtpCapabilities","caps","codecs","isArray","codec","validateRtpCodecCapability","headerExtensions","ext","validateRtpHeaderExtension","MimeTypeRegex","mimeType","mimeTypeMatch","kind","preferredPayloadType","clockRate","channels","parameters","rtcpFeedback","fb","validateRtcpFeedback","parameter","uri","preferredId","preferredEncrypt","direction","validateRtpParameters","mid","validateRtpCodecParameters","validateRtpHeaderExtensionParameters","encodings","encoding","validateRtpEncodingParameters","rtcp","validateRtcpParameters","payloadType","encrypt","ssrc","rid","rtx","dtx","scalabilityMode","cname","reducedSize","validateSctpCapabilities","numStreams","validateNumSctpStreams","OS","MIS","validateSctpParameters","port","maxMessageSize","validateSctpStreamParameters","streamId","orderedGiven","ordered","maxPacketLifeTime","maxRetransmits","label","protocol","getExtendedRtpCapabilities","localCaps","remoteCaps","extendedRtpCapabilities","remoteCodec","isRtxCodec","matchingLocalCodec","localCodec","matchCodecs","strict","modify","extendedCodec","localPayloadType","localRtxPayloadType","remotePayloadType","remoteRtxPayloadType","localParameters","remoteParameters","reduceRtcpFeedback","matchingLocalRtxCodec","apt","matchingRemoteRtxCodec","remoteExt","matchingLocalExt","localExt","matchHeaderExtensions","extendedExt","sendId","recvId","getRecvRtpCapabilities","rtpCapabilities","rtxCodec","extendedExtension","getSendingRtpParameters","rtpParameters","getSendingRemoteRtpParameters","reduceCodecs","capCodec","filteredCodecs","idx","generateProbatorRtpParameters","videoRtpParameters","canSend","canReceive","firstMediaCodec","aCodec","bCodec","aMimeType","isSameProfile","selectedProfileLevelId","generateProfileLevelIdForAnswer","aExt","bExt","codecA","codecB","reducedRtcpFeedback","aFb","matchingBFb","bFb","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","next","rejected","done","then","lib","AwaitQueue","ClosedErrorClass","StoppedErrorClass","closed","pendingTasks","size","pendingTask","stopped","task","enqueuedAt","executedAt","dump","now","enqueuedTime","getTime","executingTime","executeTask","shift","Producer_1","errors_1","require$$2","Producer","localId","rtpSender","track","stopTracks","disableTrackOnPause","zeroRtpOnPause","appData","_closed","_observer","_id","_localId","_rtpSender","_track","_kind","_rtpParameters","_paused","_maxSpatialLayer","_stopTracks","_disableTrackOnPause","_zeroRtpOnPause","_appData","_onTrackEnded","_handleTrack","paused","maxSpatialLayer","observer","_destroyTrack","transportClosed","safeEmitAsPromise","pause","catch","resume","readyState","spatialLayer","addEventListener","removeEventListener","Consumer_1","Consumer","producerId","rtpReceiver","_producerId","_rtpReceiver","DataProducer_1","DataProducer","dataChannel","sctpStreamParameters","_dataChannel","_sctpStreamParameters","_handleDataChannel","bufferedAmount","bufferedAmountLowThreshold","errorDetail","sctpCauseCode","DataConsumer_1","DataConsumer","dataProducerId","_dataProducerId","binaryType","Transport_1","awaitqueue_1","require$$3","require$$4","require$$5","require$$6","require$$7","require$$8","require$$9","Transport","iceParameters","iceCandidates","dtlsParameters","sctpParameters","iceServers","iceTransportPolicy","additionalSettings","proprietaryConstraints","handlerFactory","canProduceByKind","_connectionState","_producers","Map","_consumers","_dataProducers","_dataConsumers","_probatorConsumerCreated","_awaitQueue","_direction","_extendedRtpCapabilities","_canProduceByKind","_maxSctpMessageSize","bundlePolicy","rtcpMuxPolicy","sdpSemantics","_handler","run","_handleHandler","handler","connectionState","clear","consumer","dataProducer","dataConsumer","getTransportStats","restartIce","updateIceServers","codecOptions","normalizedEncodings","normalizedEncoding","active","scaleResolutionDownBy","maxBitrate","maxFramerate","adaptivePtime","priority","networkPriority","_handleProducer","stopSending","error2","receive","trackId","_handleConsumer","probatorRtpParameters","sendDataChannel","_handleDataProducer","receiveDataChannel","_handleDataConsumer","errback","delete","replaceTrack","setMaxSpatialLayer","setRtpEncodingParameters","getSenderStats","stopReceiving","pauseReceiving","resumeReceiving","getReceiverStats","grammar","grammarModule","reg","z","rate","address","subtype","config","sessionConfig","raddr","tcptype","generation","attribute","dir2","clksrcExt","mediaClockValue","rateNumerator","rateDenominator","obj","toIntIfInt","parseReg","location","needsBlank","keyLocation","rawName","attachProperties","validLine","sdp","session","media","rtp","fmtp","paramReducer","acc","expr","reduce","parseParams","candidates","parts","component","ip","item","stream","scid","formatRegExp","formatStr","x","arg","makeLine","Function","defaultOuterOrder","defaultInnerOrder","writer","opts","mLine","payloads","outerOrder","innerOrder","el","parser","parseFmtpConfig","parsePayloads","parseRemoteCandidates","parseImageAttributes","parseSimulcastStreamList","commonUtils","sdpTransform","extractRtpCapabilities","sdpObject","codecsMap","gotAudio","gotVideo","rtcpFb","feedback","headerExtension","extractDtlsParameters","mediaObject","iceUfrag","fingerprint","fingerprints","algorithm","getCname","offerMediaObject","ssrcCnameLine","ssrcs","line","applyCodecParameters","offerRtpParameters","answerMediaObject","spropStereo","stereo","getRtpEncodings","Set","add","ssrcToRtxSsrc","ssrcGroups","semantics","rtxSsrc","addLegacySimulcast","ssrcMsidLine","firstSsrc","firstRtxSsrc","rtxSsrcs","unifiedPlanUtils","HandlerInterface_1","HandlerInterface","MediaSection_1","MediaSection","planB","_mediaObject","_planB","setIceParameters","candidate","candidateObject","foundation","transport","tcpType","endOfCandidates","iceOptions","setDtlsRole","getObject","usernameFragment","icePwd","password","simulcast","simulcast_03","rids","extmapAllowMixed","AnswerMediaSection","plainRtpParameters","answerRtpParameters","connection","ipVersion","getCodecName","codecParameters","opusStereo","opusFec","opusDtx","opusMaxPlaybackRate","opusMaxAverageBitrate","opusPtime","videoGoogleStartBitrate","videoGoogleMaxBitrate","videoGoogleMinBitrate","offerCodec","useinbandfec","usedtx","maxplaybackrate","maxaveragebitrate","ptime","dir1","list1","rtcpMux","rtcpRsize","xGoogleFlag","sctpPort","sctpmap","app","sctpmapNumber","OfferMediaSection","oldDataChannelSpec","msid","planBReceive","includes","trim","planBStopReceiving","group","RemoteSdp_1","RemoteSdp","_mediaSections","_midToIndex","_iceParameters","_iceCandidates","_dtlsParameters","_sctpParameters","_plainRtpParameters","_sdpObject","origin","ipVer","netType","sessionVersion","username","timing","iceLite","icelite","msidSemantic","semantic","token","numFingerprints","groups","mids","updateIceParameters","mediaSection","updateDtlsRole","getNextMediaSectionIdx","reuseMid","_replaceMediaSection","_addMediaSection","oldMediaSection","disableMediaSection","closeMediaSection","_firstMid","_regenerateBundleMids","sendSctpAssociation","receiveSctpAssociation","getSdp","write","newMediaSection","scalabilityModes","ScalabilityModeRegex","spatialLayers","temporalLayers","Chrome74_1","sdpCommonUtils","sdpUnifiedPlanUtils","scalabilityModes_1","SCTP_NUM_STREAMS","Chrome74","_mapMidTransceiver","_sendStream","MediaStream","_hasDataChannelMediaSection","_nextSendSctpStreamId","_transportReady","static","_pc","pc","RTCPeerConnection","addTransceiver","offer","createOffer","_remoteSdp","_sendingRtpParametersByKind","audio","video","_sendingRemoteRtpParametersByKind","_forcedLocalDtlsRole","iceConnectionState","configuration","getConfiguration","setConfiguration","iceRestart","setLocalDescription","answer","setRemoteDescription","createAnswer","getStats","_a","_assertSendDirection","sendingRtpParameters","sendingRemoteRtpParameters","mediaSectionIdx","transceiver","streams","sendEncodings","localSdpObject","_setupTransport","localDtlsRole","hackVp9Svc","layers","localDescription","newEncodings","sender","removeTrack","getParameters","setParameters","negotiated","createDataChannel","_assertRecvDirection","getTransceivers","receiver","Chrome70_1","Chrome70","desiredEncoding","maxRetransmitTime","planBUtils","Chrome67_1","sdpPlanBUtils","Chrome67","_mapSendLocalIdRtpSender","_nextSendLocalId","_mapRecvLocalIdInfo","offerToReceiveAudio","offerToReceiveVideo","addTrack","getSenders","getTracks","signalingState","oldTrack","getReceivers","Chrome55_1","Chrome55","_mapSendLocalIdTrack","addStream","getRemoteStreams","getTrackById","Firefox60_1","Firefox60","canvas","createElement","getContext","fakeVideoTrack","captureStream","getVideoTracks","videoTransceiver","remove","Safari12_1","Safari12","Safari11_1","Safari11","edgeUtils","getCapabilities","nativeCaps","RTCRtpReceiver","numChannels","mangleRtpParameters","muxId","Edge11_1","Edge11","_rtpSenders","_rtpReceivers","_iceGatherer","_iceTransport","_dtlsTransport","_remoteIceParameters","_remoteIceCandidates","_remoteDtlsParameters","_cname","_setIceGatherer","_setIceTransport","_setDtlsTransport","addRemoteCandidate","RTCRtpSender","useRtx","_codec","mux","edgeRtpParameters","setTrack","iceGatherer","RTCIceGatherer","gatherPolicy","gather","iceTransport","RTCIceTransport","pair","dtlsTransport","RTCDtlsTransport","getLocalParameters","ReactNative_1","ReactNative","release","Device_1","bowser_1","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","detectDevice","product","ua","ios","RTCRtpTransceiver","Device","handlerName","Handler","_loaded","_handlerFactory","createFactory","_handlerName","_recvRtpCapabilities","_sctpCapabilities","loaded","sctpCapabilities","routerRtpCapabilities","nativeRtpCapabilities","getNativeRtpCapabilities","getNativeSctpCapabilities","canProduce","createSendTransport","_createTransport","createRecvTransport","RtpParameters","SctpParameters","__exportStar","types","WSTransport","onMessageCallback","onStateChange","protocols","autoconnect","receiveMessageTimeoutTime","sendKeepAliveMessageInterval","_connect","code","ws","receiveTimeoutReference","clearTimeout","sendTimeoutReference","resetNetworkSendTimeout","_wsPromise","WebSocket","CLOSED","connectionTimer","setTimeout","onOpen","onClose","onMessage","resetNetworkReceiveTimeout","Uint8Array","PromiseCompleter","callbacks","createPromise","useCallbacks","requestId","completer","Memoize","cache","newProducerID","SFU","loadDevice","response","createConsumerTransport","consumerTransportCreated","success","connectConsumerTransport","createProducerTransport","producerTransportCreated","connectProducerTransport","producerCreated","producerPromise","resolver","producerResolvers","producers","pausedGlobally","setRtpCapabilities","getRouterRtpCapabilities","_","onTransportMessage","onTransportStateChange","consumers","consumeTrack","createProducer","consumerPromise","createConsumer","retryTimer","producerTransport","mediaSoupProducer","produce","pauseGlobally","consumerTransport","sendRtpCapabilities","consumerCreated","consume","pauseForEveryone","generateRequestId","promiseCompleter","_requestId","SfuConnectionError","retryAttempts","retryMaxAttempts","waitRetry","retryDelay","handleMessage","pausedSource","onSourcePaused","onGloballyPaused","consumerClosed","closeTrack","producerClosed","pausedAtSource","Track","requestBroadcastStateChange","_pausedGlobally","notifyPause","requestPauseGlobally","isMine","pausedLocally","allSettled","_pausedAtSource","retries","producerError","trackLocationEquals","trackInfoEquals","Room","endpoint","tracks","trackInfoByProducerId","getSessionTracks","producerIds","sessionMap","flatMap","excludeId","_producerSfuId","addTrackInfo","removeTrackInfo","setProducerSfuId","trackInfo","currentTrackInfo","addProducerIdToSession","removeProducerIdFromSession","sessionTracks","WebRtcManager","baseEndpoint","onAuthorizationInvalid","onAuthorizationExpired","onAuthenticationExpired","onAuthenticationInvalid","onTokenMismatch","onMissingAuthenticationToken","onMissingAuthorizationToken","selectProducerSfu","microphoneGetter","microphoneConstraints","cameraGetter","cameraConstraints","screenshareGetter","screenshareConstraints","wsEndpoint","URL","pathname","room","sfus","camera","microphone","screenshare","changeState","onSfuAuthError","SfuAuthErrorCodes","INVALID","EXPIRED","NOT_BEFORE","UNKNOWN_ERROR","getSfuUrl","err","onSfuConnectionError","getProducerSfuId","getAudioConstraints","audioTrack","mediaDevices","getUserMedia","getVideoConstraints","videoTrack","getConstraints","getDisplayMedia","firstTrack","getAudioTracks","WebRtcContext","useWebRtcConstraints","ctx","getCameraConstraints","setCameraConstraints","constraints","getMicrophoneConstraints","setMicrophoneConstraints","getScreenshareConstraints","setScreenshareConstraints","useCamera","useTrackSender","useMicrophone","useScreenshare","useStream","audioName","videoName","useCallback","audioLocation","videoLocation","setLocations","useState","onUpdate","senders","useTrack","useMediaStreamTracks","currentPromise","trackPromise","useAsync","hasLocation","useTrackState","globalPause","trackSender","rerender","useRerender","setSending","isActiveLocally","isConsumable","isPausedLocally","isPausedGlobally","isPausedAtSource","nextTrackSet","useMemo","previousTrackSet","useReducer","nanoid","bytes","crypto","getRandomValues","byte","toUpperCase","aspromise","asPromise","offset","pending","base64","string","charAt","ceil","b64","s64","encode","buffer","end","chunk","fromCharCode","invalidEncoding","decode","eventemitter","_listeners","float","factory","Float32Array","f32","f8b","le","writeFloat_f32_cpy","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","exponent","floor","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","inquire_1","inquire","moduleName","eval","utf8","read","c1","c2","pool_1","pool","alloc","SIZE","MAX","slab","longbits","LongBits","util","zero","toNumber","zzEncode","zzDecode","zeroHash","fromNumber","isString","Long","fromString","low","high","unsigned","toLong","fromHash","toHash","mask","part0","part1","part2","merge","dst","src","ifNotSet","newError","CustomError","properties","isNode","global","versions","node","emptyArray","freeze","emptyObject","isInteger","isObject","isset","isSet","prop","Buffer","utf8Write","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","bits","fromBits","lcFirst","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","json","_configure","allocUnsafe","Writer","BufferWriter","Op","noop","State","head","tail","states","writeByte","writeVarint32","VarintOp","writeVarint64","writeFixed32","subarray","_push","uint32","int32","sint32","uint64","int64","sint64","bool","fixed32","sfixed32","fixed64","sfixed64","double","writeBytes","fork","reset","ldelim","finish","BufferWriter_","writer_buffer","writeStringBuffer","writeBytesBuffer","copy","byteLength","reader","Reader","BufferReader","indexOutOfRange","writeLength","RangeError","create_array","isBuffer","readLongVarint","readFixed32_end","readFixed64","_slice","skip","skipType","wireType","BufferReader_","reader_buffer","utf8Slice","service","Service","rpcImpl","requestDelimited","responseDelimited","rpcCall","method","requestCtor","responseCtor","endedByRPC","roots","protobuf","configure","build","rpc","minimal","$protobuf","$Reader","$Writer","$util","$root","ClassRequest","$oneOfFields","EndClassCommand","SetHostCommand","SetContentCommand","SetActivityStreamIdCommand","RewardTrophyToUserCommand","RewardTrophyToAllCommand","SendChatMessageCommand","encodeDelimited","tag","decodeDelimited","verify","command","fromObject","object","toObject","defaults","oneofs","toJSON","ClassResponse","ClassMessage","JoinEvent","DeviceConnectedEvent","DeviceDisconnectedEvent","ClassEndedEvent","HostChangedEvent","ContentChangedEvent","ActivityStreamIdChangedEvent","TrophyRewardedToUserEvent","TrophyRewardedToAllEvent","NewChatMessageEvent","Content","ClassState","fromValue","Trophy","ChatMessage","User","end2","tag2","keys2","arrays","objects","formatProdErrorMessage","randomString","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","isPlainObject","proto","getPrototypeOf","miniKindOf","isDate","isError","constructorName","ctorName","stackTraceLimit","toDateString","getDate","setDate","kindOf","typeOfVal","NODE_ENV","warning","getUnexpectedStateShapeWarningMessage","inputState","unexpectedKeyCache","reducerKeys","argumentName","unexpectedKeys","assertReducerShape","combineReducers","finalReducers","shapeAssertionError","finalReducerKeys","warningMessage","hasChanged","nextState","_i","_key","previousStateForKey","nextStateForKey","isCrushed","setConnectionState","createAction","connectionStatus","createReducer","builder","addCase","networkReducer","newRequestId","Network","store","actionEmitter","onNetworkMessage","dispatch","ArrayBuffer","handleResponse","getState","NetworkProvider","children","useStore","Provider","WebRtcProvider","roles","Teacher","Student","isTeacher","isStudent"],"mappings":"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"}